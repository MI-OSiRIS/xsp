/* oscarsAPI.h
   Generated by wsdl2h 2.8.1 from https://192.168.1.103:8443/axis2/services/OSCARS?wsdl and WS-typemap.dat
   2011-03-29 02:12:59 GMT

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS
   USE THE soapcpp2-GENERATED SOURCE CODE FILES FOR YOUR PROJECT BUILDS

   gSOAP XML Web services tools.
   Copyright (C) 2001-2010 Robert van Engelen, Genivia Inc. All Rights Reserved.
   Part of this software is released under one of the following licenses:
   GPL or Genivia's license for commercial use.
*/

/** @page page_notes Usage Notes

NOTE:

 - Run soapcpp2 on oscarsAPI.h to generate the SOAP/XML processing logic.
   Use soapcpp2 option -I to specify paths for #import
   To build with STL, 'stlvector.h' is imported from 'import' dir in package.
   Use soapcpp2 option -i to generate improved proxy and server classes.
 - Use wsdl2h options -c and -s to generate pure C code or C++ code without STL.
 - Use 'typemap.dat' to control namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Use Doxygen (www.doxygen.org) on this file to generate documentation.
 - Use wsdl2h options -nname and -Nname to globally rename the prefix 'ns'.
 - Use wsdl2h option -d to enable DOM support for xsd:anyType.
 - Use wsdl2h option -g to auto-generate readers and writers for root elements.
 - Struct/class members serialized as XML attributes are annotated with a '@'.
 - Struct/class members that have a special role are annotated with a '$'.

WARNING:

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS.
   USE THE SOURCE CODE FILES GENERATED BY soapcpp2 FOR YOUR PROJECT BUILDS:
   THE soapStub.h FILE CONTAINS THIS CONTENT WITHOUT ANNOTATIONS.

LICENSE:

@verbatim
--------------------------------------------------------------------------------
gSOAP XML Web services tools
Copyright (C) 2000-2010, Robert van Engelen, Genivia Inc. All Rights Reserved.

This software is released under one of the following two licenses:
1) GPL or 2) Genivia's license for commercial use.
--------------------------------------------------------------------------------
1) GPL license.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA 02111-1307 USA

Author contact information:
engelen@genivia.com / engelen@acm.org
--------------------------------------------------------------------------------
2) A commercial-use license is available from Genivia, Inc., contact@genivia.com
--------------------------------------------------------------------------------
@endverbatim

*/


//gsoapopt cw

/******************************************************************************\
 *                                                                            *
 * Definitions                                                                *
 *   http://oscars.es.net/OSCARS                                              *
 *                                                                            *
\******************************************************************************/

/* WSDL Documentation:

        This is WSDL for the OSCARS public reservation interface. These
        messages must be signed using the following WS-secuirty
        standards. The message is time stamped and includes the X.509
        certificate of the signing entity. The timestamp, certificate
        and message body are all signed. DRAFT V1.0 Nov 2006
    
*/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/

#import "wsa5.h"	// wsa5 = <http://www.w3.org/2005/08/addressing>
#import "wsse.h"

/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/

// This service uses SOAP 1.2 namespaces:
//gsoap SOAP-ENV schema namespace:	http://www.w3.org/2003/05/soap-envelope
//gsoap SOAP-ENC schema namespace:	http://www.w3.org/2003/05/soap-encoding

/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

ns1 = "http://oscars.es.net/OSCARS"
ns2 = ""
ns2 = ""
ns3 = "http://ogf.org/schema/network/topology/ctrlPlane/20080828/"
ns4 = "http://docs.oasis-open.org/wsn/b-2"
ns5 = "http://docs.oasis-open.org/wsrf/r-2"
ns6 = "http://docs.oasis-open.org/wsrf/bf-2"

*/

#define SOAP_NAMESPACE_OF_ns1	"http://oscars.es.net/OSCARS"
//gsoap ns1   schema namespace:	http://oscars.es.net/OSCARS
//gsoap ns1   schema elementForm:	qualified
//gsoap ns1   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_ns2	""
//gsoap ns2   schema namespace:	
//gsoap ns2   schema form:	unqualified

#define SOAP_NAMESPACE_OF_ns2	""
//gsoap ns2   schema namespace:	
//gsoap ns2   schema form:	unqualified

/// @brief WARNING: THIS IS NOT THE OFFICIAL SCHEMA DOCUMENT FOR THE NMWG CONTROL PLANE TOPOLOGY SCHEMA. This document is used by OSCARS to generate Java classes with Axis2. Due to some software limitations this version of the schema is used to generate those classes. It assumes all elements are given in the order defined because it uses xsd:sequence elements instead of xsd:choice elements. It also does not yet include the bidirectionalPath element. The Path element is that most heavily used by OSCARS and for XML requests that use more of the topology schema it is recommended a non Axis2 cient is used for best results.
#define SOAP_NAMESPACE_OF_ns3	"http://ogf.org/schema/network/topology/ctrlPlane/20080828/"
//gsoap ns3   schema namespace:	http://ogf.org/schema/network/topology/ctrlPlane/20080828/
//gsoap ns3   schema elementForm:	qualified
//gsoap ns3   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_ns4	"http://docs.oasis-open.org/wsn/b-2"
//gsoap ns4   schema namespace:	http://docs.oasis-open.org/wsn/b-2
//gsoap ns4   schema elementForm:	qualified
//gsoap ns4   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_ns5	"http://docs.oasis-open.org/wsrf/r-2"
//gsoap ns5   schema namespace:	http://docs.oasis-open.org/wsrf/r-2
//gsoap ns5   schema elementForm:	qualified
//gsoap ns5   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_ns6	"http://docs.oasis-open.org/wsrf/bf-2"
//gsoap ns6   schema namespace:	http://docs.oasis-open.org/wsrf/bf-2
//gsoap ns6   schema elementForm:	qualified
//gsoap ns6   schema attributeForm:	unqualified

/******************************************************************************\
 *                                                                            *
 * Built-in Schema Types and Top-Level Elements and Attributes                *
 *                                                                            *
\******************************************************************************/


// Imported type "http://www.w3.org/2005/08/addressing":EndpointReferenceType defined by wsa5__EndpointReferenceType

/// Built-in type "xs:boolean".
enum xsd__boolean_ { _false, _true };


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://oscars.es.net/OSCARS                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://ogf.org/schema/network/topology/ctrlPlane/20080828/               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/


/// union of values "xsd:dateTime xsd:duration"
typedef char* ns4__AbsoluteOrRelativeTimeType;

/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/r-2                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://ogf.org/schema/network/topology/ctrlPlane/20080828/               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/r-2                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://oscars.es.net/OSCARS                                              *
 *                                                                            *
\******************************************************************************/


/// "http://oscars.es.net/OSCARS":resCreateContent is a complexType.
struct ns1__resCreateContent
{
/// Element globalReservationId of type xs:string.
    char*                                globalReservationId            0;	///< Optional element.
/// Element startTime of type xs:long.
    LONG64                               startTime                      1;	///< Required element.
/// Element endTime of type xs:long.
    LONG64                               endTime                        1;	///< Required element.
/// Element bandwidth of type xs:int.
    int                                  bandwidth                      1;	///< Required element.
/// Element description of type xs:string.
    char*                                description                    1;	///< Required element.
/// Element pathInfo of type "http://oscars.es.net/OSCARS":pathInfo.
    struct ns1__pathInfo*                pathInfo                       1;	///< Required element.
};

/// "http://oscars.es.net/OSCARS":createReply is a complexType.
struct ns1__createReply
{
/// Element globalReservationId of type xs:string.
    char*                                globalReservationId            1;	///< Required element.
/// Element token of type xs:string.
    char*                                token                          0;	///< Optional element.
/// Element status of type xs:string.
    char*                                status                         1;	///< Required element.
/// Element pathInfo of type "http://oscars.es.net/OSCARS":pathInfo.
    struct ns1__pathInfo*                pathInfo                       0;	///< Optional element.
};

/// "http://oscars.es.net/OSCARS":modifyResContent is a complexType.
struct ns1__modifyResContent
{
/// Element globalReservationId of type xs:string.
    char*                                globalReservationId            1;	///< Required element.
/// Element startTime of type xs:long.
    LONG64                               startTime                      1;	///< Required element.
/// Element endTime of type xs:long.
    LONG64                               endTime                        1;	///< Required element.
/// Element bandwidth of type xs:int.
    int                                  bandwidth                      1;	///< Required element.
/// Element description of type xs:string.
    char*                                description                    1;	///< Required element.
/// Element pathInfo of type "http://oscars.es.net/OSCARS":pathInfo.
    struct ns1__pathInfo*                pathInfo                       0;	///< Optional element.
};

/// "http://oscars.es.net/OSCARS":modifyResReply is a complexType.
struct ns1__modifyResReply
{
/// Element reservation of type "http://oscars.es.net/OSCARS":resDetails.
    struct ns1__resDetails*              reservation                    1;	///< Required element.
};

/// "http://oscars.es.net/OSCARS":getTopologyContent is a complexType.
struct ns1__getTopologyContent
{
/// Element topologyType of type xs:string.
    char*                                topologyType                   1;	///< Required element.
};

/// "http://oscars.es.net/OSCARS":getTopologyResponseContent is a complexType.
struct ns1__getTopologyResponseContent
{
/// Element reference "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":topology.
    struct ns3__CtrlPlaneTopologyContent*  ns3__topology                  1;	///< Required element.
};

/// "http://oscars.es.net/OSCARS":createPathContent is a complexType.
struct ns1__createPathContent
{
/// Element token of type xs:string.
    char*                                token                          0;	///< Optional element.
/// Element globalReservationId of type xs:string.
    char*                                globalReservationId            1;	///< Required element.
};

/// "http://oscars.es.net/OSCARS":createPathResponseContent is a complexType.
struct ns1__createPathResponseContent
{
/// Element globalReservationId of type xs:string.
    char*                                globalReservationId            1;	///< Required element.
/// Element status of type xs:string.
    char*                                status                         1;	///< Required element.
};

/// "http://oscars.es.net/OSCARS":refreshPathContent is a complexType.
struct ns1__refreshPathContent
{
/// Element token of type xs:string.
    char*                                token                          0;	///< Optional element.
/// Element globalReservationId of type xs:string.
    char*                                globalReservationId            1;	///< Required element.
};

/// "http://oscars.es.net/OSCARS":refreshPathResponseContent is a complexType.
struct ns1__refreshPathResponseContent
{
/// Element globalReservationId of type xs:string.
    char*                                globalReservationId            1;	///< Required element.
/// Element status of type xs:string.
    char*                                status                         1;	///< Required element.
};

/// "http://oscars.es.net/OSCARS":teardownPathContent is a complexType.
struct ns1__teardownPathContent
{
/// Element token of type xs:string.
    char*                                token                          0;	///< Optional element.
/// Element globalReservationId of type xs:string.
    char*                                globalReservationId            1;	///< Required element.
};

/// "http://oscars.es.net/OSCARS":teardownPathResponseContent is a complexType.
struct ns1__teardownPathResponseContent
{
/// Element globalReservationId of type xs:string.
    char*                                globalReservationId            1;	///< Required element.
/// Element status of type xs:string.
    char*                                status                         1;	///< Required element.
};

/// "http://oscars.es.net/OSCARS":resDetails is a complexType.
struct ns1__resDetails
{
/// Element globalReservationId of type xs:string.
    char*                                globalReservationId            1;	///< Required element.
/// Element login of type xs:string.
    char*                                login                          1;	///< Required element.
/// Element status of type xs:string.
    char*                                status                         1;	///< Required element.
/// Element startTime of type xs:long.
    LONG64                               startTime                      1;	///< Required element.
/// Element endTime of type xs:long.
    LONG64                               endTime                        1;	///< Required element.
/// Element createTime of type xs:long.
    LONG64                               createTime                     1;	///< Required element.
/// Element bandwidth of type xs:int.
    int                                  bandwidth                      1;	///< Required element.
/// Element description of type xs:string.
    char*                                description                    1;	///< Required element.
/// Element pathInfo of type "http://oscars.es.net/OSCARS":pathInfo.
    struct ns1__pathInfo*                pathInfo                       1;	///< Required element.
};

/// "http://oscars.es.net/OSCARS":listRequest is a complexType.
struct ns1__listRequest
{
/// Size of array of char* is 0..5
   $int                                  __sizeresStatus                0:5;
/// Pointer to array char* of length 0..5
    char*                               *resStatus                      0:5;
/// SEQUENCE OF ELEMENTS <xs:sequence minOccurs="0">
   $int                                  __size_listRequest_sequence    0;
    struct __ns1__listRequest_sequence
    {
/// Element startTime of type xs:long.
    LONG64                               startTime                      1;	///< Required element.
/// Element endTime of type xs:long.
    LONG64                               endTime                        1;	///< Required element.
    }                                   *__listRequest_sequence        ;
//  END OF SEQUENCE
/// Element description of type xs:string.
    char*                                description                    0;	///< Optional element.
/// Size of array of char* is 0..unbounded
   $int                                  __sizelinkId                   0;
/// Pointer to array char* of length 0..unbounded
    char*                               *linkId                         0;
/// Size of array of struct ns1__vlanTag* is 0..unbounded
   $int                                  __sizevlanTag                  0;
/// Pointer to array struct ns1__vlanTag* of length 0..unbounded
    struct ns1__vlanTag*                *vlanTag                        0;
/// Element resRequested of type xs:int.
    int*                                 resRequested                   0;	///< Optional element.
/// Element resOffset of type xs:int.
    int*                                 resOffset                      0;	///< Optional element.
};

/// "http://oscars.es.net/OSCARS":listReply is a complexType.
struct ns1__listReply
{
/// Size of array of struct ns1__resDetails* is 0..unbounded
   $int                                  __sizeresDetails               0;
/// Pointer to array struct ns1__resDetails* of length 0..unbounded
    struct ns1__resDetails*             *resDetails                     0;
/// Element totalResults of type xs:int.
    int*                                 totalResults                   0;	///< Optional element.
};

/// "http://oscars.es.net/OSCARS":forwardPayload is a complexType.
struct ns1__forwardPayload
{
/// Element contentType of type xs:string.
    char*                                contentType                    1;	///< Required element.
/// Element createReservation of type "http://oscars.es.net/OSCARS":resCreateContent.
    struct ns1__resCreateContent*        createReservation              0;	///< Optional element.
/// Element modifyReservation of type "http://oscars.es.net/OSCARS":modifyResContent.
    struct ns1__modifyResContent*        modifyReservation              0;	///< Optional element.
/// Element cancelReservation of type "http://oscars.es.net/OSCARS":globalReservationId.
    struct ns1__globalReservationId*     cancelReservation              0;	///< Optional element.
/// Element queryReservation of type "http://oscars.es.net/OSCARS":globalReservationId.
    struct ns1__globalReservationId*     queryReservation               0;	///< Optional element.
/// Element listReservations of type "http://oscars.es.net/OSCARS":listRequest.
    struct ns1__listRequest*             listReservations               0;	///< Optional element.
/// Element createPath of type "http://oscars.es.net/OSCARS":createPathContent.
    struct ns1__createPathContent*       createPath                     0;	///< Optional element.
/// Element refreshPath of type "http://oscars.es.net/OSCARS":refreshPathContent.
    struct ns1__refreshPathContent*      refreshPath                    0;	///< Optional element.
/// Element teardownPath of type "http://oscars.es.net/OSCARS":teardownPathContent.
    struct ns1__teardownPathContent*     teardownPath                   0;	///< Optional element.
};

/// "http://oscars.es.net/OSCARS":forwardReply is a complexType.
struct ns1__forwardReply
{
/// Element contentType of type xs:string.
    char*                                contentType                    1;	///< Required element.
/// Element createReservation of type "http://oscars.es.net/OSCARS":createReply.
    struct ns1__createReply*             createReservation              0;	///< Optional element.
/// Element modifyReservation of type "http://oscars.es.net/OSCARS":modifyResReply.
    struct ns1__modifyResReply*          modifyReservation              0;	///< Optional element.
/// Element cancelReservation of type xs:string.
    char*                                cancelReservation              0;	///< Optional element.
/// Element queryReservation of type "http://oscars.es.net/OSCARS":resDetails.
    struct ns1__resDetails*              queryReservation               0;	///< Optional element.
/// Element listReservations of type "http://oscars.es.net/OSCARS":listReply.
    struct ns1__listReply*               listReservations               0;	///< Optional element.
/// Element createPath of type "http://oscars.es.net/OSCARS":createPathResponseContent.
    struct ns1__createPathResponseContent*  createPath                     0;	///< Optional element.
/// Element refreshPath of type "http://oscars.es.net/OSCARS":refreshPathResponseContent.
    struct ns1__refreshPathResponseContent*  refreshPath                    0;	///< Optional element.
/// Element teardownPath of type "http://oscars.es.net/OSCARS":teardownPathResponseContent.
    struct ns1__teardownPathResponseContent*  teardownPath                   0;	///< Optional element.
};

/// "http://oscars.es.net/OSCARS":pathInfo is a complexType.
struct ns1__pathInfo
{
/// Element pathSetupMode of type xs:string.
    char*                                pathSetupMode                  1;	///< Required element.
/// Element pathType of type xs:string.
    char*                                pathType                       0;	///< Optional element.
/// Element path of type "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":CtrlPlanePathContent.
    struct ns3__CtrlPlanePathContent*    path                           0;	///< Optional element.
/// Element layer2Info of type "http://oscars.es.net/OSCARS":layer2Info.
    struct ns1__layer2Info*              layer2Info                     0;	///< Optional element.
/// Element layer3Info of type "http://oscars.es.net/OSCARS":layer3Info.
    struct ns1__layer3Info*              layer3Info                     0;	///< Optional element.
/// Element mplsInfo of type "http://oscars.es.net/OSCARS":mplsInfo.
    struct ns1__mplsInfo*                mplsInfo                       0;	///< Optional element.
};

/// "http://oscars.es.net/OSCARS":layer2Info is a complexType.
struct ns1__layer2Info
{
/// Element srcVtag of type "http://oscars.es.net/OSCARS":vlanTag.
    struct ns1__vlanTag*                 srcVtag                        0;	///< Optional element.
/// Element destVtag of type "http://oscars.es.net/OSCARS":vlanTag.
    struct ns1__vlanTag*                 destVtag                       0;	///< Optional element.
/// Element srcEndpoint of type xs:string.
    char*                                srcEndpoint                    1;	///< Required element.
/// Element destEndpoint of type xs:string.
    char*                                destEndpoint                   1;	///< Required element.
};

/// "http://oscars.es.net/OSCARS":layer3Info is a complexType.
struct ns1__layer3Info
{
/// Element srcHost of type xs:string.
    char*                                srcHost                        1;	///< Required element.
/// Element destHost of type xs:string.
    char*                                destHost                       1;	///< Required element.
/// Element protocol of type xs:string.
    char*                                protocol                       0;	///< Optional element.
/// Element srcIpPort of type xs:int.
    int*                                 srcIpPort                      0;	///< Optional element.
/// Element destIpPort of type xs:int.
    int*                                 destIpPort                     0;	///< Optional element.
/// Element dscp of type xs:string.
    char*                                dscp                           0;	///< Optional element.
};

/// "http://oscars.es.net/OSCARS":mplsInfo is a complexType.
struct ns1__mplsInfo
{
/// Element burstLimit of type xs:int.
    int                                  burstLimit                     1;	///< Required element.
/// Element lspClass of type xs:string.
    char*                                lspClass                       0;	///< Optional element.
};

/// "http://oscars.es.net/OSCARS":eventContent is a complexType.
struct ns1__eventContent
{
/// Element type of type xs:string.
    char*                                type                           1;	///< Required element.
/// Element timestamp of type xs:long.
    LONG64                               timestamp                      1;	///< Required element.
/// Element userLogin of type xs:string.
    char*                                userLogin                      0;	///< Optional element.
/// Element errorSource of type xs:string.
    char*                                errorSource                    0;	///< Optional element.
/// Element errorCode of type xs:string.
    char*                                errorCode                      0;	///< Optional element.
/// Element errorMessage of type xs:string.
    char*                                errorMessage                   0;	///< Optional element.
/// Element resDetails of type "http://oscars.es.net/OSCARS":resDetails.
    struct ns1__resDetails*              resDetails                     0;	///< Optional element.
/// Element msgDetails of type "http://oscars.es.net/OSCARS":msgDetails.
    struct ns1__msgDetails*              msgDetails                     0;	///< Optional element.
/// Element localDetails of type "http://oscars.es.net/OSCARS":localDetails.
    struct ns1__localDetails*            localDetails                   0;	///< Optional element.
/// Attribute id of type xs:string.
   @char*                                id                             1;	///< Required attribute.
};

/// "http://oscars.es.net/OSCARS":localDetails is a complexType.
struct ns1__localDetails
{
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    _XML                                *__any                         0;	///< Catch any element content in XML string.
};

/// "http://oscars.es.net/OSCARS":msgDetails is a complexType.
struct ns1__msgDetails
{
/// Element contentType of type xs:string.
    char*                                contentType                    1;	///< Required element.
/// Element forward of type "http://oscars.es.net/OSCARS":forwardPayload.
    struct ns1__forwardPayload*          forward                        0;	///< Optional element.
/// Element createReservation of type "http://oscars.es.net/OSCARS":resCreateContent.
    struct ns1__resCreateContent*        createReservation              0;	///< Optional element.
/// Element modifyReservation of type "http://oscars.es.net/OSCARS":modifyResContent.
    struct ns1__modifyResContent*        modifyReservation              0;	///< Optional element.
/// Element cancelReservation of type "http://oscars.es.net/OSCARS":globalReservationId.
    struct ns1__globalReservationId*     cancelReservation              0;	///< Optional element.
/// Element queryReservation of type "http://oscars.es.net/OSCARS":globalReservationId.
    struct ns1__globalReservationId*     queryReservation               0;	///< Optional element.
/// Element listReservations of type "http://oscars.es.net/OSCARS":listRequest.
    struct ns1__listRequest*             listReservations               0;	///< Optional element.
/// Element createPath of type "http://oscars.es.net/OSCARS":createPathContent.
    struct ns1__createPathContent*       createPath                     0;	///< Optional element.
/// Element refreshPath of type "http://oscars.es.net/OSCARS":refreshPathContent.
    struct ns1__refreshPathContent*      refreshPath                    0;	///< Optional element.
/// Element teardownPath of type "http://oscars.es.net/OSCARS":teardownPathContent.
    struct ns1__teardownPathContent*     teardownPath                   0;	///< Optional element.
/// Element forwardResponse of type "http://oscars.es.net/OSCARS":forwardReply.
    struct ns1__forwardReply*            forwardResponse                0;	///< Optional element.
/// Element createReservationResponse of type "http://oscars.es.net/OSCARS":createReply.
    struct ns1__createReply*             createReservationResponse      0;	///< Optional element.
/// Element modifyReservationResponse of type "http://oscars.es.net/OSCARS":modifyResReply.
    struct ns1__modifyResReply*          modifyReservationResponse      0;	///< Optional element.
/// Element cancelReservationResponse of type xs:string.
    char*                                cancelReservationResponse      0;	///< Optional element.
/// Element queryReservationResponse of type "http://oscars.es.net/OSCARS":resDetails.
    struct ns1__resDetails*              queryReservationResponse       0;	///< Optional element.
/// Element listReservationsResponse of type "http://oscars.es.net/OSCARS":listReply.
    struct ns1__listReply*               listReservationsResponse       0;	///< Optional element.
/// Element createPathResponse of type "http://oscars.es.net/OSCARS":createPathResponseContent.
    struct ns1__createPathResponseContent*  createPathResponse             0;	///< Optional element.
/// Element refreshPathResponse of type "http://oscars.es.net/OSCARS":refreshPathResponseContent.
    struct ns1__refreshPathResponseContent*  refreshPathResponse            0;	///< Optional element.
/// Element teardownPathResponse of type "http://oscars.es.net/OSCARS":teardownPathResponseContent.
    struct ns1__teardownPathResponseContent*  teardownPathResponse           0;	///< Optional element.
};

/// "http://oscars.es.net/OSCARS":emptyArg is a complexType.
struct ns1__emptyArg
{
/// Element msg of type xs:string.
    char*                                msg                            0;	///< Optional element.
};

/// "http://oscars.es.net/OSCARS":globalReservationId is a complexType.
struct ns1__globalReservationId
{
/// Element gri of type xs:string.
    char*                                gri                            1;	///< Required element.
};


/// Top-level root element "http://oscars.es.net/OSCARS":forward

/// "http://oscars.es.net/OSCARS":forward is a complexType.
struct _ns1__forward
{
/// Element payload of type "http://oscars.es.net/OSCARS":forwardPayload.
    struct ns1__forwardPayload*          payload                        1;	///< Required element.
/// Element payloadSender of type xs:string.
    char*                                payloadSender                  1;	///< Required element.
};


/// Top-level root element "http://oscars.es.net/OSCARS":AAAFault

/// "http://oscars.es.net/OSCARS":AAAFault is a complexType.
struct _ns1__AAAFault
{
/// Element msg of type xs:string.
    char*                                msg                            1;	///< Required element.
};


/// Top-level root element "http://oscars.es.net/OSCARS":BSSFault

/// "http://oscars.es.net/OSCARS":BSSFault is a complexType.
struct _ns1__BSSFault
{
/// Element msg of type xs:string.
    char*                                msg                            1;	///< Required element.
};


/// Top-level root element "http://oscars.es.net/OSCARS":TopologyFault

/// "http://oscars.es.net/OSCARS":TopologyFault is a complexType.
struct _ns1__TopologyFault
{
/// Element msg of type xs:string.
    char*                                msg                            1;	///< Required element.
};


/// Top-level root element "http://oscars.es.net/OSCARS":SignalFault

/// "http://oscars.es.net/OSCARS":SignalFault is a complexType.
struct _ns1__SignalFault
{
/// Element msg of type xs:string.
    char*                                msg                            1;	///< Required element.
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://ogf.org/schema/network/topology/ctrlPlane/20080828/               *
 *                                                                            *
\******************************************************************************/


/// "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":CtrlPlaneTopologyContent is a complexType.
struct ns3__CtrlPlaneTopologyContent
{
/// Element idcId of type xs:string.
    char*                                idcId                          1;	///< Required element.
/// Size of the dynamic array of struct ns3__CtrlPlanePathContent* is 0..unbounded
   $int                                  __sizepath                     0;
/// Pointer to array struct ns3__CtrlPlanePathContent* of length 0..unbounded
    struct ns3__CtrlPlanePathContent*   *path                           0;
/// Size of the dynamic array of struct ns3__CtrlPlaneDomainContent* is 0..unbounded
   $int                                  __sizedomain                   0;
/// Pointer to array struct ns3__CtrlPlaneDomainContent* of length 0..unbounded
    struct ns3__CtrlPlaneDomainContent* *domain                         0;
/// Size of array of struct ns3__CtrlPlaneDomainSignatureContent* is 0..unbounded
   $int                                  __sizedomainSignature          0;
/// Pointer to array struct ns3__CtrlPlaneDomainSignatureContent* of length 0..unbounded
    struct ns3__CtrlPlaneDomainSignatureContent* *domainSignature                0;
/// Attribute id of type xs:string.
   @char*                                id                             1;	///< Required attribute.
};

/// "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":CtrlPlaneDomainContent is a complexType.
struct ns3__CtrlPlaneDomainContent
{
/// Element lifetime of type "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":Lifetime.
    struct ns3__Lifetime*                lifetime                       0;	///< Optional element.
/// Size of the dynamic array of struct ns3__CtrlPlaneNodeContent* is 0..unbounded
   $int                                  __sizenode                     0;
/// Pointer to array struct ns3__CtrlPlaneNodeContent* of length 0..unbounded
    struct ns3__CtrlPlaneNodeContent*   *node                           0;
/// Size of the dynamic array of struct ns3__CtrlPlanePortContent* is 0..unbounded
   $int                                  __sizeport                     0;
/// Pointer to array struct ns3__CtrlPlanePortContent* of length 0..unbounded
    struct ns3__CtrlPlanePortContent*   *port                           0;
/// Size of the dynamic array of struct ns3__CtrlPlaneLinkContent* is 0..unbounded
   $int                                  __sizelink                     0;
/// Pointer to array struct ns3__CtrlPlaneLinkContent* of length 0..unbounded
    struct ns3__CtrlPlaneLinkContent*   *link                           0;
/// Attribute id of type xs:string.
   @char*                                id                             1;	///< Required attribute.
};

/// "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":CtrlPlaneNodeContent is a complexType.
struct ns3__CtrlPlaneNodeContent
{
/// Element lifetime of type "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":Lifetime.
    struct ns3__Lifetime*                lifetime                       0;	///< Optional element.
/// Element address of type "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":CtrlPlaneAddressContent.
    struct ns3__CtrlPlaneAddressContent*  address                        0;	///< Optional element.
/// Size of the dynamic array of struct ns3__CtrlPlanePortContent* is 0..unbounded
   $int                                  __sizeport                     0;
/// Pointer to array struct ns3__CtrlPlanePortContent* of length 0..unbounded
    struct ns3__CtrlPlanePortContent*   *port                           0;
/// Attribute id of type xs:string.
   @char*                                id                             1;	///< Required attribute.
};

/// "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":CtrlPlanePortContent is a complexType.
struct ns3__CtrlPlanePortContent
{
/// Element lifetime of type "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":Lifetime.
    struct ns3__Lifetime*                lifetime                       0;	///< Optional element.
/// Element capacity of type xs:string.
    char*                                capacity                       0;	///< Optional element.
/// Element maximumReservableCapacity of type xs:string.
    char*                                maximumReservableCapacity      0;	///< Optional element.
/// Element minimumReservableCapacity of type xs:string.
    char*                                minimumReservableCapacity      0;	///< Optional element.
/// Element granularity of type xs:string.
    char*                                granularity                    0;	///< Optional element.
/// Element unreservedCapacity of type xs:string.
    char*                                unreservedCapacity             0;	///< Optional element.
/// Size of the dynamic array of struct ns3__CtrlPlaneLinkContent* is 0..unbounded
   $int                                  __sizelink                     0;
/// Pointer to array struct ns3__CtrlPlaneLinkContent* of length 0..unbounded
    struct ns3__CtrlPlaneLinkContent*   *link                           0;
/// Attribute id of type xs:string.
   @char*                                id                             1;	///< Required attribute.
};

/// "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":CtrlPlaneLinkContent is a complexType.
struct ns3__CtrlPlaneLinkContent
{
/// Element remoteLinkId of type xs:string.
    char*                                remoteLinkId                   0;	///< Optional element.
/// Element trafficEngineeringMetric of type xs:string.
    char*                                trafficEngineeringMetric       1;	///< Required element.
/// Element capacity of type xs:string.
    char*                                capacity                       0;	///< Optional element.
/// Element maximumReservableCapacity of type xs:string.
    char*                                maximumReservableCapacity      0;	///< Optional element.
/// Element minimumReservableCapacity of type xs:string.
    char*                                minimumReservableCapacity      0;	///< Optional element.
/// Element granularity of type xs:string.
    char*                                granularity                    0;	///< Optional element.
/// Element unreservedCapacity of type xs:string.
    char*                                unreservedCapacity             0;	///< Optional element.
/// Size of array of char* is 0..unbounded
   $int                                  __sizelinkProtectionTypes      0;
/// Pointer to array char* of length 0..unbounded
    char*                               *linkProtectionTypes            0;
/// Size of array of struct ns3__CtrlPlaneAdministrativeGroup* is 0..unbounded
   $int                                  __sizeadministrativeGroups     0;
/// Pointer to array struct ns3__CtrlPlaneAdministrativeGroup* of length 0..unbounded
    struct ns3__CtrlPlaneAdministrativeGroup* *administrativeGroups           0;
/// Element SwitchingCapabilityDescriptors of type "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":CtrlPlaneSwcapContent.
    struct ns3__CtrlPlaneSwcapContent*   SwitchingCapabilityDescriptors 1;	///< Required element.
/// Attribute id of type xs:string.
   @char*                                id                             1;	///< Required attribute.
};

/// "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":CtrlPlanePathContent is a complexType.
struct ns3__CtrlPlanePathContent
{
/// Element lifetime of type "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":Lifetime.
    struct ns3__Lifetime*                lifetime                       0;	///< Optional element.
/// Size of array of struct ns3__CtrlPlaneHopContent* is 0..unbounded
   $int                                  __sizehop                      0;
/// Pointer to array struct ns3__CtrlPlaneHopContent* of length 0..unbounded
    struct ns3__CtrlPlaneHopContent*    *hop                            0;
/// Attribute id of type xs:string.
   @char*                                id                             1;	///< Required attribute.
/// Attribute direction of type xs:string.
   @char*                                direction                      0;	///< Optional attribute.
};

/// "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":CtrlPlaneHopContent is a complexType.
struct ns3__CtrlPlaneHopContent
{
/// Element domainIdRef of type xs:string.
    char*                                domainIdRef                    0;	///< Optional element.
/// Element nodeIdRef of type xs:string.
    char*                                nodeIdRef                      0;	///< Optional element.
/// Element portIdRef of type xs:string.
    char*                                portIdRef                      0;	///< Optional element.
/// Element linkIdRef of type xs:string.
    char*                                linkIdRef                      0;	///< Optional element.
/// Element reference "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":domain.
    struct ns3__CtrlPlaneDomainContent*  domain                         0;	///< Optional element.
/// Element reference "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":node.
    struct ns3__CtrlPlaneNodeContent*    node                           0;	///< Optional element.
/// Element reference "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":port.
    struct ns3__CtrlPlanePortContent*    port                           0;	///< Optional element.
/// Element reference "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":link.
    struct ns3__CtrlPlaneLinkContent*    link                           0;	///< Optional element.
/// Size of array of struct ns3__CtrlPlaneNextHopContent* is 0..unbounded
   $int                                  __sizenextHop                  0;
/// Pointer to array struct ns3__CtrlPlaneNextHopContent* of length 0..unbounded
    struct ns3__CtrlPlaneNextHopContent* *nextHop                        0;
/// Attribute id of type xs:string.
   @char*                                id                             1;	///< Required attribute.
};

/// "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":Lifetime is a complexType.
struct ns3__Lifetime
{
/// Element start of type "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":TimeContent.
    struct ns3__TimeContent*             start                          0;	///< Optional element.
/// Element end of type "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":TimeContent.
    struct ns3__TimeContent*             end                            0;	///< Optional element.
/// Element duration of type "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":Duration.
    struct ns3__Duration*                duration                       0;	///< Optional element.
/// Attribute id of type xs:string.
   @char*                                id                             1;	///< Required attribute.
/// Attribute direction of type xs:string.
   @char*                                direction                      0;	///< Optional attribute.
};

/// "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":CtrlPlaneDomainSignatureContent is a complexType.
struct ns3__CtrlPlaneDomainSignatureContent
{
/// Attribute domainId of type xs:string.
   @char*                                domainId                       1;	///< Required attribute.
};

/// "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":CtrlPlaneSwcapContent is a complexType.
struct ns3__CtrlPlaneSwcapContent
{
/// Element switchingcapType of type xs:string.
    char*                                switchingcapType               1;	///< Required element.
/// Element encodingType of type xs:string.
    char*                                encodingType                   1;	///< Required element.
/// Element switchingCapabilitySpecificInfo of type "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":CtrlPlaneSwitchingCapabilitySpecificInfo.
    struct ns3__CtrlPlaneSwitchingCapabilitySpecificInfo*  switchingCapabilitySpecificInfo 1;	///< Required element.
};

/// "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":CtrlPlaneAdministrativeGroup is a complexType.
struct ns3__CtrlPlaneAdministrativeGroup
{
/// Element group of type xs:int.
    int                                  group                          1;	///< Required element.
/// Element groupID of type xs:string.
    char*                                groupID                        0;	///< Optional element.
};

/// "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":CtrlPlaneSwitchingCapabilitySpecificInfo is a complexType.
struct ns3__CtrlPlaneSwitchingCapabilitySpecificInfo
{
/// Element capability of type xs:string.
    char*                                capability                     0;	///< Optional element.
/// Element interfaceMTU of type xs:int.
    int*                                 interfaceMTU                   0;	///< Optional element.
/// Element vlanRangeAvailability of type xs:string.
    char*                                vlanRangeAvailability          0;	///< Optional element.
/// Element suggestedVLANRange of type xs:string.
    char*                                suggestedVLANRange             0;	///< Optional element.
/// Element vlanTranslation of type xs:boolean.
    enum xsd__boolean_*                  vlanTranslation                0;	///< Optional element.
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/


/// "http://docs.oasis-open.org/wsn/b-2":FilterType is a complexType.
struct ns4__FilterType
{
/// Size of the dynamic array of struct ns4__TopicExpressionType* is 0..unbounded
   $int                                  __sizeTopicExpression          0;
/// Pointer to array struct ns4__TopicExpressionType* of length 0..unbounded
    struct ns4__TopicExpressionType*    *TopicExpression                0;
/// Size of the dynamic array of struct ns4__QueryExpressionType* is 0..unbounded
   $int                                  __sizeProducerProperties       0;
/// Pointer to array struct ns4__QueryExpressionType* of length 0..unbounded
    struct ns4__QueryExpressionType*    *ProducerProperties             0;
/// Size of the dynamic array of struct ns4__QueryExpressionType* is 0..unbounded
   $int                                  __sizeMessageContent           0;
/// Pointer to array struct ns4__QueryExpressionType* of length 0..unbounded
    struct ns4__QueryExpressionType*    *MessageContent                 0;
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    _XML                                *__any                         0;	///< Catch any element content in XML string.
};

/// "http://docs.oasis-open.org/wsn/b-2":SubscriptionPolicyType is a complexType.
struct ns4__SubscriptionPolicyType
{
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    _XML                                *__any                         0;	///< Catch any element content in XML string.
};

/// "http://docs.oasis-open.org/wsn/b-2":NotificationMessageHolderType is a complexType.
struct ns4__NotificationMessageHolderType
{
/// Element reference "http://docs.oasis-open.org/wsn/b-2":SubscriptionReference.
    wsa5__EndpointReferenceType*         SubscriptionReference          0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2":Topic.
    struct ns4__TopicExpressionType*     Topic                          0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2":ProducerReference.
    wsa5__EndpointReferenceType*         ProducerReference              0;	///< Optional element.
/// Element Message of type "http://docs.oasis-open.org/wsn/b-2":MessageType.
    struct ns4__MessageType*             Message                        1;	///< Required element.
};

/// "http://docs.oasis-open.org/wsn/b-2":MessageType is a complexType.
struct ns4__MessageType
{
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    _XML                                *__any                         0;	///< Catch any element content in XML string.
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscriptionManagerRP

/// "http://docs.oasis-open.org/wsn/b-2":SubscriptionManagerRP is a complexType.
struct _ns4__SubscriptionManagerRP
{
/// Element reference "http://docs.oasis-open.org/wsn/b-2":ConsumerReference.
    wsa5__EndpointReferenceType          ConsumerReference              1;	///< Required element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2":Filter.
    struct ns4__FilterType*              Filter                         0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2":SubscriptionPolicy.
    struct ns4__SubscriptionPolicyType*  SubscriptionPolicy             0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2":CreationTime.
    time_t*                              CreationTime                   0;	///< Optional element.
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":Notify

/// "http://docs.oasis-open.org/wsn/b-2":Notify is a complexType.
struct _ns4__Notify
{
/// Size of the dynamic array of struct ns4__NotificationMessageHolderType* is 1..unbounded
   $int                                  __sizeNotificationMessage      1;
/// Pointer to array struct ns4__NotificationMessageHolderType* of length 1..unbounded
    struct ns4__NotificationMessageHolderType* *NotificationMessage            1;
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    _XML                                *__any                         0;	///< Catch any element content in XML string.
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":UseRaw

/// "http://docs.oasis-open.org/wsn/b-2":UseRaw is a complexType.
struct _ns4__UseRaw
{
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":Subscribe

/// "http://docs.oasis-open.org/wsn/b-2":Subscribe is a complexType.
struct _ns4__Subscribe
{
/// Element ConsumerReference of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType          ConsumerReference              1;	///< Required element.
/// Element Filter of type "http://docs.oasis-open.org/wsn/b-2":FilterType.
    struct ns4__FilterType*              Filter                         0;	///< Optional element.
/// Element InitialTerminationTime of type xs:string.
    char*                                InitialTerminationTime         0;	///< Nullable pointer.
    struct _ns4__Subscribe_SubscriptionPolicy
    {
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    _XML                                *__any                         0;	///< Catch any element content in XML string.
    }                                   *SubscriptionPolicy             0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    _XML                                *__any                         0;	///< Catch any element content in XML string.
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscribeResponse

/// "http://docs.oasis-open.org/wsn/b-2":SubscribeResponse is a complexType.
struct _ns4__SubscribeResponse
{
/// Element SubscriptionReference of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType          SubscriptionReference          1;	///< Required element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2":CurrentTime.
    time_t*                              CurrentTime                    0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2":TerminationTime.
    time_t*                              TerminationTime                0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    _XML                                *__any                         0;	///< Catch any element content in XML string.
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessage

/// "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessage is a complexType.
struct _ns4__GetCurrentMessage
{
/// Element Topic of type "http://docs.oasis-open.org/wsn/b-2":TopicExpressionType.
    struct ns4__TopicExpressionType*     Topic                          1;	///< Required element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    _XML                                *__any                         0;	///< Catch any element content in XML string.
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessageResponse

/// "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessageResponse is a complexType.
struct _ns4__GetCurrentMessageResponse
{
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    _XML                                *__any                         0;	///< Catch any element content in XML string.
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetMessages

/// "http://docs.oasis-open.org/wsn/b-2":GetMessages is a complexType.
struct _ns4__GetMessages
{
/// Element MaximumNumber of type xs:nonNegativeInteger.
    unsigned int*                        MaximumNumber                  0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    _XML                                *__any                         0;	///< Catch any element content in XML string.
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetMessagesResponse

/// "http://docs.oasis-open.org/wsn/b-2":GetMessagesResponse is a complexType.
struct _ns4__GetMessagesResponse
{
/// Size of the dynamic array of struct ns4__NotificationMessageHolderType* is 0..unbounded
   $int                                  __sizeNotificationMessage      0;
/// Pointer to array struct ns4__NotificationMessageHolderType* of length 0..unbounded
    struct ns4__NotificationMessageHolderType* *NotificationMessage            0;
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    _XML                                *__any                         0;	///< Catch any element content in XML string.
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":DestroyPullPoint

/// "http://docs.oasis-open.org/wsn/b-2":DestroyPullPoint is a complexType.
struct _ns4__DestroyPullPoint
{
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    _XML                                *__any                         0;	///< Catch any element content in XML string.
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":DestroyPullPointResponse

/// "http://docs.oasis-open.org/wsn/b-2":DestroyPullPointResponse is a complexType.
struct _ns4__DestroyPullPointResponse
{
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    _XML                                *__any                         0;	///< Catch any element content in XML string.
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":CreatePullPoint

/// "http://docs.oasis-open.org/wsn/b-2":CreatePullPoint is a complexType.
struct _ns4__CreatePullPoint
{
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    _XML                                *__any                         0;	///< Catch any element content in XML string.
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":CreatePullPointResponse

/// "http://docs.oasis-open.org/wsn/b-2":CreatePullPointResponse is a complexType.
struct _ns4__CreatePullPointResponse
{
/// Element PullPoint of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType          PullPoint                      1;	///< Required element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    _XML                                *__any                         0;	///< Catch any element content in XML string.
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":Renew

/// "http://docs.oasis-open.org/wsn/b-2":Renew is a complexType.
struct _ns4__Renew
{
/// Element TerminationTime of type xs:string.
    char*                                TerminationTime               ;	///< Nullable pointer.
/// Element reference "http://docs.oasis-open.org/wsn/b-2":SubscriptionReference.
    wsa5__EndpointReferenceType          SubscriptionReference          1;	///< Required element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    _XML                                *__any                         0;	///< Catch any element content in XML string.
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":RenewResponse

/// "http://docs.oasis-open.org/wsn/b-2":RenewResponse is a complexType.
struct _ns4__RenewResponse
{
/// Element reference "http://docs.oasis-open.org/wsn/b-2":TerminationTime.
    time_t                               TerminationTime                1;	///< Required element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2":CurrentTime.
    time_t*                              CurrentTime                    0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2":SubscriptionReference.
    wsa5__EndpointReferenceType*         SubscriptionReference          0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    _XML                                *__any                         0;	///< Catch any element content in XML string.
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":Unsubscribe

/// "http://docs.oasis-open.org/wsn/b-2":Unsubscribe is a complexType.
struct _ns4__Unsubscribe
{
/// Element reference "http://docs.oasis-open.org/wsn/b-2":SubscriptionReference.
    wsa5__EndpointReferenceType          SubscriptionReference          1;	///< Required element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    _XML                                *__any                         0;	///< Catch any element content in XML string.
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnsubscribeResponse

/// "http://docs.oasis-open.org/wsn/b-2":UnsubscribeResponse is a complexType.
struct _ns4__UnsubscribeResponse
{
/// Element reference "http://docs.oasis-open.org/wsn/b-2":SubscriptionReference.
    wsa5__EndpointReferenceType*         SubscriptionReference          0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    _XML                                *__any                         0;	///< Catch any element content in XML string.
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":PauseSubscription

/// "http://docs.oasis-open.org/wsn/b-2":PauseSubscription is a complexType.
struct _ns4__PauseSubscription
{
/// Element reference "http://docs.oasis-open.org/wsn/b-2":SubscriptionReference.
    wsa5__EndpointReferenceType          SubscriptionReference          1;	///< Required element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    _XML                                *__any                         0;	///< Catch any element content in XML string.
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":PauseSubscriptionResponse

/// "http://docs.oasis-open.org/wsn/b-2":PauseSubscriptionResponse is a complexType.
struct _ns4__PauseSubscriptionResponse
{
/// Element reference "http://docs.oasis-open.org/wsn/b-2":SubscriptionReference.
    wsa5__EndpointReferenceType*         SubscriptionReference          0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    _XML                                *__any                         0;	///< Catch any element content in XML string.
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":ResumeSubscription

/// "http://docs.oasis-open.org/wsn/b-2":ResumeSubscription is a complexType.
struct _ns4__ResumeSubscription
{
/// Element reference "http://docs.oasis-open.org/wsn/b-2":SubscriptionReference.
    wsa5__EndpointReferenceType          SubscriptionReference          1;	///< Required element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    _XML                                *__any                         0;	///< Catch any element content in XML string.
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":ResumeSubscriptionResponse

/// "http://docs.oasis-open.org/wsn/b-2":ResumeSubscriptionResponse is a complexType.
struct _ns4__ResumeSubscriptionResponse
{
/// Element reference "http://docs.oasis-open.org/wsn/b-2":SubscriptionReference.
    wsa5__EndpointReferenceType*         SubscriptionReference          0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    _XML                                *__any                         0;	///< Catch any element content in XML string.
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://docs.oasis-open.org/wsrf/r-2                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/// "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType is a complexType.
struct ns6__BaseFaultType
{
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
/// Element ErrorCode of type "http://docs.oasis-open.org/wsrf/bf-2":ErrorCodeType.
    struct ns6__ErrorCodeType*           ErrorCode                      0;	///< Optional element.
/// Size of array of char* is 0..unbounded
   $int                                  __sizeDescription              0;
/// Pointer to array char* of length 0..unbounded
    char*                               *Description                    0;
/// Element FaultCause of type "http://docs.oasis-open.org/wsrf/bf-2":FaultCauseType.
    struct ns6__FaultCauseType*          FaultCause                     0;	///< Optional element.
};

/// "http://oscars.es.net/OSCARS":vlanTag is a complexType with simpleContent.
struct ns1__vlanTag
{
/// __item wraps 'xs:string' simpleContent.
    char*                                __item                        ;
/// Attribute tagged of type xs:boolean.
   @enum xsd__boolean_*                  tagged                         0;	///< Optional attribute.
};

/// "http://oscars.es.net/OSCARS":reservationResourceType is a complexType with complexContent extension of "http://oscars.es.net/OSCARS":resCreateContent.
struct ns1__reservationResourceType
{
/// INHERITED FROM ns1__resCreateContent:
/// Element globalReservationId of type xs:string.
    char*                                globalReservationId            0;	///< Optional element.
/// Element startTime of type xs:long.
    LONG64                               startTime                      1;	///< Required element.
/// Element endTime of type xs:long.
    LONG64                               endTime                        1;	///< Required element.
/// Element bandwidth of type xs:int.
    int                                  bandwidth                      1;	///< Required element.
/// Element description of type xs:string.
    char*                                description                    1;	///< Required element.
/// Element pathInfo of type "http://oscars.es.net/OSCARS":pathInfo.
    struct ns1__pathInfo*                pathInfo                       1;	///< Required element.
//  END OF INHERITED FROM ns1__resCreateContent
/// SEQUENCE OF ELEMENTS <xs:sequence minOccurs="0">
   $int                                  __size_reservationResourceType_sequence 0;
    struct __ns1__reservationResourceType_sequence
    {
/// Element localDetails of type "http://oscars.es.net/OSCARS":localDetails.
    struct ns1__localDetails*            localDetails                   0;	///< Optional element.
    }                                   *__reservationResourceType_sequence;
//  END OF SEQUENCE
};

/// "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":CtrlPlaneNextHopContent is a complexType with simpleContent.
struct ns3__CtrlPlaneNextHopContent
{
/// __item wraps 'xs:string' simpleContent.
    char*                                __item                        ;
/// Attribute weight of type xs:int.
   @int*                                 weight                         0;	///< Optional attribute.
/// Attribute optional of type xs:boolean.
   @enum xsd__boolean_*                  optional                       0;	///< Optional attribute.
};

/// "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":TimeContent is a complexType with simpleContent.
struct ns3__TimeContent
{
/// __item wraps 'xs:string' simpleContent.
    char*                                __item                        ;
/// Attribute type of type xs:string.
   @char*                                type                           1;	///< Required attribute.
};

/// "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":Duration is a complexType with simpleContent.
struct ns3__Duration
{
/// __item wraps 'xs:string' simpleContent.
    char*                                __item                        ;
/// Attribute type of type xs:string.
   @char*                                type                           1;	///< Required attribute.
};

/// "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":CtrlPlaneAddressContent is a complexType with simpleContent.
struct ns3__CtrlPlaneAddressContent
{
/// __item wraps 'xs:string' simpleContent.
    char*                                __item                        ;
/// Attribute value of type xs:string.
   @char*                                value                          0;	///< Optional attribute.
/// Attribute type of type xs:string.
   @char*                                type                           0;	///< Optional attribute.
};

/// "http://docs.oasis-open.org/wsn/b-2":QueryExpressionType is a complexType with simpleContent.
struct ns4__QueryExpressionType
{
/// __item wraps 'xs:string' simpleContent.
    char*                                __item                        ;
/// Attribute Dialect of type xs:anyURI.
   @char*                                Dialect                        1;	///< Required attribute.
};

/// "http://docs.oasis-open.org/wsn/b-2":TopicExpressionType is a complexType with simpleContent.
struct ns4__TopicExpressionType
{
/// __item wraps 'xs:string' simpleContent.
    char*                                __item                        ;
/// Attribute Dialect of type xs:anyURI.
   @char*                                Dialect                        1;	///< Required attribute.
/// TODO: this mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __mixed                       0;	///< Catch mixed content in XML string
};

/// "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
struct ns4__SubscribeCreationFailedFaultType
{
/// INHERITED FROM ns6__BaseFaultType:
/// Element Timestamp of type xs:dateTime.
    time_t                               ns6__Timestamp                 1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         ns6__Originator                0;	///< Optional element.
/// Element ErrorCode of type "http://docs.oasis-open.org/wsrf/bf-2":ErrorCodeType.
    struct ns6__ErrorCodeType*           ns6__ErrorCode                 0;	///< Optional element.
/// Size of array of char* is 0..unbounded
   $int                                  __sizeDescription              0;
/// Pointer to array char* of length 0..unbounded
    char*                               *ns6__Description               0;
/// Element FaultCause of type "http://docs.oasis-open.org/wsrf/bf-2":FaultCauseType.
    struct ns6__FaultCauseType*          ns6__FaultCause                0;	///< Optional element.
//  END OF INHERITED FROM ns6__BaseFaultType
};

/// "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
struct ns4__InvalidFilterFaultType
{
/// INHERITED FROM ns6__BaseFaultType:
/// Element Timestamp of type xs:dateTime.
    time_t                               ns6__Timestamp                 1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         ns6__Originator                0;	///< Optional element.
/// Element ErrorCode of type "http://docs.oasis-open.org/wsrf/bf-2":ErrorCodeType.
    struct ns6__ErrorCodeType*           ns6__ErrorCode                 0;	///< Optional element.
/// Size of array of char* is 0..unbounded
   $int                                  __sizeDescription              0;
/// Pointer to array char* of length 0..unbounded
    char*                               *ns6__Description               0;
/// Element FaultCause of type "http://docs.oasis-open.org/wsrf/bf-2":FaultCauseType.
    struct ns6__FaultCauseType*          ns6__FaultCause                0;	///< Optional element.
//  END OF INHERITED FROM ns6__BaseFaultType
/// Size of array of _QName is 1..unbounded
   $int                                  __sizeUnknownFilter            1;
/// Pointer to array _QName of length 1..unbounded
    _QName                              *UnknownFilter                  1;
};

/// "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
struct ns4__TopicExpressionDialectUnknownFaultType
{
/// INHERITED FROM ns6__BaseFaultType:
/// Element Timestamp of type xs:dateTime.
    time_t                               ns6__Timestamp                 1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         ns6__Originator                0;	///< Optional element.
/// Element ErrorCode of type "http://docs.oasis-open.org/wsrf/bf-2":ErrorCodeType.
    struct ns6__ErrorCodeType*           ns6__ErrorCode                 0;	///< Optional element.
/// Size of array of char* is 0..unbounded
   $int                                  __sizeDescription              0;
/// Pointer to array char* of length 0..unbounded
    char*                               *ns6__Description               0;
/// Element FaultCause of type "http://docs.oasis-open.org/wsrf/bf-2":FaultCauseType.
    struct ns6__FaultCauseType*          ns6__FaultCause                0;	///< Optional element.
//  END OF INHERITED FROM ns6__BaseFaultType
};

/// "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
struct ns4__InvalidTopicExpressionFaultType
{
/// INHERITED FROM ns6__BaseFaultType:
/// Element Timestamp of type xs:dateTime.
    time_t                               ns6__Timestamp                 1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         ns6__Originator                0;	///< Optional element.
/// Element ErrorCode of type "http://docs.oasis-open.org/wsrf/bf-2":ErrorCodeType.
    struct ns6__ErrorCodeType*           ns6__ErrorCode                 0;	///< Optional element.
/// Size of array of char* is 0..unbounded
   $int                                  __sizeDescription              0;
/// Pointer to array char* of length 0..unbounded
    char*                               *ns6__Description               0;
/// Element FaultCause of type "http://docs.oasis-open.org/wsrf/bf-2":FaultCauseType.
    struct ns6__FaultCauseType*          ns6__FaultCause                0;	///< Optional element.
//  END OF INHERITED FROM ns6__BaseFaultType
};

/// "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
struct ns4__TopicNotSupportedFaultType
{
/// INHERITED FROM ns6__BaseFaultType:
/// Element Timestamp of type xs:dateTime.
    time_t                               ns6__Timestamp                 1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         ns6__Originator                0;	///< Optional element.
/// Element ErrorCode of type "http://docs.oasis-open.org/wsrf/bf-2":ErrorCodeType.
    struct ns6__ErrorCodeType*           ns6__ErrorCode                 0;	///< Optional element.
/// Size of array of char* is 0..unbounded
   $int                                  __sizeDescription              0;
/// Pointer to array char* of length 0..unbounded
    char*                               *ns6__Description               0;
/// Element FaultCause of type "http://docs.oasis-open.org/wsrf/bf-2":FaultCauseType.
    struct ns6__FaultCauseType*          ns6__FaultCause                0;	///< Optional element.
//  END OF INHERITED FROM ns6__BaseFaultType
};

/// "http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
struct ns4__MultipleTopicsSpecifiedFaultType
{
/// INHERITED FROM ns6__BaseFaultType:
/// Element Timestamp of type xs:dateTime.
    time_t                               ns6__Timestamp                 1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         ns6__Originator                0;	///< Optional element.
/// Element ErrorCode of type "http://docs.oasis-open.org/wsrf/bf-2":ErrorCodeType.
    struct ns6__ErrorCodeType*           ns6__ErrorCode                 0;	///< Optional element.
/// Size of array of char* is 0..unbounded
   $int                                  __sizeDescription              0;
/// Pointer to array char* of length 0..unbounded
    char*                               *ns6__Description               0;
/// Element FaultCause of type "http://docs.oasis-open.org/wsrf/bf-2":FaultCauseType.
    struct ns6__FaultCauseType*          ns6__FaultCause                0;	///< Optional element.
//  END OF INHERITED FROM ns6__BaseFaultType
};

/// "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
struct ns4__InvalidProducerPropertiesExpressionFaultType
{
/// INHERITED FROM ns6__BaseFaultType:
/// Element Timestamp of type xs:dateTime.
    time_t                               ns6__Timestamp                 1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         ns6__Originator                0;	///< Optional element.
/// Element ErrorCode of type "http://docs.oasis-open.org/wsrf/bf-2":ErrorCodeType.
    struct ns6__ErrorCodeType*           ns6__ErrorCode                 0;	///< Optional element.
/// Size of array of char* is 0..unbounded
   $int                                  __sizeDescription              0;
/// Pointer to array char* of length 0..unbounded
    char*                               *ns6__Description               0;
/// Element FaultCause of type "http://docs.oasis-open.org/wsrf/bf-2":FaultCauseType.
    struct ns6__FaultCauseType*          ns6__FaultCause                0;	///< Optional element.
//  END OF INHERITED FROM ns6__BaseFaultType
};

/// "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
struct ns4__InvalidMessageContentExpressionFaultType
{
/// INHERITED FROM ns6__BaseFaultType:
/// Element Timestamp of type xs:dateTime.
    time_t                               ns6__Timestamp                 1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         ns6__Originator                0;	///< Optional element.
/// Element ErrorCode of type "http://docs.oasis-open.org/wsrf/bf-2":ErrorCodeType.
    struct ns6__ErrorCodeType*           ns6__ErrorCode                 0;	///< Optional element.
/// Size of array of char* is 0..unbounded
   $int                                  __sizeDescription              0;
/// Pointer to array char* of length 0..unbounded
    char*                               *ns6__Description               0;
/// Element FaultCause of type "http://docs.oasis-open.org/wsrf/bf-2":FaultCauseType.
    struct ns6__FaultCauseType*          ns6__FaultCause                0;	///< Optional element.
//  END OF INHERITED FROM ns6__BaseFaultType
};

/// "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
struct ns4__UnrecognizedPolicyRequestFaultType
{
/// INHERITED FROM ns6__BaseFaultType:
/// Element Timestamp of type xs:dateTime.
    time_t                               ns6__Timestamp                 1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         ns6__Originator                0;	///< Optional element.
/// Element ErrorCode of type "http://docs.oasis-open.org/wsrf/bf-2":ErrorCodeType.
    struct ns6__ErrorCodeType*           ns6__ErrorCode                 0;	///< Optional element.
/// Size of array of char* is 0..unbounded
   $int                                  __sizeDescription              0;
/// Pointer to array char* of length 0..unbounded
    char*                               *ns6__Description               0;
/// Element FaultCause of type "http://docs.oasis-open.org/wsrf/bf-2":FaultCauseType.
    struct ns6__FaultCauseType*          ns6__FaultCause                0;	///< Optional element.
//  END OF INHERITED FROM ns6__BaseFaultType
/// Size of array of _QName is 0..unbounded
   $int                                  __sizeUnrecognizedPolicy       0;
/// Pointer to array _QName of length 0..unbounded
    _QName                              *UnrecognizedPolicy             0;
};

/// "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
struct ns4__UnsupportedPolicyRequestFaultType
{
/// INHERITED FROM ns6__BaseFaultType:
/// Element Timestamp of type xs:dateTime.
    time_t                               ns6__Timestamp                 1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         ns6__Originator                0;	///< Optional element.
/// Element ErrorCode of type "http://docs.oasis-open.org/wsrf/bf-2":ErrorCodeType.
    struct ns6__ErrorCodeType*           ns6__ErrorCode                 0;	///< Optional element.
/// Size of array of char* is 0..unbounded
   $int                                  __sizeDescription              0;
/// Pointer to array char* of length 0..unbounded
    char*                               *ns6__Description               0;
/// Element FaultCause of type "http://docs.oasis-open.org/wsrf/bf-2":FaultCauseType.
    struct ns6__FaultCauseType*          ns6__FaultCause                0;	///< Optional element.
//  END OF INHERITED FROM ns6__BaseFaultType
/// Size of array of _QName is 0..unbounded
   $int                                  __sizeUnsupportedPolicy        0;
/// Pointer to array _QName of length 0..unbounded
    _QName                              *UnsupportedPolicy              0;
};

/// "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
struct ns4__NotifyMessageNotSupportedFaultType
{
/// INHERITED FROM ns6__BaseFaultType:
/// Element Timestamp of type xs:dateTime.
    time_t                               ns6__Timestamp                 1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         ns6__Originator                0;	///< Optional element.
/// Element ErrorCode of type "http://docs.oasis-open.org/wsrf/bf-2":ErrorCodeType.
    struct ns6__ErrorCodeType*           ns6__ErrorCode                 0;	///< Optional element.
/// Size of array of char* is 0..unbounded
   $int                                  __sizeDescription              0;
/// Pointer to array char* of length 0..unbounded
    char*                               *ns6__Description               0;
/// Element FaultCause of type "http://docs.oasis-open.org/wsrf/bf-2":FaultCauseType.
    struct ns6__FaultCauseType*          ns6__FaultCause                0;	///< Optional element.
//  END OF INHERITED FROM ns6__BaseFaultType
};

/// "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
struct ns4__UnacceptableInitialTerminationTimeFaultType
{
/// INHERITED FROM ns6__BaseFaultType:
/// Element Timestamp of type xs:dateTime.
    time_t                               ns6__Timestamp                 1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         ns6__Originator                0;	///< Optional element.
/// Element ErrorCode of type "http://docs.oasis-open.org/wsrf/bf-2":ErrorCodeType.
    struct ns6__ErrorCodeType*           ns6__ErrorCode                 0;	///< Optional element.
/// Size of array of char* is 0..unbounded
   $int                                  __sizeDescription              0;
/// Pointer to array char* of length 0..unbounded
    char*                               *ns6__Description               0;
/// Element FaultCause of type "http://docs.oasis-open.org/wsrf/bf-2":FaultCauseType.
    struct ns6__FaultCauseType*          ns6__FaultCause                0;	///< Optional element.
//  END OF INHERITED FROM ns6__BaseFaultType
/// Element MinimumTime of type xs:dateTime.
    time_t                               MinimumTime                    1;	///< Required element.
/// Element MaximumTime of type xs:dateTime.
    time_t*                              MaximumTime                    0;	///< Optional element.
};

/// "http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
struct ns4__NoCurrentMessageOnTopicFaultType
{
/// INHERITED FROM ns6__BaseFaultType:
/// Element Timestamp of type xs:dateTime.
    time_t                               ns6__Timestamp                 1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         ns6__Originator                0;	///< Optional element.
/// Element ErrorCode of type "http://docs.oasis-open.org/wsrf/bf-2":ErrorCodeType.
    struct ns6__ErrorCodeType*           ns6__ErrorCode                 0;	///< Optional element.
/// Size of array of char* is 0..unbounded
   $int                                  __sizeDescription              0;
/// Pointer to array char* of length 0..unbounded
    char*                               *ns6__Description               0;
/// Element FaultCause of type "http://docs.oasis-open.org/wsrf/bf-2":FaultCauseType.
    struct ns6__FaultCauseType*          ns6__FaultCause                0;	///< Optional element.
//  END OF INHERITED FROM ns6__BaseFaultType
};

/// "http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
struct ns4__UnableToGetMessagesFaultType
{
/// INHERITED FROM ns6__BaseFaultType:
/// Element Timestamp of type xs:dateTime.
    time_t                               ns6__Timestamp                 1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         ns6__Originator                0;	///< Optional element.
/// Element ErrorCode of type "http://docs.oasis-open.org/wsrf/bf-2":ErrorCodeType.
    struct ns6__ErrorCodeType*           ns6__ErrorCode                 0;	///< Optional element.
/// Size of array of char* is 0..unbounded
   $int                                  __sizeDescription              0;
/// Pointer to array char* of length 0..unbounded
    char*                               *ns6__Description               0;
/// Element FaultCause of type "http://docs.oasis-open.org/wsrf/bf-2":FaultCauseType.
    struct ns6__FaultCauseType*          ns6__FaultCause                0;	///< Optional element.
//  END OF INHERITED FROM ns6__BaseFaultType
};

/// "http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
struct ns4__UnableToDestroyPullPointFaultType
{
/// INHERITED FROM ns6__BaseFaultType:
/// Element Timestamp of type xs:dateTime.
    time_t                               ns6__Timestamp                 1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         ns6__Originator                0;	///< Optional element.
/// Element ErrorCode of type "http://docs.oasis-open.org/wsrf/bf-2":ErrorCodeType.
    struct ns6__ErrorCodeType*           ns6__ErrorCode                 0;	///< Optional element.
/// Size of array of char* is 0..unbounded
   $int                                  __sizeDescription              0;
/// Pointer to array char* of length 0..unbounded
    char*                               *ns6__Description               0;
/// Element FaultCause of type "http://docs.oasis-open.org/wsrf/bf-2":FaultCauseType.
    struct ns6__FaultCauseType*          ns6__FaultCause                0;	///< Optional element.
//  END OF INHERITED FROM ns6__BaseFaultType
};

/// "http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
struct ns4__UnableToCreatePullPointFaultType
{
/// INHERITED FROM ns6__BaseFaultType:
/// Element Timestamp of type xs:dateTime.
    time_t                               ns6__Timestamp                 1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         ns6__Originator                0;	///< Optional element.
/// Element ErrorCode of type "http://docs.oasis-open.org/wsrf/bf-2":ErrorCodeType.
    struct ns6__ErrorCodeType*           ns6__ErrorCode                 0;	///< Optional element.
/// Size of array of char* is 0..unbounded
   $int                                  __sizeDescription              0;
/// Pointer to array char* of length 0..unbounded
    char*                               *ns6__Description               0;
/// Element FaultCause of type "http://docs.oasis-open.org/wsrf/bf-2":FaultCauseType.
    struct ns6__FaultCauseType*          ns6__FaultCause                0;	///< Optional element.
//  END OF INHERITED FROM ns6__BaseFaultType
};

/// "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
struct ns4__UnacceptableTerminationTimeFaultType
{
/// INHERITED FROM ns6__BaseFaultType:
/// Element Timestamp of type xs:dateTime.
    time_t                               ns6__Timestamp                 1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         ns6__Originator                0;	///< Optional element.
/// Element ErrorCode of type "http://docs.oasis-open.org/wsrf/bf-2":ErrorCodeType.
    struct ns6__ErrorCodeType*           ns6__ErrorCode                 0;	///< Optional element.
/// Size of array of char* is 0..unbounded
   $int                                  __sizeDescription              0;
/// Pointer to array char* of length 0..unbounded
    char*                               *ns6__Description               0;
/// Element FaultCause of type "http://docs.oasis-open.org/wsrf/bf-2":FaultCauseType.
    struct ns6__FaultCauseType*          ns6__FaultCause                0;	///< Optional element.
//  END OF INHERITED FROM ns6__BaseFaultType
/// Element MinimumTime of type xs:dateTime.
    time_t                               MinimumTime                    1;	///< Required element.
/// Element MaximumTime of type xs:dateTime.
    time_t*                              MaximumTime                    0;	///< Optional element.
};

/// "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
struct ns4__UnableToDestroySubscriptionFaultType
{
/// INHERITED FROM ns6__BaseFaultType:
/// Element Timestamp of type xs:dateTime.
    time_t                               ns6__Timestamp                 1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         ns6__Originator                0;	///< Optional element.
/// Element ErrorCode of type "http://docs.oasis-open.org/wsrf/bf-2":ErrorCodeType.
    struct ns6__ErrorCodeType*           ns6__ErrorCode                 0;	///< Optional element.
/// Size of array of char* is 0..unbounded
   $int                                  __sizeDescription              0;
/// Pointer to array char* of length 0..unbounded
    char*                               *ns6__Description               0;
/// Element FaultCause of type "http://docs.oasis-open.org/wsrf/bf-2":FaultCauseType.
    struct ns6__FaultCauseType*          ns6__FaultCause                0;	///< Optional element.
//  END OF INHERITED FROM ns6__BaseFaultType
};

/// "http://docs.oasis-open.org/wsn/b-2":PauseFailedFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
struct ns4__PauseFailedFaultType
{
/// INHERITED FROM ns6__BaseFaultType:
/// Element Timestamp of type xs:dateTime.
    time_t                               ns6__Timestamp                 1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         ns6__Originator                0;	///< Optional element.
/// Element ErrorCode of type "http://docs.oasis-open.org/wsrf/bf-2":ErrorCodeType.
    struct ns6__ErrorCodeType*           ns6__ErrorCode                 0;	///< Optional element.
/// Size of array of char* is 0..unbounded
   $int                                  __sizeDescription              0;
/// Pointer to array char* of length 0..unbounded
    char*                               *ns6__Description               0;
/// Element FaultCause of type "http://docs.oasis-open.org/wsrf/bf-2":FaultCauseType.
    struct ns6__FaultCauseType*          ns6__FaultCause                0;	///< Optional element.
//  END OF INHERITED FROM ns6__BaseFaultType
};

/// "http://docs.oasis-open.org/wsn/b-2":ResumeFailedFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
struct ns4__ResumeFailedFaultType
{
/// INHERITED FROM ns6__BaseFaultType:
/// Element Timestamp of type xs:dateTime.
    time_t                               ns6__Timestamp                 1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         ns6__Originator                0;	///< Optional element.
/// Element ErrorCode of type "http://docs.oasis-open.org/wsrf/bf-2":ErrorCodeType.
    struct ns6__ErrorCodeType*           ns6__ErrorCode                 0;	///< Optional element.
/// Size of array of char* is 0..unbounded
   $int                                  __sizeDescription              0;
/// Pointer to array char* of length 0..unbounded
    char*                               *ns6__Description               0;
/// Element FaultCause of type "http://docs.oasis-open.org/wsrf/bf-2":FaultCauseType.
    struct ns6__FaultCauseType*          ns6__FaultCause                0;	///< Optional element.
//  END OF INHERITED FROM ns6__BaseFaultType
};

/// "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
struct ns5__ResourceUnknownFaultType
{
/// INHERITED FROM ns6__BaseFaultType:
/// Element Timestamp of type xs:dateTime.
    time_t                               ns6__Timestamp                 1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         ns6__Originator                0;	///< Optional element.
/// Element ErrorCode of type "http://docs.oasis-open.org/wsrf/bf-2":ErrorCodeType.
    struct ns6__ErrorCodeType*           ns6__ErrorCode                 0;	///< Optional element.
/// Size of array of char* is 0..unbounded
   $int                                  __sizeDescription              0;
/// Pointer to array char* of length 0..unbounded
    char*                               *ns6__Description               0;
/// Element FaultCause of type "http://docs.oasis-open.org/wsrf/bf-2":FaultCauseType.
    struct ns6__FaultCauseType*          ns6__FaultCause                0;	///< Optional element.
//  END OF INHERITED FROM ns6__BaseFaultType
};

/// "http://docs.oasis-open.org/wsrf/r-2":ResourceUnavailableFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
struct ns5__ResourceUnavailableFaultType
{
/// INHERITED FROM ns6__BaseFaultType:
/// Element Timestamp of type xs:dateTime.
    time_t                               ns6__Timestamp                 1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         ns6__Originator                0;	///< Optional element.
/// Element ErrorCode of type "http://docs.oasis-open.org/wsrf/bf-2":ErrorCodeType.
    struct ns6__ErrorCodeType*           ns6__ErrorCode                 0;	///< Optional element.
/// Size of array of char* is 0..unbounded
   $int                                  __sizeDescription              0;
/// Pointer to array char* of length 0..unbounded
    char*                               *ns6__Description               0;
/// Element FaultCause of type "http://docs.oasis-open.org/wsrf/bf-2":FaultCauseType.
    struct ns6__FaultCauseType*          ns6__FaultCause                0;	///< Optional element.
//  END OF INHERITED FROM ns6__BaseFaultType
};

/// "http://docs.oasis-open.org/wsrf/bf-2":ErrorCodeType is a complexType with simpleContent.
struct ns6__ErrorCodeType
{
/// __item wraps 'xs:string' simpleContent.
    char*                                __item                        ;
/// Attribute dialect of type xs:anyURI.
   @char*                                dialect                        1;	///< Required attribute.
};

/// "http://docs.oasis-open.org/wsrf/bf-2":FaultCauseType is a complexType with simpleContent.
struct ns6__FaultCauseType
{
/// __item wraps 'xs:string' simpleContent.
    char*                                __item                        ;
/// Attribute dialect of type xs:anyURI.
   @char*                                dialect                        0;	///< Optional attribute.
};

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://oscars.es.net/OSCARS                                              *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://oscars.es.net/OSCARS":createReservation of type "http://oscars.es.net/OSCARS":resCreateContent.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://oscars.es.net/OSCARS":createReservationResponse of type "http://oscars.es.net/OSCARS":createReply.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://oscars.es.net/OSCARS":listReservations of type "http://oscars.es.net/OSCARS":listRequest.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://oscars.es.net/OSCARS":listReservationsResponse of type "http://oscars.es.net/OSCARS":listReply.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://oscars.es.net/OSCARS":cancelReservation of type "http://oscars.es.net/OSCARS":globalReservationId.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://oscars.es.net/OSCARS":cancelReservationResponse of type xs:string.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://oscars.es.net/OSCARS":modifyReservation of type "http://oscars.es.net/OSCARS":modifyResContent.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://oscars.es.net/OSCARS":modifyReservationResponse of type "http://oscars.es.net/OSCARS":modifyResReply.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://oscars.es.net/OSCARS":queryReservation of type "http://oscars.es.net/OSCARS":globalReservationId.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://oscars.es.net/OSCARS":queryReservationResponse of type "http://oscars.es.net/OSCARS":resDetails.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://oscars.es.net/OSCARS":getNetworkTopology of type "http://oscars.es.net/OSCARS":getTopologyContent.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://oscars.es.net/OSCARS":getNetworkTopologyResponse of type "http://oscars.es.net/OSCARS":getTopologyResponseContent.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://oscars.es.net/OSCARS":createPath of type "http://oscars.es.net/OSCARS":createPathContent.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://oscars.es.net/OSCARS":createPathResponse of type "http://oscars.es.net/OSCARS":createPathResponseContent.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://oscars.es.net/OSCARS":refreshPath of type "http://oscars.es.net/OSCARS":refreshPathContent.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://oscars.es.net/OSCARS":refreshPathResponse of type "http://oscars.es.net/OSCARS":refreshPathResponseContent.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://oscars.es.net/OSCARS":teardownPath of type "http://oscars.es.net/OSCARS":teardownPathContent.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://oscars.es.net/OSCARS":teardownPathResponse of type "http://oscars.es.net/OSCARS":teardownPathResponseContent.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://oscars.es.net/OSCARS":event of type "http://oscars.es.net/OSCARS":eventContent.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://oscars.es.net/OSCARS":subscriptionId of type xs:string.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://oscars.es.net/OSCARS":publisherRegistrationId of type xs:string.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://oscars.es.net/OSCARS":reservationResource of type "http://oscars.es.net/OSCARS":reservationResourceType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://oscars.es.net/OSCARS":forwardResponse of type "http://oscars.es.net/OSCARS":forwardReply.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://oscars.es.net/OSCARS                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://ogf.org/schema/network/topology/ctrlPlane/20080828/               *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":topology of type "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":CtrlPlaneTopologyContent.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":domain of type "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":CtrlPlaneDomainContent.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":node of type "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":CtrlPlaneNodeContent.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":port of type "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":CtrlPlanePortContent.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":link of type "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":CtrlPlaneLinkContent.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":path of type "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":CtrlPlanePathContent.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://ogf.org/schema/network/topology/ctrlPlane/20080828/               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicExpression of type "http://docs.oasis-open.org/wsn/b-2":TopicExpressionType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":FixedTopicSet of type xs:boolean.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialect of type xs:anyURI.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":ConsumerReference of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":Filter of type "http://docs.oasis-open.org/wsn/b-2":FilterType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscriptionPolicy of type "http://docs.oasis-open.org/wsn/b-2":SubscriptionPolicyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":CreationTime of type xs:dateTime.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscriptionReference of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":Topic of type "http://docs.oasis-open.org/wsn/b-2":TopicExpressionType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":ProducerReference of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":NotificationMessage of type "http://docs.oasis-open.org/wsn/b-2":NotificationMessageHolderType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":CurrentTime of type xs:dateTime.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":TerminationTime of type xs:dateTime.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":ProducerProperties of type "http://docs.oasis-open.org/wsn/b-2":QueryExpressionType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":MessageContent of type "http://docs.oasis-open.org/wsn/b-2":QueryExpressionType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFault of type "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFault of type "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFault of type "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFault of type "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFault of type "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFault of type "http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFault of type "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFault of type "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFault of type "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFault of type "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFault of type "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFault of type "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFault of type "http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFault of type "http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFault of type "http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFault of type "http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFault of type "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFault of type "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":PauseFailedFault of type "http://docs.oasis-open.org/wsn/b-2":PauseFailedFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":ResumeFailedFault of type "http://docs.oasis-open.org/wsn/b-2":ResumeFailedFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://docs.oasis-open.org/wsrf/r-2                                      *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault of type "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsrf/r-2":ResourceUnavailableFault of type "http://docs.oasis-open.org/wsrf/r-2":ResourceUnavailableFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://docs.oasis-open.org/wsrf/r-2                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://docs.oasis-open.org/wsrf/bf-2":BaseFault of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/


//gsoap ns1  service name:	OSCARSSOAP 
//gsoap ns1  service type:	OSCARS 
//gsoap ns1  service port:	https://192.168.1.103:8443/axis2/services/OSCARS/ 
//gsoap ns1  service namespace:	http://oscars.es.net/OSCARS 
//gsoap ns1  service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage OSCARS Definitions

@section OSCARS_documentation Documentation
        This is WSDL for the OSCARS public reservation interface. These
        messages must be signed using the following WS-secuirty
        standards. The message is time stamped and includes the X.509
        certificate of the signing entity. The timestamp, certificate
        and message body are all signed. DRAFT V1.0 Nov 2006
    

@section OSCARS_bindings Service Bindings

  - @ref OSCARSSOAP

@section OSCARS_more More Information

  - @ref page_notes "Usage Notes"

  - @ref page_XMLDataBinding "XML Data Binding"

  - @ref SOAP_ENV__Header "SOAP Header Content" (when applicable)

  - @ref SOAP_ENV__Detail "SOAP Fault Detail Content" (when applicable)


*/

/**

@page OSCARSSOAP Binding "OSCARSSOAP"

@section OSCARSSOAP_operations Operations of Binding  "OSCARSSOAP"

  - @ref __ns1__createReservation

  - @ref __ns1__queryReservation

  - @ref __ns1__listReservations

  - @ref __ns1__cancelReservation

  - @ref __ns1__modifyReservation

  - @ref __ns1__getNetworkTopology

  - @ref __ns1__createPath

  - @ref __ns1__refreshPath

  - @ref __ns1__teardownPath

  - @ref __ns1__forward

  - @ref __ns1__Notify

@section OSCARSSOAP_ports Endpoints of Binding  "OSCARSSOAP"

  - https://192.168.1.103:8443/axis2/services/OSCARS/

Note: use wsdl2h option -N to change the service binding prefix name

*/

/******************************************************************************\
 *                                                                            *
 * SOAP Fault Detail                                                          *
 *                                                                            *
\******************************************************************************/

/**

The SOAP Fault is part of the gSOAP context and its content is accessed
through the soap.fault->detail variable (SOAP 1.1) or the
soap.fault->SOAP_ENV__Detail variable (SOAP 1.2).
Use option -j to omit.

*/
struct SOAP_ENV__Detail
{
// xsd:anyAttribute omitted: to parse attribute content of the Detail element into DOM anyAttribute, use wsdl2h option -d.
    _XML                                 __any                         ;	///< Catch any element content in XML string.
    struct _ns1__AAAFault*               ns1__AAAFault                 ;
///< SOAP Fault element ""http://oscars.es.net/OSCARS":AAAFault" part "fault"
    struct _ns1__BSSFault*               ns1__BSSFault                 ;
///< SOAP Fault element ""http://oscars.es.net/OSCARS":BSSFault" part "fault"
    int                                  __type                        ;	///< set to SOAP_TYPE_X for a serializable type X
    void                                *fault                         ;	///< points to serializable object X or NULL
};

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   OSCARSSOAP                                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__createReservation                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__createReservation" of service binding "OSCARSSOAP"

/**

Operation details:


  - WS-Policy applicable to the operation:
	- Exactly one of the following:
		- All of the following:
			- [7.5] WS-Security Asymmetric Binding (public key) requirements:
				- [7.1] Security Binding Algorithm Suite requirements:
					- TripleDesRsa15
				- [7.2] WS-Security Header Layout requirements:
					- WS-Security headers 'declare before use' required (gSOAP default)
				- Initiator requirements:
					- [5.4.3] WS-Security X509 required:
					  -# IncludeToken = http://schemas.xmlsoap.org/ws/2005/07/securitypolicy/IncludeToken/AlwaysToRecipient
						- A thumbprint reference is required
						- An X509 Version 3 token should be used as defined in X509TokenProfile1.0
				- Recipient requirements:
					- [5.4.3] WS-Security X509 required:
					  -# IncludeToken = http://schemas.xmlsoap.org/ws/2005/07/securitypolicy/IncludeToken/Always
						- A thumbprint reference is required
						- An X509 Version 3 token should be used as defined in X509TokenProfile1.0
				- WS-Security Timestamp should be set prior to send:
	@code
	#include "plugin/wsseapi.h"
	soap_wsse_add_Timestamp(soap, "Timestamp", <seconds>);
	@endcode
				- WS-Security Timestamp presence and expiration verified post-receive with:
	@code
	#include "plugin/wsseapi.h"
	if (soap_wsse_verify_Timestamp(soap)) ...<error>...
	@endcode
				- WS-Security Sign Entire Headers and Body:
	@code
	#include "plugin/wsseapi.h"
	soap_wsse_set_wsu_id(soap, "<ns:tagname1> <ns:tagname2> ..."); // list each ns:tagname used in SOAP Header
	soap_wsse_sign_body(soap, <algorithm>, <key>, <keylen>);
	@endcode
			- [9.1] WSS: SOAP Message Security 1.0 options:
				- Key Identifier References
				- Issuer Serial References

  - WS-Policy enablers:
    - WS-Addressing 1.0 (2005/08, accepts 2004/08):
	@code
	#import "import/wsa5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-Addressing (2004/08):
	@code
	#import "import/wsa.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-ReliableMessaging 1.1:
	@code
	#import "import/wsrm.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.1 (accepts 1.0):
	@code
	#import "import/wsse11.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.0:
	@code
	#import "import/wsse.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - HTTP Digest Authentication:
	@code
	#include "plugin/httpda.h"
	soap_register_plugin(soap, soap_http_da); // register the HTTP DA plugin in your code
	// See the user guide gsoap/doc/httpda/html/index.html
	@endcode

  - WS-Policy applicable to the request message:
	- Exactly one of the following:
		- All of the following:
			- [4.1.1] WS-Security Signed Parts requirements:
			  -# Body:
	@code
	#include "plugin/wsseapi.h"
	soap_wsse_sign_body(soap, <algorithm>, <key>, <keylen>);
	@endcode
  - WS-Policy enablers:
    - WS-Addressing 1.0 (2005/08, accepts 2004/08):
	@code
	#import "import/wsa5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-Addressing (2004/08):
	@code
	#import "import/wsa.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-ReliableMessaging 1.1:
	@code
	#import "import/wsrm.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.1 (accepts 1.0):
	@code
	#import "import/wsse11.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.0:
	@code
	#import "import/wsse.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - HTTP Digest Authentication:
	@code
	#include "plugin/httpda.h"
	soap_register_plugin(soap, soap_http_da); // register the HTTP DA plugin in your code
	// See the user guide gsoap/doc/httpda/html/index.html
	@endcode

  - SOAP document/literal style messaging

  - SOAP action="http://oscars.es.net/OSCARS/createReservation"

  - SOAP Fault: "http://oscars.es.net/OSCARS":BSSFault (literal)

  - SOAP Fault: "http://oscars.es.net/OSCARS":AAAFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__createReservation(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct ns1__resCreateContent*       ns1__createReservation,
    // response parameters:
    struct ns1__createReply*            ns1__createReservationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__createReservation(
    struct soap *soap,
    // request parameters:
    struct ns1__resCreateContent*       ns1__createReservation,
    // response parameters:
    struct ns1__createReply*            ns1__createReservationResponse
  );
@endcode

*/

//gsoap ns1  service method-style:	createReservation document
//gsoap ns1  service method-encoding:	createReservation literal
//gsoap ns1  service method-action:	createReservation http://oscars.es.net/OSCARS/createReservation
//gsoap ns1  service method-fault:	createReservation ns1__BSSFault
//gsoap ns1  service method-fault:	createReservation ns1__AAAFault
int __ns1__createReservation(
    struct ns1__resCreateContent*       ns1__createReservation,	///< Request parameter
    struct ns1__createReply*            ns1__createReservationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__queryReservation                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__queryReservation" of service binding "OSCARSSOAP"

/**

Operation details:


  - WS-Policy applicable to the operation:
	- Exactly one of the following:
		- All of the following:
			- [7.5] WS-Security Asymmetric Binding (public key) requirements:
				- [7.1] Security Binding Algorithm Suite requirements:
					- TripleDesRsa15
				- [7.2] WS-Security Header Layout requirements:
					- WS-Security headers 'declare before use' required (gSOAP default)
				- Initiator requirements:
					- [5.4.3] WS-Security X509 required:
					  -# IncludeToken = http://schemas.xmlsoap.org/ws/2005/07/securitypolicy/IncludeToken/AlwaysToRecipient
						- A thumbprint reference is required
						- An X509 Version 3 token should be used as defined in X509TokenProfile1.0
				- Recipient requirements:
					- [5.4.3] WS-Security X509 required:
					  -# IncludeToken = http://schemas.xmlsoap.org/ws/2005/07/securitypolicy/IncludeToken/Always
						- A thumbprint reference is required
						- An X509 Version 3 token should be used as defined in X509TokenProfile1.0
				- WS-Security Timestamp should be set prior to send:
	@code
	#include "plugin/wsseapi.h"
	soap_wsse_add_Timestamp(soap, "Timestamp", <seconds>);
	@endcode
				- WS-Security Timestamp presence and expiration verified post-receive with:
	@code
	#include "plugin/wsseapi.h"
	if (soap_wsse_verify_Timestamp(soap)) ...<error>...
	@endcode
				- WS-Security Sign Entire Headers and Body:
	@code
	#include "plugin/wsseapi.h"
	soap_wsse_set_wsu_id(soap, "<ns:tagname1> <ns:tagname2> ..."); // list each ns:tagname used in SOAP Header
	soap_wsse_sign_body(soap, <algorithm>, <key>, <keylen>);
	@endcode
			- [9.1] WSS: SOAP Message Security 1.0 options:
				- Key Identifier References
				- Issuer Serial References

  - WS-Policy enablers:
    - WS-Addressing 1.0 (2005/08, accepts 2004/08):
	@code
	#import "import/wsa5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-Addressing (2004/08):
	@code
	#import "import/wsa.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-ReliableMessaging 1.1:
	@code
	#import "import/wsrm.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.1 (accepts 1.0):
	@code
	#import "import/wsse11.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.0:
	@code
	#import "import/wsse.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - HTTP Digest Authentication:
	@code
	#include "plugin/httpda.h"
	soap_register_plugin(soap, soap_http_da); // register the HTTP DA plugin in your code
	// See the user guide gsoap/doc/httpda/html/index.html
	@endcode

  - WS-Policy applicable to the request message:
	- Exactly one of the following:
		- All of the following:
			- [4.1.1] WS-Security Signed Parts requirements:
			  -# Body:
	@code
	#include "plugin/wsseapi.h"
	soap_wsse_sign_body(soap, <algorithm>, <key>, <keylen>);
	@endcode
  - WS-Policy enablers:
    - WS-Addressing 1.0 (2005/08, accepts 2004/08):
	@code
	#import "import/wsa5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-Addressing (2004/08):
	@code
	#import "import/wsa.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-ReliableMessaging 1.1:
	@code
	#import "import/wsrm.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.1 (accepts 1.0):
	@code
	#import "import/wsse11.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.0:
	@code
	#import "import/wsse.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - HTTP Digest Authentication:
	@code
	#include "plugin/httpda.h"
	soap_register_plugin(soap, soap_http_da); // register the HTTP DA plugin in your code
	// See the user guide gsoap/doc/httpda/html/index.html
	@endcode

  - SOAP document/literal style messaging

  - SOAP action="http://oscars.es.net/OSCARS/queryReservation"

  - SOAP Fault: "http://oscars.es.net/OSCARS":BSSFault (literal)

  - SOAP Fault: "http://oscars.es.net/OSCARS":AAAFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__queryReservation(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct ns1__globalReservationId*    ns1__queryReservation,
    // response parameters:
    struct ns1__resDetails*             ns1__queryReservationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__queryReservation(
    struct soap *soap,
    // request parameters:
    struct ns1__globalReservationId*    ns1__queryReservation,
    // response parameters:
    struct ns1__resDetails*             ns1__queryReservationResponse
  );
@endcode

*/

//gsoap ns1  service method-style:	queryReservation document
//gsoap ns1  service method-encoding:	queryReservation literal
//gsoap ns1  service method-action:	queryReservation http://oscars.es.net/OSCARS/queryReservation
//gsoap ns1  service method-fault:	queryReservation ns1__BSSFault
//gsoap ns1  service method-fault:	queryReservation ns1__AAAFault
int __ns1__queryReservation(
    struct ns1__globalReservationId*    ns1__queryReservation,	///< Request parameter
    struct ns1__resDetails*             ns1__queryReservationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__listReservations                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__listReservations" of service binding "OSCARSSOAP"

/**

Operation details:


  - WS-Policy applicable to the operation:
	- Exactly one of the following:
		- All of the following:
			- [7.5] WS-Security Asymmetric Binding (public key) requirements:
				- [7.1] Security Binding Algorithm Suite requirements:
					- TripleDesRsa15
				- [7.2] WS-Security Header Layout requirements:
					- WS-Security headers 'declare before use' required (gSOAP default)
				- Initiator requirements:
					- [5.4.3] WS-Security X509 required:
					  -# IncludeToken = http://schemas.xmlsoap.org/ws/2005/07/securitypolicy/IncludeToken/AlwaysToRecipient
						- A thumbprint reference is required
						- An X509 Version 3 token should be used as defined in X509TokenProfile1.0
				- Recipient requirements:
					- [5.4.3] WS-Security X509 required:
					  -# IncludeToken = http://schemas.xmlsoap.org/ws/2005/07/securitypolicy/IncludeToken/Always
						- A thumbprint reference is required
						- An X509 Version 3 token should be used as defined in X509TokenProfile1.0
				- WS-Security Timestamp should be set prior to send:
	@code
	#include "plugin/wsseapi.h"
	soap_wsse_add_Timestamp(soap, "Timestamp", <seconds>);
	@endcode
				- WS-Security Timestamp presence and expiration verified post-receive with:
	@code
	#include "plugin/wsseapi.h"
	if (soap_wsse_verify_Timestamp(soap)) ...<error>...
	@endcode
				- WS-Security Sign Entire Headers and Body:
	@code
	#include "plugin/wsseapi.h"
	soap_wsse_set_wsu_id(soap, "<ns:tagname1> <ns:tagname2> ..."); // list each ns:tagname used in SOAP Header
	soap_wsse_sign_body(soap, <algorithm>, <key>, <keylen>);
	@endcode
			- [9.1] WSS: SOAP Message Security 1.0 options:
				- Key Identifier References
				- Issuer Serial References

  - WS-Policy enablers:
    - WS-Addressing 1.0 (2005/08, accepts 2004/08):
	@code
	#import "import/wsa5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-Addressing (2004/08):
	@code
	#import "import/wsa.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-ReliableMessaging 1.1:
	@code
	#import "import/wsrm.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.1 (accepts 1.0):
	@code
	#import "import/wsse11.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.0:
	@code
	#import "import/wsse.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - HTTP Digest Authentication:
	@code
	#include "plugin/httpda.h"
	soap_register_plugin(soap, soap_http_da); // register the HTTP DA plugin in your code
	// See the user guide gsoap/doc/httpda/html/index.html
	@endcode

  - WS-Policy applicable to the request message:
	- Exactly one of the following:
		- All of the following:
			- [4.1.1] WS-Security Signed Parts requirements:
			  -# Body:
	@code
	#include "plugin/wsseapi.h"
	soap_wsse_sign_body(soap, <algorithm>, <key>, <keylen>);
	@endcode
  - WS-Policy enablers:
    - WS-Addressing 1.0 (2005/08, accepts 2004/08):
	@code
	#import "import/wsa5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-Addressing (2004/08):
	@code
	#import "import/wsa.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-ReliableMessaging 1.1:
	@code
	#import "import/wsrm.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.1 (accepts 1.0):
	@code
	#import "import/wsse11.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.0:
	@code
	#import "import/wsse.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - HTTP Digest Authentication:
	@code
	#include "plugin/httpda.h"
	soap_register_plugin(soap, soap_http_da); // register the HTTP DA plugin in your code
	// See the user guide gsoap/doc/httpda/html/index.html
	@endcode

  - SOAP document/literal style messaging

  - SOAP action="http://oscars.es.net/OSCARS/listReservations"

  - SOAP Fault: "http://oscars.es.net/OSCARS":BSSFault (literal)

  - SOAP Fault: "http://oscars.es.net/OSCARS":AAAFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__listReservations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct ns1__listRequest*            ns1__listReservations,
    // response parameters:
    struct ns1__listReply*              ns1__listReservationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__listReservations(
    struct soap *soap,
    // request parameters:
    struct ns1__listRequest*            ns1__listReservations,
    // response parameters:
    struct ns1__listReply*              ns1__listReservationsResponse
  );
@endcode

*/

//gsoap ns1  service method-style:	listReservations document
//gsoap ns1  service method-encoding:	listReservations literal
//gsoap ns1  service method-action:	listReservations http://oscars.es.net/OSCARS/listReservations
//gsoap ns1  service method-fault:	listReservations ns1__BSSFault
//gsoap ns1  service method-fault:	listReservations ns1__AAAFault
int __ns1__listReservations(
    struct ns1__listRequest*            ns1__listReservations,	///< Request parameter
    struct ns1__listReply*              ns1__listReservationsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__cancelReservation                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__cancelReservation" of service binding "OSCARSSOAP"

/**

Operation details:


  - WS-Policy applicable to the operation:
	- Exactly one of the following:
		- All of the following:
			- [7.5] WS-Security Asymmetric Binding (public key) requirements:
				- [7.1] Security Binding Algorithm Suite requirements:
					- TripleDesRsa15
				- [7.2] WS-Security Header Layout requirements:
					- WS-Security headers 'declare before use' required (gSOAP default)
				- Initiator requirements:
					- [5.4.3] WS-Security X509 required:
					  -# IncludeToken = http://schemas.xmlsoap.org/ws/2005/07/securitypolicy/IncludeToken/AlwaysToRecipient
						- A thumbprint reference is required
						- An X509 Version 3 token should be used as defined in X509TokenProfile1.0
				- Recipient requirements:
					- [5.4.3] WS-Security X509 required:
					  -# IncludeToken = http://schemas.xmlsoap.org/ws/2005/07/securitypolicy/IncludeToken/Always
						- A thumbprint reference is required
						- An X509 Version 3 token should be used as defined in X509TokenProfile1.0
				- WS-Security Timestamp should be set prior to send:
	@code
	#include "plugin/wsseapi.h"
	soap_wsse_add_Timestamp(soap, "Timestamp", <seconds>);
	@endcode
				- WS-Security Timestamp presence and expiration verified post-receive with:
	@code
	#include "plugin/wsseapi.h"
	if (soap_wsse_verify_Timestamp(soap)) ...<error>...
	@endcode
				- WS-Security Sign Entire Headers and Body:
	@code
	#include "plugin/wsseapi.h"
	soap_wsse_set_wsu_id(soap, "<ns:tagname1> <ns:tagname2> ..."); // list each ns:tagname used in SOAP Header
	soap_wsse_sign_body(soap, <algorithm>, <key>, <keylen>);
	@endcode
			- [9.1] WSS: SOAP Message Security 1.0 options:
				- Key Identifier References
				- Issuer Serial References

  - WS-Policy enablers:
    - WS-Addressing 1.0 (2005/08, accepts 2004/08):
	@code
	#import "import/wsa5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-Addressing (2004/08):
	@code
	#import "import/wsa.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-ReliableMessaging 1.1:
	@code
	#import "import/wsrm.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.1 (accepts 1.0):
	@code
	#import "import/wsse11.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.0:
	@code
	#import "import/wsse.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - HTTP Digest Authentication:
	@code
	#include "plugin/httpda.h"
	soap_register_plugin(soap, soap_http_da); // register the HTTP DA plugin in your code
	// See the user guide gsoap/doc/httpda/html/index.html
	@endcode

  - WS-Policy applicable to the request message:
	- Exactly one of the following:
		- All of the following:
			- [4.1.1] WS-Security Signed Parts requirements:
			  -# Body:
	@code
	#include "plugin/wsseapi.h"
	soap_wsse_sign_body(soap, <algorithm>, <key>, <keylen>);
	@endcode
  - WS-Policy enablers:
    - WS-Addressing 1.0 (2005/08, accepts 2004/08):
	@code
	#import "import/wsa5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-Addressing (2004/08):
	@code
	#import "import/wsa.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-ReliableMessaging 1.1:
	@code
	#import "import/wsrm.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.1 (accepts 1.0):
	@code
	#import "import/wsse11.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.0:
	@code
	#import "import/wsse.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - HTTP Digest Authentication:
	@code
	#include "plugin/httpda.h"
	soap_register_plugin(soap, soap_http_da); // register the HTTP DA plugin in your code
	// See the user guide gsoap/doc/httpda/html/index.html
	@endcode

  - SOAP document/literal style messaging

  - SOAP action="http://oscars.es.net/OSCARS/cancelReservation"

  - SOAP Fault: "http://oscars.es.net/OSCARS":BSSFault (literal)

  - SOAP Fault: "http://oscars.es.net/OSCARS":AAAFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__cancelReservation(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct ns1__globalReservationId*    ns1__cancelReservation,
    // response parameters:
    char*                              *ns1__cancelReservationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__cancelReservation(
    struct soap *soap,
    // request parameters:
    struct ns1__globalReservationId*    ns1__cancelReservation,
    // response parameters:
    char*                              *ns1__cancelReservationResponse
  );
@endcode

*/

//gsoap ns1  service method-style:	cancelReservation document
//gsoap ns1  service method-encoding:	cancelReservation literal
//gsoap ns1  service method-action:	cancelReservation http://oscars.es.net/OSCARS/cancelReservation
//gsoap ns1  service method-fault:	cancelReservation ns1__BSSFault
//gsoap ns1  service method-fault:	cancelReservation ns1__AAAFault
int __ns1__cancelReservation(
    struct ns1__globalReservationId*    ns1__cancelReservation,	///< Request parameter
    char*                              *ns1__cancelReservationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__modifyReservation                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__modifyReservation" of service binding "OSCARSSOAP"

/**

Operation details:


  - WS-Policy applicable to the operation:
	- Exactly one of the following:
		- All of the following:
			- [7.5] WS-Security Asymmetric Binding (public key) requirements:
				- [7.1] Security Binding Algorithm Suite requirements:
					- TripleDesRsa15
				- [7.2] WS-Security Header Layout requirements:
					- WS-Security headers 'declare before use' required (gSOAP default)
				- Initiator requirements:
					- [5.4.3] WS-Security X509 required:
					  -# IncludeToken = http://schemas.xmlsoap.org/ws/2005/07/securitypolicy/IncludeToken/AlwaysToRecipient
						- A thumbprint reference is required
						- An X509 Version 3 token should be used as defined in X509TokenProfile1.0
				- Recipient requirements:
					- [5.4.3] WS-Security X509 required:
					  -# IncludeToken = http://schemas.xmlsoap.org/ws/2005/07/securitypolicy/IncludeToken/Always
						- A thumbprint reference is required
						- An X509 Version 3 token should be used as defined in X509TokenProfile1.0
				- WS-Security Timestamp should be set prior to send:
	@code
	#include "plugin/wsseapi.h"
	soap_wsse_add_Timestamp(soap, "Timestamp", <seconds>);
	@endcode
				- WS-Security Timestamp presence and expiration verified post-receive with:
	@code
	#include "plugin/wsseapi.h"
	if (soap_wsse_verify_Timestamp(soap)) ...<error>...
	@endcode
				- WS-Security Sign Entire Headers and Body:
	@code
	#include "plugin/wsseapi.h"
	soap_wsse_set_wsu_id(soap, "<ns:tagname1> <ns:tagname2> ..."); // list each ns:tagname used in SOAP Header
	soap_wsse_sign_body(soap, <algorithm>, <key>, <keylen>);
	@endcode
			- [9.1] WSS: SOAP Message Security 1.0 options:
				- Key Identifier References
				- Issuer Serial References

  - WS-Policy enablers:
    - WS-Addressing 1.0 (2005/08, accepts 2004/08):
	@code
	#import "import/wsa5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-Addressing (2004/08):
	@code
	#import "import/wsa.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-ReliableMessaging 1.1:
	@code
	#import "import/wsrm.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.1 (accepts 1.0):
	@code
	#import "import/wsse11.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.0:
	@code
	#import "import/wsse.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - HTTP Digest Authentication:
	@code
	#include "plugin/httpda.h"
	soap_register_plugin(soap, soap_http_da); // register the HTTP DA plugin in your code
	// See the user guide gsoap/doc/httpda/html/index.html
	@endcode

  - WS-Policy applicable to the request message:
	- Exactly one of the following:
		- All of the following:
			- [4.1.1] WS-Security Signed Parts requirements:
			  -# Body:
	@code
	#include "plugin/wsseapi.h"
	soap_wsse_sign_body(soap, <algorithm>, <key>, <keylen>);
	@endcode
  - WS-Policy enablers:
    - WS-Addressing 1.0 (2005/08, accepts 2004/08):
	@code
	#import "import/wsa5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-Addressing (2004/08):
	@code
	#import "import/wsa.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-ReliableMessaging 1.1:
	@code
	#import "import/wsrm.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.1 (accepts 1.0):
	@code
	#import "import/wsse11.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.0:
	@code
	#import "import/wsse.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - HTTP Digest Authentication:
	@code
	#include "plugin/httpda.h"
	soap_register_plugin(soap, soap_http_da); // register the HTTP DA plugin in your code
	// See the user guide gsoap/doc/httpda/html/index.html
	@endcode

  - SOAP document/literal style messaging

  - SOAP action="http://oscars.es.net/OSCARS/modifyReservation"

  - SOAP Fault: "http://oscars.es.net/OSCARS":BSSFault (literal)

  - SOAP Fault: "http://oscars.es.net/OSCARS":AAAFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__modifyReservation(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct ns1__modifyResContent*       ns1__modifyReservation,
    // response parameters:
    struct ns1__modifyResReply*         ns1__modifyReservationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__modifyReservation(
    struct soap *soap,
    // request parameters:
    struct ns1__modifyResContent*       ns1__modifyReservation,
    // response parameters:
    struct ns1__modifyResReply*         ns1__modifyReservationResponse
  );
@endcode

*/

//gsoap ns1  service method-style:	modifyReservation document
//gsoap ns1  service method-encoding:	modifyReservation literal
//gsoap ns1  service method-action:	modifyReservation http://oscars.es.net/OSCARS/modifyReservation
//gsoap ns1  service method-fault:	modifyReservation ns1__BSSFault
//gsoap ns1  service method-fault:	modifyReservation ns1__AAAFault
int __ns1__modifyReservation(
    struct ns1__modifyResContent*       ns1__modifyReservation,	///< Request parameter
    struct ns1__modifyResReply*         ns1__modifyReservationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__getNetworkTopology                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__getNetworkTopology" of service binding "OSCARSSOAP"

/**

Operation details:


  - WS-Policy applicable to the operation:
	- Exactly one of the following:
		- All of the following:
			- [7.5] WS-Security Asymmetric Binding (public key) requirements:
				- [7.1] Security Binding Algorithm Suite requirements:
					- TripleDesRsa15
				- [7.2] WS-Security Header Layout requirements:
					- WS-Security headers 'declare before use' required (gSOAP default)
				- Initiator requirements:
					- [5.4.3] WS-Security X509 required:
					  -# IncludeToken = http://schemas.xmlsoap.org/ws/2005/07/securitypolicy/IncludeToken/AlwaysToRecipient
						- A thumbprint reference is required
						- An X509 Version 3 token should be used as defined in X509TokenProfile1.0
				- Recipient requirements:
					- [5.4.3] WS-Security X509 required:
					  -# IncludeToken = http://schemas.xmlsoap.org/ws/2005/07/securitypolicy/IncludeToken/Always
						- A thumbprint reference is required
						- An X509 Version 3 token should be used as defined in X509TokenProfile1.0
				- WS-Security Timestamp should be set prior to send:
	@code
	#include "plugin/wsseapi.h"
	soap_wsse_add_Timestamp(soap, "Timestamp", <seconds>);
	@endcode
				- WS-Security Timestamp presence and expiration verified post-receive with:
	@code
	#include "plugin/wsseapi.h"
	if (soap_wsse_verify_Timestamp(soap)) ...<error>...
	@endcode
				- WS-Security Sign Entire Headers and Body:
	@code
	#include "plugin/wsseapi.h"
	soap_wsse_set_wsu_id(soap, "<ns:tagname1> <ns:tagname2> ..."); // list each ns:tagname used in SOAP Header
	soap_wsse_sign_body(soap, <algorithm>, <key>, <keylen>);
	@endcode
			- [9.1] WSS: SOAP Message Security 1.0 options:
				- Key Identifier References
				- Issuer Serial References

  - WS-Policy enablers:
    - WS-Addressing 1.0 (2005/08, accepts 2004/08):
	@code
	#import "import/wsa5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-Addressing (2004/08):
	@code
	#import "import/wsa.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-ReliableMessaging 1.1:
	@code
	#import "import/wsrm.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.1 (accepts 1.0):
	@code
	#import "import/wsse11.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.0:
	@code
	#import "import/wsse.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - HTTP Digest Authentication:
	@code
	#include "plugin/httpda.h"
	soap_register_plugin(soap, soap_http_da); // register the HTTP DA plugin in your code
	// See the user guide gsoap/doc/httpda/html/index.html
	@endcode

  - WS-Policy applicable to the request message:
	- Exactly one of the following:
		- All of the following:
			- [4.1.1] WS-Security Signed Parts requirements:
			  -# Body:
	@code
	#include "plugin/wsseapi.h"
	soap_wsse_sign_body(soap, <algorithm>, <key>, <keylen>);
	@endcode
  - WS-Policy enablers:
    - WS-Addressing 1.0 (2005/08, accepts 2004/08):
	@code
	#import "import/wsa5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-Addressing (2004/08):
	@code
	#import "import/wsa.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-ReliableMessaging 1.1:
	@code
	#import "import/wsrm.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.1 (accepts 1.0):
	@code
	#import "import/wsse11.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.0:
	@code
	#import "import/wsse.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - HTTP Digest Authentication:
	@code
	#include "plugin/httpda.h"
	soap_register_plugin(soap, soap_http_da); // register the HTTP DA plugin in your code
	// See the user guide gsoap/doc/httpda/html/index.html
	@endcode

  - SOAP document/literal style messaging

  - SOAP action="http://oscars.es.net/OSCARS/getNetworkTopology"

  - SOAP Fault: "http://oscars.es.net/OSCARS":BSSFault (literal)

  - SOAP Fault: "http://oscars.es.net/OSCARS":AAAFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__getNetworkTopology(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct ns1__getTopologyContent*     ns1__getNetworkTopology,
    // response parameters:
    struct ns1__getTopologyResponseContent* ns1__getNetworkTopologyResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__getNetworkTopology(
    struct soap *soap,
    // request parameters:
    struct ns1__getTopologyContent*     ns1__getNetworkTopology,
    // response parameters:
    struct ns1__getTopologyResponseContent* ns1__getNetworkTopologyResponse
  );
@endcode

*/

//gsoap ns1  service method-style:	getNetworkTopology document
//gsoap ns1  service method-encoding:	getNetworkTopology literal
//gsoap ns1  service method-action:	getNetworkTopology http://oscars.es.net/OSCARS/getNetworkTopology
//gsoap ns1  service method-fault:	getNetworkTopology ns1__BSSFault
//gsoap ns1  service method-fault:	getNetworkTopology ns1__AAAFault
int __ns1__getNetworkTopology(
    struct ns1__getTopologyContent*     ns1__getNetworkTopology,	///< Request parameter
    struct ns1__getTopologyResponseContent* ns1__getNetworkTopologyResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__createPath                                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__createPath" of service binding "OSCARSSOAP"

/**

Operation details:


  - WS-Policy applicable to the operation:
	- Exactly one of the following:
		- All of the following:
			- [7.5] WS-Security Asymmetric Binding (public key) requirements:
				- [7.1] Security Binding Algorithm Suite requirements:
					- TripleDesRsa15
				- [7.2] WS-Security Header Layout requirements:
					- WS-Security headers 'declare before use' required (gSOAP default)
				- Initiator requirements:
					- [5.4.3] WS-Security X509 required:
					  -# IncludeToken = http://schemas.xmlsoap.org/ws/2005/07/securitypolicy/IncludeToken/AlwaysToRecipient
						- A thumbprint reference is required
						- An X509 Version 3 token should be used as defined in X509TokenProfile1.0
				- Recipient requirements:
					- [5.4.3] WS-Security X509 required:
					  -# IncludeToken = http://schemas.xmlsoap.org/ws/2005/07/securitypolicy/IncludeToken/Always
						- A thumbprint reference is required
						- An X509 Version 3 token should be used as defined in X509TokenProfile1.0
				- WS-Security Timestamp should be set prior to send:
	@code
	#include "plugin/wsseapi.h"
	soap_wsse_add_Timestamp(soap, "Timestamp", <seconds>);
	@endcode
				- WS-Security Timestamp presence and expiration verified post-receive with:
	@code
	#include "plugin/wsseapi.h"
	if (soap_wsse_verify_Timestamp(soap)) ...<error>...
	@endcode
				- WS-Security Sign Entire Headers and Body:
	@code
	#include "plugin/wsseapi.h"
	soap_wsse_set_wsu_id(soap, "<ns:tagname1> <ns:tagname2> ..."); // list each ns:tagname used in SOAP Header
	soap_wsse_sign_body(soap, <algorithm>, <key>, <keylen>);
	@endcode
			- [9.1] WSS: SOAP Message Security 1.0 options:
				- Key Identifier References
				- Issuer Serial References

  - WS-Policy enablers:
    - WS-Addressing 1.0 (2005/08, accepts 2004/08):
	@code
	#import "import/wsa5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-Addressing (2004/08):
	@code
	#import "import/wsa.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-ReliableMessaging 1.1:
	@code
	#import "import/wsrm.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.1 (accepts 1.0):
	@code
	#import "import/wsse11.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.0:
	@code
	#import "import/wsse.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - HTTP Digest Authentication:
	@code
	#include "plugin/httpda.h"
	soap_register_plugin(soap, soap_http_da); // register the HTTP DA plugin in your code
	// See the user guide gsoap/doc/httpda/html/index.html
	@endcode

  - WS-Policy applicable to the request message:
	- Exactly one of the following:
		- All of the following:
			- [4.1.1] WS-Security Signed Parts requirements:
			  -# Body:
	@code
	#include "plugin/wsseapi.h"
	soap_wsse_sign_body(soap, <algorithm>, <key>, <keylen>);
	@endcode
  - WS-Policy enablers:
    - WS-Addressing 1.0 (2005/08, accepts 2004/08):
	@code
	#import "import/wsa5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-Addressing (2004/08):
	@code
	#import "import/wsa.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-ReliableMessaging 1.1:
	@code
	#import "import/wsrm.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.1 (accepts 1.0):
	@code
	#import "import/wsse11.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.0:
	@code
	#import "import/wsse.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - HTTP Digest Authentication:
	@code
	#include "plugin/httpda.h"
	soap_register_plugin(soap, soap_http_da); // register the HTTP DA plugin in your code
	// See the user guide gsoap/doc/httpda/html/index.html
	@endcode

  - SOAP document/literal style messaging

  - SOAP action="http://oscars.es.net/OSCARS/createPath"

  - SOAP Fault: "http://oscars.es.net/OSCARS":BSSFault (literal)

  - SOAP Fault: "http://oscars.es.net/OSCARS":AAAFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__createPath(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct ns1__createPathContent*      ns1__createPath,
    // response parameters:
    struct ns1__createPathResponseContent* ns1__createPathResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__createPath(
    struct soap *soap,
    // request parameters:
    struct ns1__createPathContent*      ns1__createPath,
    // response parameters:
    struct ns1__createPathResponseContent* ns1__createPathResponse
  );
@endcode

*/

//gsoap ns1  service method-style:	createPath document
//gsoap ns1  service method-encoding:	createPath literal
//gsoap ns1  service method-action:	createPath http://oscars.es.net/OSCARS/createPath
//gsoap ns1  service method-fault:	createPath ns1__BSSFault
//gsoap ns1  service method-fault:	createPath ns1__AAAFault
int __ns1__createPath(
    struct ns1__createPathContent*      ns1__createPath,	///< Request parameter
    struct ns1__createPathResponseContent* ns1__createPathResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__refreshPath                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__refreshPath" of service binding "OSCARSSOAP"

/**

Operation details:


  - WS-Policy applicable to the operation:
	- Exactly one of the following:
		- All of the following:
			- [7.5] WS-Security Asymmetric Binding (public key) requirements:
				- [7.1] Security Binding Algorithm Suite requirements:
					- TripleDesRsa15
				- [7.2] WS-Security Header Layout requirements:
					- WS-Security headers 'declare before use' required (gSOAP default)
				- Initiator requirements:
					- [5.4.3] WS-Security X509 required:
					  -# IncludeToken = http://schemas.xmlsoap.org/ws/2005/07/securitypolicy/IncludeToken/AlwaysToRecipient
						- A thumbprint reference is required
						- An X509 Version 3 token should be used as defined in X509TokenProfile1.0
				- Recipient requirements:
					- [5.4.3] WS-Security X509 required:
					  -# IncludeToken = http://schemas.xmlsoap.org/ws/2005/07/securitypolicy/IncludeToken/Always
						- A thumbprint reference is required
						- An X509 Version 3 token should be used as defined in X509TokenProfile1.0
				- WS-Security Timestamp should be set prior to send:
	@code
	#include "plugin/wsseapi.h"
	soap_wsse_add_Timestamp(soap, "Timestamp", <seconds>);
	@endcode
				- WS-Security Timestamp presence and expiration verified post-receive with:
	@code
	#include "plugin/wsseapi.h"
	if (soap_wsse_verify_Timestamp(soap)) ...<error>...
	@endcode
				- WS-Security Sign Entire Headers and Body:
	@code
	#include "plugin/wsseapi.h"
	soap_wsse_set_wsu_id(soap, "<ns:tagname1> <ns:tagname2> ..."); // list each ns:tagname used in SOAP Header
	soap_wsse_sign_body(soap, <algorithm>, <key>, <keylen>);
	@endcode
			- [9.1] WSS: SOAP Message Security 1.0 options:
				- Key Identifier References
				- Issuer Serial References

  - WS-Policy enablers:
    - WS-Addressing 1.0 (2005/08, accepts 2004/08):
	@code
	#import "import/wsa5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-Addressing (2004/08):
	@code
	#import "import/wsa.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-ReliableMessaging 1.1:
	@code
	#import "import/wsrm.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.1 (accepts 1.0):
	@code
	#import "import/wsse11.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.0:
	@code
	#import "import/wsse.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - HTTP Digest Authentication:
	@code
	#include "plugin/httpda.h"
	soap_register_plugin(soap, soap_http_da); // register the HTTP DA plugin in your code
	// See the user guide gsoap/doc/httpda/html/index.html
	@endcode

  - WS-Policy applicable to the request message:
	- Exactly one of the following:
		- All of the following:
			- [4.1.1] WS-Security Signed Parts requirements:
			  -# Body:
	@code
	#include "plugin/wsseapi.h"
	soap_wsse_sign_body(soap, <algorithm>, <key>, <keylen>);
	@endcode
  - WS-Policy enablers:
    - WS-Addressing 1.0 (2005/08, accepts 2004/08):
	@code
	#import "import/wsa5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-Addressing (2004/08):
	@code
	#import "import/wsa.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-ReliableMessaging 1.1:
	@code
	#import "import/wsrm.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.1 (accepts 1.0):
	@code
	#import "import/wsse11.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.0:
	@code
	#import "import/wsse.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - HTTP Digest Authentication:
	@code
	#include "plugin/httpda.h"
	soap_register_plugin(soap, soap_http_da); // register the HTTP DA plugin in your code
	// See the user guide gsoap/doc/httpda/html/index.html
	@endcode

  - SOAP document/literal style messaging

  - SOAP action="http://oscars.es.net/OSCARS/refreshPath"

  - SOAP Fault: "http://oscars.es.net/OSCARS":BSSFault (literal)

  - SOAP Fault: "http://oscars.es.net/OSCARS":AAAFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__refreshPath(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct ns1__refreshPathContent*     ns1__refreshPath,
    // response parameters:
    struct ns1__refreshPathResponseContent* ns1__refreshPathResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__refreshPath(
    struct soap *soap,
    // request parameters:
    struct ns1__refreshPathContent*     ns1__refreshPath,
    // response parameters:
    struct ns1__refreshPathResponseContent* ns1__refreshPathResponse
  );
@endcode

*/

//gsoap ns1  service method-style:	refreshPath document
//gsoap ns1  service method-encoding:	refreshPath literal
//gsoap ns1  service method-action:	refreshPath http://oscars.es.net/OSCARS/refreshPath
//gsoap ns1  service method-fault:	refreshPath ns1__BSSFault
//gsoap ns1  service method-fault:	refreshPath ns1__AAAFault
int __ns1__refreshPath(
    struct ns1__refreshPathContent*     ns1__refreshPath,	///< Request parameter
    struct ns1__refreshPathResponseContent* ns1__refreshPathResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__teardownPath                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__teardownPath" of service binding "OSCARSSOAP"

/**

Operation details:


  - WS-Policy applicable to the operation:
	- Exactly one of the following:
		- All of the following:
			- [7.5] WS-Security Asymmetric Binding (public key) requirements:
				- [7.1] Security Binding Algorithm Suite requirements:
					- TripleDesRsa15
				- [7.2] WS-Security Header Layout requirements:
					- WS-Security headers 'declare before use' required (gSOAP default)
				- Initiator requirements:
					- [5.4.3] WS-Security X509 required:
					  -# IncludeToken = http://schemas.xmlsoap.org/ws/2005/07/securitypolicy/IncludeToken/AlwaysToRecipient
						- A thumbprint reference is required
						- An X509 Version 3 token should be used as defined in X509TokenProfile1.0
				- Recipient requirements:
					- [5.4.3] WS-Security X509 required:
					  -# IncludeToken = http://schemas.xmlsoap.org/ws/2005/07/securitypolicy/IncludeToken/Always
						- A thumbprint reference is required
						- An X509 Version 3 token should be used as defined in X509TokenProfile1.0
				- WS-Security Timestamp should be set prior to send:
	@code
	#include "plugin/wsseapi.h"
	soap_wsse_add_Timestamp(soap, "Timestamp", <seconds>);
	@endcode
				- WS-Security Timestamp presence and expiration verified post-receive with:
	@code
	#include "plugin/wsseapi.h"
	if (soap_wsse_verify_Timestamp(soap)) ...<error>...
	@endcode
				- WS-Security Sign Entire Headers and Body:
	@code
	#include "plugin/wsseapi.h"
	soap_wsse_set_wsu_id(soap, "<ns:tagname1> <ns:tagname2> ..."); // list each ns:tagname used in SOAP Header
	soap_wsse_sign_body(soap, <algorithm>, <key>, <keylen>);
	@endcode
			- [9.1] WSS: SOAP Message Security 1.0 options:
				- Key Identifier References
				- Issuer Serial References

  - WS-Policy enablers:
    - WS-Addressing 1.0 (2005/08, accepts 2004/08):
	@code
	#import "import/wsa5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-Addressing (2004/08):
	@code
	#import "import/wsa.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-ReliableMessaging 1.1:
	@code
	#import "import/wsrm.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.1 (accepts 1.0):
	@code
	#import "import/wsse11.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.0:
	@code
	#import "import/wsse.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - HTTP Digest Authentication:
	@code
	#include "plugin/httpda.h"
	soap_register_plugin(soap, soap_http_da); // register the HTTP DA plugin in your code
	// See the user guide gsoap/doc/httpda/html/index.html
	@endcode

  - WS-Policy applicable to the request message:
	- Exactly one of the following:
		- All of the following:
			- [4.1.1] WS-Security Signed Parts requirements:
			  -# Body:
	@code
	#include "plugin/wsseapi.h"
	soap_wsse_sign_body(soap, <algorithm>, <key>, <keylen>);
	@endcode
  - WS-Policy enablers:
    - WS-Addressing 1.0 (2005/08, accepts 2004/08):
	@code
	#import "import/wsa5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-Addressing (2004/08):
	@code
	#import "import/wsa.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-ReliableMessaging 1.1:
	@code
	#import "import/wsrm.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.1 (accepts 1.0):
	@code
	#import "import/wsse11.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.0:
	@code
	#import "import/wsse.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - HTTP Digest Authentication:
	@code
	#include "plugin/httpda.h"
	soap_register_plugin(soap, soap_http_da); // register the HTTP DA plugin in your code
	// See the user guide gsoap/doc/httpda/html/index.html
	@endcode

  - SOAP document/literal style messaging

  - SOAP action="http://oscars.es.net/OSCARS/teardownPath"

  - SOAP Fault: "http://oscars.es.net/OSCARS":BSSFault (literal)

  - SOAP Fault: "http://oscars.es.net/OSCARS":AAAFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__teardownPath(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct ns1__teardownPathContent*    ns1__teardownPath,
    // response parameters:
    struct ns1__teardownPathResponseContent* ns1__teardownPathResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__teardownPath(
    struct soap *soap,
    // request parameters:
    struct ns1__teardownPathContent*    ns1__teardownPath,
    // response parameters:
    struct ns1__teardownPathResponseContent* ns1__teardownPathResponse
  );
@endcode

*/

//gsoap ns1  service method-style:	teardownPath document
//gsoap ns1  service method-encoding:	teardownPath literal
//gsoap ns1  service method-action:	teardownPath http://oscars.es.net/OSCARS/teardownPath
//gsoap ns1  service method-fault:	teardownPath ns1__BSSFault
//gsoap ns1  service method-fault:	teardownPath ns1__AAAFault
int __ns1__teardownPath(
    struct ns1__teardownPathContent*    ns1__teardownPath,	///< Request parameter
    struct ns1__teardownPathResponseContent* ns1__teardownPathResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__forward                                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__forward" of service binding "OSCARSSOAP"

/**

Operation details:


  - WS-Policy applicable to the operation:
	- Exactly one of the following:
		- All of the following:
			- [7.5] WS-Security Asymmetric Binding (public key) requirements:
				- [7.1] Security Binding Algorithm Suite requirements:
					- TripleDesRsa15
				- [7.2] WS-Security Header Layout requirements:
					- WS-Security headers 'declare before use' required (gSOAP default)
				- Initiator requirements:
					- [5.4.3] WS-Security X509 required:
					  -# IncludeToken = http://schemas.xmlsoap.org/ws/2005/07/securitypolicy/IncludeToken/AlwaysToRecipient
						- A thumbprint reference is required
						- An X509 Version 3 token should be used as defined in X509TokenProfile1.0
				- Recipient requirements:
					- [5.4.3] WS-Security X509 required:
					  -# IncludeToken = http://schemas.xmlsoap.org/ws/2005/07/securitypolicy/IncludeToken/Always
						- A thumbprint reference is required
						- An X509 Version 3 token should be used as defined in X509TokenProfile1.0
				- WS-Security Timestamp should be set prior to send:
	@code
	#include "plugin/wsseapi.h"
	soap_wsse_add_Timestamp(soap, "Timestamp", <seconds>);
	@endcode
				- WS-Security Timestamp presence and expiration verified post-receive with:
	@code
	#include "plugin/wsseapi.h"
	if (soap_wsse_verify_Timestamp(soap)) ...<error>...
	@endcode
				- WS-Security Sign Entire Headers and Body:
	@code
	#include "plugin/wsseapi.h"
	soap_wsse_set_wsu_id(soap, "<ns:tagname1> <ns:tagname2> ..."); // list each ns:tagname used in SOAP Header
	soap_wsse_sign_body(soap, <algorithm>, <key>, <keylen>);
	@endcode
			- [9.1] WSS: SOAP Message Security 1.0 options:
				- Key Identifier References
				- Issuer Serial References

  - WS-Policy enablers:
    - WS-Addressing 1.0 (2005/08, accepts 2004/08):
	@code
	#import "import/wsa5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-Addressing (2004/08):
	@code
	#import "import/wsa.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-ReliableMessaging 1.1:
	@code
	#import "import/wsrm.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.1 (accepts 1.0):
	@code
	#import "import/wsse11.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.0:
	@code
	#import "import/wsse.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - HTTP Digest Authentication:
	@code
	#include "plugin/httpda.h"
	soap_register_plugin(soap, soap_http_da); // register the HTTP DA plugin in your code
	// See the user guide gsoap/doc/httpda/html/index.html
	@endcode

  - WS-Policy applicable to the request message:
	- Exactly one of the following:
		- All of the following:
			- [4.1.1] WS-Security Signed Parts requirements:
			  -# Body:
	@code
	#include "plugin/wsseapi.h"
	soap_wsse_sign_body(soap, <algorithm>, <key>, <keylen>);
	@endcode
  - WS-Policy enablers:
    - WS-Addressing 1.0 (2005/08, accepts 2004/08):
	@code
	#import "import/wsa5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-Addressing (2004/08):
	@code
	#import "import/wsa.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-ReliableMessaging 1.1:
	@code
	#import "import/wsrm.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.1 (accepts 1.0):
	@code
	#import "import/wsse11.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.0:
	@code
	#import "import/wsse.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - HTTP Digest Authentication:
	@code
	#include "plugin/httpda.h"
	soap_register_plugin(soap, soap_http_da); // register the HTTP DA plugin in your code
	// See the user guide gsoap/doc/httpda/html/index.html
	@endcode

  - SOAP document/literal style messaging

  - SOAP action="http://oscars.es.net/OSCARS/forward"

  - SOAP Fault: "http://oscars.es.net/OSCARS":BSSFault (literal)

  - SOAP Fault: "http://oscars.es.net/OSCARS":AAAFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__forward(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _ns1__forward*               ns1__forward,
    // response parameters:
    struct ns1__forwardReply*           ns1__forwardResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__forward(
    struct soap *soap,
    // request parameters:
    struct _ns1__forward*               ns1__forward,
    // response parameters:
    struct ns1__forwardReply*           ns1__forwardResponse
  );
@endcode

*/

//gsoap ns1  service method-style:	forward document
//gsoap ns1  service method-encoding:	forward literal
//gsoap ns1  service method-action:	forward http://oscars.es.net/OSCARS/forward
//gsoap ns1  service method-fault:	forward ns1__BSSFault
//gsoap ns1  service method-fault:	forward ns1__AAAFault
int __ns1__forward(
    struct _ns1__forward*               ns1__forward,	///< Request parameter
    struct ns1__forwardReply*           ns1__forwardResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__Notify                                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__Notify" of service binding "OSCARSSOAP"

/**

Operation details:


  - One-way message

  - SOAP document/literal style messaging

  - SOAP action="http://oscars.es.net/OSCARS/Notify"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__Notify(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _ns4__Notify*                ns4__Notify,
    // response parameters:
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__Notify(
    struct soap *soap,
    // request parameters:
    struct _ns4__Notify*                ns4__Notify,
    // response parameters:
  );
@endcode

*/

//gsoap ns1  service method-style:	Notify document
//gsoap ns1  service method-encoding:	Notify literal
//gsoap ns1  service method-action:	Notify http://oscars.es.net/OSCARS/Notify
int __ns1__Notify(
    struct _ns4__Notify*                ns4__Notify,	///< Request parameter
    void	///< One-way message: no response parameter
);

/******************************************************************************\
 *                                                                            *
 * XML Data Binding                                                           *
 *                                                                            *
\******************************************************************************/


/**

@page page_XMLDataBinding XML Data Binding

SOAP/XML services use data bindings contractually bound by WSDL and auto-
generated by wsdl2h and soapcpp2 (see Service Bindings). Plain data bindings
are adopted from XML schemas as part of the WSDL types section or when running
wsdl2h on a set of schemas to produce non-SOAP-based XML data bindings.

The following readers and writers are C/C++ data type (de)serializers auto-
generated by wsdl2h and soapcpp2. Run soapcpp2 on this file to generate the
(de)serialization code, which is stored in soapC.c[pp]. Include "soapH.h" in
your code to import these data type and function declarations. Only use the
soapcpp2-generated files in your project build. Do not include the wsdl2h-
generated .h file in your code.

XML content can be retrieved from:
  - a file descriptor, using soap->recvfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->is = ...
  - a buffer, using the soap->frecv() callback

XML content can be stored to:
  - a file descriptor, using soap->sendfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->os = ...
  - a buffer, using the soap->fsend() callback


@section ns1 Top-level root elements of schema "http://oscars.es.net/OSCARS"

  - <ns1:createReservation> (use wsdl2h option -g to auto-generate)

  - <ns1:createReservationResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:listReservations> (use wsdl2h option -g to auto-generate)

  - <ns1:listReservationsResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:cancelReservation> (use wsdl2h option -g to auto-generate)

  - <ns1:cancelReservationResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:modifyReservation> (use wsdl2h option -g to auto-generate)

  - <ns1:modifyReservationResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:queryReservation> (use wsdl2h option -g to auto-generate)

  - <ns1:queryReservationResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:getNetworkTopology> (use wsdl2h option -g to auto-generate)

  - <ns1:getNetworkTopologyResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:createPath> (use wsdl2h option -g to auto-generate)

  - <ns1:createPathResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:refreshPath> (use wsdl2h option -g to auto-generate)

  - <ns1:refreshPathResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:teardownPath> (use wsdl2h option -g to auto-generate)

  - <ns1:teardownPathResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:event> (use wsdl2h option -g to auto-generate)

  - <ns1:subscriptionId> (use wsdl2h option -g to auto-generate)

  - <ns1:publisherRegistrationId> (use wsdl2h option -g to auto-generate)

  - <ns1:reservationResource> (use wsdl2h option -g to auto-generate)

  - <ns1:forward> @ref _ns1__forward
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__forward(struct soap*, struct _ns1__forward*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__forward(struct soap*, struct _ns1__forward*);
    @endcode

  - <ns1:forwardResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:AAAFault> @ref _ns1__AAAFault
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__AAAFault(struct soap*, struct _ns1__AAAFault*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__AAAFault(struct soap*, struct _ns1__AAAFault*);
    @endcode

  - <ns1:BSSFault> @ref _ns1__BSSFault
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__BSSFault(struct soap*, struct _ns1__BSSFault*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__BSSFault(struct soap*, struct _ns1__BSSFault*);
    @endcode

  - <ns1:TopologyFault> @ref _ns1__TopologyFault
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__TopologyFault(struct soap*, struct _ns1__TopologyFault*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__TopologyFault(struct soap*, struct _ns1__TopologyFault*);
    @endcode

  - <ns1:SignalFault> @ref _ns1__SignalFault
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__SignalFault(struct soap*, struct _ns1__SignalFault*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__SignalFault(struct soap*, struct _ns1__SignalFault*);
    @endcode

@section ns2 Top-level root elements of schema ""

@section ns2 Top-level root elements of schema ""

@section ns3 Top-level root elements of schema "http://ogf.org/schema/network/topology/ctrlPlane/20080828/"

  - <ns3:topology> (use wsdl2h option -g to auto-generate)

  - <ns3:domain> (use wsdl2h option -g to auto-generate)

  - <ns3:node> (use wsdl2h option -g to auto-generate)

  - <ns3:port> (use wsdl2h option -g to auto-generate)

  - <ns3:link> (use wsdl2h option -g to auto-generate)

  - <ns3:path> (use wsdl2h option -g to auto-generate)

@section ns4 Top-level root elements of schema "http://docs.oasis-open.org/wsn/b-2"

  - <ns4:TopicExpression> (use wsdl2h option -g to auto-generate)

  - <ns4:FixedTopicSet> (use wsdl2h option -g to auto-generate)

  - <ns4:TopicExpressionDialect> (use wsdl2h option -g to auto-generate)

  - <ns4:ConsumerReference> (use wsdl2h option -g to auto-generate)

  - <ns4:Filter> (use wsdl2h option -g to auto-generate)

  - <ns4:SubscriptionPolicy> (use wsdl2h option -g to auto-generate)

  - <ns4:CreationTime> (use wsdl2h option -g to auto-generate)

  - <ns4:SubscriptionManagerRP> @ref _ns4__SubscriptionManagerRP
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__SubscriptionManagerRP(struct soap*, struct _ns4__SubscriptionManagerRP*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__SubscriptionManagerRP(struct soap*, struct _ns4__SubscriptionManagerRP*);
    @endcode

  - <ns4:SubscriptionReference> (use wsdl2h option -g to auto-generate)

  - <ns4:Topic> (use wsdl2h option -g to auto-generate)

  - <ns4:ProducerReference> (use wsdl2h option -g to auto-generate)

  - <ns4:NotificationMessage> (use wsdl2h option -g to auto-generate)

  - <ns4:Notify> @ref _ns4__Notify
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__Notify(struct soap*, struct _ns4__Notify*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__Notify(struct soap*, struct _ns4__Notify*);
    @endcode

  - <ns4:CurrentTime> (use wsdl2h option -g to auto-generate)

  - <ns4:TerminationTime> (use wsdl2h option -g to auto-generate)

  - <ns4:ProducerProperties> (use wsdl2h option -g to auto-generate)

  - <ns4:MessageContent> (use wsdl2h option -g to auto-generate)

  - <ns4:UseRaw> @ref _ns4__UseRaw
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__UseRaw(struct soap*, struct _ns4__UseRaw*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__UseRaw(struct soap*, struct _ns4__UseRaw*);
    @endcode

  - <ns4:Subscribe> @ref _ns4__Subscribe
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__Subscribe(struct soap*, struct _ns4__Subscribe*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__Subscribe(struct soap*, struct _ns4__Subscribe*);
    @endcode

  - <ns4:SubscribeResponse> @ref _ns4__SubscribeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__SubscribeResponse(struct soap*, struct _ns4__SubscribeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__SubscribeResponse(struct soap*, struct _ns4__SubscribeResponse*);
    @endcode

  - <ns4:GetCurrentMessage> @ref _ns4__GetCurrentMessage
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__GetCurrentMessage(struct soap*, struct _ns4__GetCurrentMessage*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__GetCurrentMessage(struct soap*, struct _ns4__GetCurrentMessage*);
    @endcode

  - <ns4:GetCurrentMessageResponse> @ref _ns4__GetCurrentMessageResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__GetCurrentMessageResponse(struct soap*, struct _ns4__GetCurrentMessageResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__GetCurrentMessageResponse(struct soap*, struct _ns4__GetCurrentMessageResponse*);
    @endcode

  - <ns4:SubscribeCreationFailedFault> (use wsdl2h option -g to auto-generate)

  - <ns4:InvalidFilterFault> (use wsdl2h option -g to auto-generate)

  - <ns4:TopicExpressionDialectUnknownFault> (use wsdl2h option -g to auto-generate)

  - <ns4:InvalidTopicExpressionFault> (use wsdl2h option -g to auto-generate)

  - <ns4:TopicNotSupportedFault> (use wsdl2h option -g to auto-generate)

  - <ns4:MultipleTopicsSpecifiedFault> (use wsdl2h option -g to auto-generate)

  - <ns4:InvalidProducerPropertiesExpressionFault> (use wsdl2h option -g to auto-generate)

  - <ns4:InvalidMessageContentExpressionFault> (use wsdl2h option -g to auto-generate)

  - <ns4:UnrecognizedPolicyRequestFault> (use wsdl2h option -g to auto-generate)

  - <ns4:UnsupportedPolicyRequestFault> (use wsdl2h option -g to auto-generate)

  - <ns4:NotifyMessageNotSupportedFault> (use wsdl2h option -g to auto-generate)

  - <ns4:UnacceptableInitialTerminationTimeFault> (use wsdl2h option -g to auto-generate)

  - <ns4:NoCurrentMessageOnTopicFault> (use wsdl2h option -g to auto-generate)

  - <ns4:GetMessages> @ref _ns4__GetMessages
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__GetMessages(struct soap*, struct _ns4__GetMessages*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__GetMessages(struct soap*, struct _ns4__GetMessages*);
    @endcode

  - <ns4:GetMessagesResponse> @ref _ns4__GetMessagesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__GetMessagesResponse(struct soap*, struct _ns4__GetMessagesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__GetMessagesResponse(struct soap*, struct _ns4__GetMessagesResponse*);
    @endcode

  - <ns4:DestroyPullPoint> @ref _ns4__DestroyPullPoint
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__DestroyPullPoint(struct soap*, struct _ns4__DestroyPullPoint*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__DestroyPullPoint(struct soap*, struct _ns4__DestroyPullPoint*);
    @endcode

  - <ns4:DestroyPullPointResponse> @ref _ns4__DestroyPullPointResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__DestroyPullPointResponse(struct soap*, struct _ns4__DestroyPullPointResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__DestroyPullPointResponse(struct soap*, struct _ns4__DestroyPullPointResponse*);
    @endcode

  - <ns4:UnableToGetMessagesFault> (use wsdl2h option -g to auto-generate)

  - <ns4:UnableToDestroyPullPointFault> (use wsdl2h option -g to auto-generate)

  - <ns4:CreatePullPoint> @ref _ns4__CreatePullPoint
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__CreatePullPoint(struct soap*, struct _ns4__CreatePullPoint*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__CreatePullPoint(struct soap*, struct _ns4__CreatePullPoint*);
    @endcode

  - <ns4:CreatePullPointResponse> @ref _ns4__CreatePullPointResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__CreatePullPointResponse(struct soap*, struct _ns4__CreatePullPointResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__CreatePullPointResponse(struct soap*, struct _ns4__CreatePullPointResponse*);
    @endcode

  - <ns4:UnableToCreatePullPointFault> (use wsdl2h option -g to auto-generate)

  - <ns4:Renew> @ref _ns4__Renew
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__Renew(struct soap*, struct _ns4__Renew*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__Renew(struct soap*, struct _ns4__Renew*);
    @endcode

  - <ns4:RenewResponse> @ref _ns4__RenewResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__RenewResponse(struct soap*, struct _ns4__RenewResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__RenewResponse(struct soap*, struct _ns4__RenewResponse*);
    @endcode

  - <ns4:UnacceptableTerminationTimeFault> (use wsdl2h option -g to auto-generate)

  - <ns4:Unsubscribe> @ref _ns4__Unsubscribe
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__Unsubscribe(struct soap*, struct _ns4__Unsubscribe*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__Unsubscribe(struct soap*, struct _ns4__Unsubscribe*);
    @endcode

  - <ns4:UnsubscribeResponse> @ref _ns4__UnsubscribeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__UnsubscribeResponse(struct soap*, struct _ns4__UnsubscribeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__UnsubscribeResponse(struct soap*, struct _ns4__UnsubscribeResponse*);
    @endcode

  - <ns4:UnableToDestroySubscriptionFault> (use wsdl2h option -g to auto-generate)

  - <ns4:PauseSubscription> @ref _ns4__PauseSubscription
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__PauseSubscription(struct soap*, struct _ns4__PauseSubscription*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__PauseSubscription(struct soap*, struct _ns4__PauseSubscription*);
    @endcode

  - <ns4:PauseSubscriptionResponse> @ref _ns4__PauseSubscriptionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__PauseSubscriptionResponse(struct soap*, struct _ns4__PauseSubscriptionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__PauseSubscriptionResponse(struct soap*, struct _ns4__PauseSubscriptionResponse*);
    @endcode

  - <ns4:ResumeSubscription> @ref _ns4__ResumeSubscription
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__ResumeSubscription(struct soap*, struct _ns4__ResumeSubscription*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__ResumeSubscription(struct soap*, struct _ns4__ResumeSubscription*);
    @endcode

  - <ns4:ResumeSubscriptionResponse> @ref _ns4__ResumeSubscriptionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns4__ResumeSubscriptionResponse(struct soap*, struct _ns4__ResumeSubscriptionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns4__ResumeSubscriptionResponse(struct soap*, struct _ns4__ResumeSubscriptionResponse*);
    @endcode

  - <ns4:PauseFailedFault> (use wsdl2h option -g to auto-generate)

  - <ns4:ResumeFailedFault> (use wsdl2h option -g to auto-generate)

@section ns5 Top-level root elements of schema "http://docs.oasis-open.org/wsrf/r-2"

  - <ns5:ResourceUnknownFault> (use wsdl2h option -g to auto-generate)

  - <ns5:ResourceUnavailableFault> (use wsdl2h option -g to auto-generate)

@section ns6 Top-level root elements of schema "http://docs.oasis-open.org/wsrf/bf-2"

  - <ns6:BaseFault> (use wsdl2h option -g to auto-generate)

*/

/* End of oscarsAPI.h */
