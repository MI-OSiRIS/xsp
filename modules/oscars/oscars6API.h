/* oscars6API.h
   Generated by wsdl2h 2.8.1 from wsdl/OSCARS-0.6.wsdl and WS-typemap.dat
   2011-04-08 14:00:53 GMT

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS
   USE THE soapcpp2-GENERATED SOURCE CODE FILES FOR YOUR PROJECT BUILDS

   gSOAP XML Web services tools.
   Copyright (C) 2001-2010 Robert van Engelen, Genivia Inc. All Rights Reserved.
   Part of this software is released under one of the following licenses:
   GPL or Genivia's license for commercial use.
*/

/** @page page_notes Usage Notes

NOTE:

 - Run soapcpp2 on oscars6API.h to generate the SOAP/XML processing logic.
   Use soapcpp2 option -I to specify paths for #import
   To build with STL, 'stlvector.h' is imported from 'import' dir in package.
   Use soapcpp2 option -i to generate improved proxy and server classes.
 - Use wsdl2h options -c and -s to generate pure C code or C++ code without STL.
 - Use 'typemap.dat' to control namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Use Doxygen (www.doxygen.org) on this file to generate documentation.
 - Use wsdl2h options -nname and -Nname to globally rename the prefix 'ns'.
 - Use wsdl2h option -d to enable DOM support for xsd:anyType.
 - Use wsdl2h option -g to auto-generate readers and writers for root elements.
 - Struct/class members serialized as XML attributes are annotated with a '@'.
 - Struct/class members that have a special role are annotated with a '$'.

WARNING:

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS.
   USE THE SOURCE CODE FILES GENERATED BY soapcpp2 FOR YOUR PROJECT BUILDS:
   THE soapStub.h FILE CONTAINS THIS CONTENT WITHOUT ANNOTATIONS.

LICENSE:

@verbatim
--------------------------------------------------------------------------------
gSOAP XML Web services tools
Copyright (C) 2000-2010, Robert van Engelen, Genivia Inc. All Rights Reserved.

This software is released under one of the following two licenses:
1) GPL or 2) Genivia's license for commercial use.
--------------------------------------------------------------------------------
1) GPL license.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA 02111-1307 USA

Author contact information:
engelen@genivia.com / engelen@acm.org
--------------------------------------------------------------------------------
2) A commercial-use license is available from Genivia, Inc., contact@genivia.com
--------------------------------------------------------------------------------
@endverbatim

*/


//gsoapopt cw

/******************************************************************************\
 *                                                                            *
 * Definitions                                                                *
 *   http://oscars.es.net/OSCARS/06                                           *
 *                                                                            *
\******************************************************************************/

/* WSDL Documentation:

        This is WSDL for the OSCARS public reservation interface. These
        messages must be signed using the following WS-secuirty
        standards. The message is time stamped and includes the X.509
        certificate of the signing entity. The timestamp, certificate
        and message body are all signed. DRAFT V1.0 Nov 2006
    
*/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/

#import "ds.h"	// ds = <http://www.w3.org/2000/09/xmldsig#>
#import "xenc.h"	// xenc = <http://www.w3.org/2001/04/xmlenc#>
#import "wsa5.h"	// wsa5 = <http://www.w3.org/2005/08/addressing>
#import "wsse.h"

/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/

// This service uses SOAP 1.2 namespaces:
//gsoap SOAP-ENV schema namespace:	http://www.w3.org/2003/05/soap-envelope
//gsoap SOAP-ENC schema namespace:	http://www.w3.org/2003/05/soap-encoding

/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

ns1 = "http://oscars.es.net/OSCARS/06"
ns2 = "http://oscars.es.net/OSCARS/common"
ns3 = "http://docs.oasis-open.org/wsn/b-2"
ns4 = "http://docs.oasis-open.org/wsrf/r-2"
ns5 = "http://ogf.org/schema/network/topology/ctrlPlane/20080828/"
ns6 = "http://oscars.es.net/OSCARS/authParams"
ns7 = "http://docs.oasis-open.org/wsrf/bf-2"
ns8 = "urn:oasis:names:tc:SAML:2.0:assertion"

*/

#define SOAP_NAMESPACE_OF_ns1	"http://oscars.es.net/OSCARS/06"
//gsoap ns1   schema namespace:	http://oscars.es.net/OSCARS/06
//gsoap ns1   schema elementForm:	qualified
//gsoap ns1   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_ns2	"http://oscars.es.net/OSCARS/common"
//gsoap ns2   schema namespace:	http://oscars.es.net/OSCARS/common
//gsoap ns2   schema elementForm:	qualified
//gsoap ns2   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_ns3	"http://docs.oasis-open.org/wsn/b-2"
//gsoap ns3   schema namespace:	http://docs.oasis-open.org/wsn/b-2
//gsoap ns3   schema elementForm:	qualified
//gsoap ns3   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_ns4	"http://docs.oasis-open.org/wsrf/r-2"
//gsoap ns4   schema namespace:	http://docs.oasis-open.org/wsrf/r-2
//gsoap ns4   schema elementForm:	qualified
//gsoap ns4   schema attributeForm:	unqualified

/// @brief WARNING: THIS IS NOT THE OFFICIAL SCHEMA DOCUMENT FOR THE NMWG CONTROL PLANE TOPOLOGY SCHEMA. This document is used by OSCARS to generate Java classes with Axis2. Due to some software limitations this version of the schema is used to generate those classes. It assumes all elements are given in the order defined because it uses xsd:sequence elements instead of xsd:choice elements. It also does not yet include the bidirectionalPath element. The Path element is that most heavily used by OSCARS and for XML requests that use more of the topology schema it is recommended a non Axis2 cient is used for best results.
#define SOAP_NAMESPACE_OF_ns5	"http://ogf.org/schema/network/topology/ctrlPlane/20080828/"
//gsoap ns5   schema namespace:	http://ogf.org/schema/network/topology/ctrlPlane/20080828/
//gsoap ns5   schema elementForm:	qualified
//gsoap ns5   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_ns6	"http://oscars.es.net/OSCARS/authParams"
//gsoap ns6   schema namespace:	http://oscars.es.net/OSCARS/authParams
//gsoap ns6   schema elementForm:	qualified
//gsoap ns6   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_ns7	"http://docs.oasis-open.org/wsrf/bf-2"
//gsoap ns7   schema namespace:	http://docs.oasis-open.org/wsrf/bf-2
//gsoap ns7   schema elementForm:	qualified
//gsoap ns7   schema attributeForm:	unqualified

/// @brief Document identifier: saml-schema-assertion-2.0 Location: http://docs.oasis-open.org/security/saml/v2.0/ Revision history: V1.0 (November, 2002): Initial Standard Schema. V1.1 (September, 2003): Updates within the same V1.0 namespace. V2.0 (March, 2005): New assertion schema for SAML V2.0 namespace.
#define SOAP_NAMESPACE_OF_ns8	"urn:oasis:names:tc:SAML:2.0:assertion"
//gsoap ns8   schema namespace:	urn:oasis:names:tc:SAML:2.0:assertion
//gsoap ns8   schema form:	unqualified

/******************************************************************************\
 *                                                                            *
 * Built-in Schema Types and Top-Level Elements and Attributes                *
 *                                                                            *
\******************************************************************************/


// Imported type "http://www.w3.org/2005/08/addressing":EndpointReferenceType defined by wsa5__EndpointReferenceType

/// Built-in type "xs:boolean".
enum xsd__boolean_ { _false, _true };

// Imported element "http://www.w3.org/2000/09/xmldsig#":KeyInfo declared as _ds__KeyInfo

// Imported element "http://www.w3.org/2000/09/xmldsig#":Signature declared as _ds__Signature

// Imported element "http://www.w3.org/2001/04/xmlenc#":EncryptedData declared as _xenc__EncryptedData

// Imported element "http://www.w3.org/2001/04/xmlenc#":EncryptedKey declared as _xenc__EncryptedKey


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://oscars.es.net/OSCARS/06                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://oscars.es.net/OSCARS/common                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/


/// union of values "xsd:dateTime xsd:duration"
typedef char* ns3__AbsoluteOrRelativeTimeType;

/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/r-2                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://ogf.org/schema/network/topology/ctrlPlane/20080828/               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://oscars.es.net/OSCARS/authParams                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   urn:oasis:names:tc:SAML:2.0:assertion                                    *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://oscars.es.net/OSCARS/common                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/r-2                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://ogf.org/schema/network/topology/ctrlPlane/20080828/               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://oscars.es.net/OSCARS/authParams                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   urn:oasis:names:tc:SAML:2.0:assertion                                    *
 *                                                                            *
\******************************************************************************/


/// "urn:oasis:names:tc:SAML:2.0:assertion":DecisionType is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns8__DecisionType' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns8__DecisionType
{
	ns8__DecisionType__Permit,	///< xs:string value="Permit"
	ns8__DecisionType__Deny,	///< xs:string value="Deny"
	ns8__DecisionType__Indeterminate,	///< xs:string value="Indeterminate"
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://oscars.es.net/OSCARS/06                                           *
 *                                                                            *
\******************************************************************************/


/// "http://oscars.es.net/OSCARS/06":resCreateContent is a complexType.
struct ns1__resCreateContent
{
/// Element messageProperties of type "http://oscars.es.net/OSCARS/authParams":messagePropertiesType.
    struct ns6__messagePropertiesType*   messageProperties              0;	///< Optional element.
/// Element globalReservationId of type xs:string.
    char*                                globalReservationId            0;	///< Optional element.
/// Element description of type xs:string.
    char*                                description                    1;	///< Required element.
/// Element userRequestConstraint of type "http://oscars.es.net/OSCARS/06":userRequestConstraintType.
    struct ns1__userRequestConstraintType*  userRequestConstraint          1;	///< Required element.
/// Element reservedConstraint of type "http://oscars.es.net/OSCARS/06":reservedConstraintType.
    struct ns1__reservedConstraintType*  reservedConstraint             0;	///< Optional element.
/// Size of array of struct ns1__optionalConstraintType* is 0..unbounded
   $int                                  __sizeoptionalConstraint       0;
/// Pointer to array struct ns1__optionalConstraintType* of length 0..unbounded
    struct ns1__optionalConstraintType* *optionalConstraint             0;
};

/// "http://oscars.es.net/OSCARS/06":createReply is a complexType.
struct ns1__createReply
{
/// Element messageProperties of type "http://oscars.es.net/OSCARS/authParams":messagePropertiesType.
    struct ns6__messagePropertiesType*   messageProperties              0;	///< Optional element.
/// Element globalReservationId of type xs:string.
    char*                                globalReservationId            1;	///< Required element.
/// Element token of type xs:string.
    char*                                token                          0;	///< Optional element.
/// Element status of type xs:string.
    char*                                status                         1;	///< Required element.
/// Element userRequestConstraint of type "http://oscars.es.net/OSCARS/06":userRequestConstraintType.
    struct ns1__userRequestConstraintType*  userRequestConstraint          1;	///< Required element.
/// Element reservedConstraint of type "http://oscars.es.net/OSCARS/06":reservedConstraintType.
    struct ns1__reservedConstraintType*  reservedConstraint             0;	///< Optional element.
/// Size of array of struct ns1__optionalConstraintType* is 0..unbounded
   $int                                  __sizeoptionalConstraint       0;
/// Pointer to array struct ns1__optionalConstraintType* of length 0..unbounded
    struct ns1__optionalConstraintType* *optionalConstraint             0;
};

/// "http://oscars.es.net/OSCARS/06":cancelResContent is a complexType.
struct ns1__cancelResContent
{
/// Element messageProperties of type "http://oscars.es.net/OSCARS/authParams":messagePropertiesType.
    struct ns6__messagePropertiesType*   messageProperties              0;	///< Optional element.
/// Element globalReservationId of type xs:string.
    char*                                globalReservationId            1;	///< Required element.
};

/// "http://oscars.es.net/OSCARS/06":cancelResReply is a complexType.
struct ns1__cancelResReply
{
/// Element messageProperties of type "http://oscars.es.net/OSCARS/authParams":messagePropertiesType.
    struct ns6__messagePropertiesType*   messageProperties              0;	///< Optional element.
/// Element status of type xs:string.
    char*                                status                         1;	///< Required element.
};

/// "http://oscars.es.net/OSCARS/06":queryResContent is a complexType.
struct ns1__queryResContent
{
/// Element messageProperties of type "http://oscars.es.net/OSCARS/authParams":messagePropertiesType.
    struct ns6__messagePropertiesType*   messageProperties              0;	///< Optional element.
/// Element globalReservationId of type xs:string.
    char*                                globalReservationId            1;	///< Required element.
};

/// "http://oscars.es.net/OSCARS/06":queryResReply is a complexType.
struct ns1__queryResReply
{
/// Element messageProperties of type "http://oscars.es.net/OSCARS/authParams":messagePropertiesType.
    struct ns6__messagePropertiesType*   messageProperties              0;	///< Optional element.
/// Element reservationDetails of type "http://oscars.es.net/OSCARS/06":resDetails.
    struct ns1__resDetails*              reservationDetails             1;	///< Required element.
};

/// "http://oscars.es.net/OSCARS/06":modifyResContent is a complexType.
struct ns1__modifyResContent
{
/// Element messageProperties of type "http://oscars.es.net/OSCARS/authParams":messagePropertiesType.
    struct ns6__messagePropertiesType*   messageProperties              0;	///< Optional element.
/// Element globalReservationId of type xs:string.
    char*                                globalReservationId            1;	///< Required element.
/// Element description of type xs:string.
    char*                                description                    1;	///< Required element.
/// Element userRequestConstraint of type "http://oscars.es.net/OSCARS/06":userRequestConstraintType.
    struct ns1__userRequestConstraintType*  userRequestConstraint          1;	///< Required element.
/// Element reservedConstraint of type "http://oscars.es.net/OSCARS/06":reservedConstraintType.
    struct ns1__reservedConstraintType*  reservedConstraint             0;	///< Optional element.
/// Size of array of struct ns1__optionalConstraintType* is 0..unbounded
   $int                                  __sizeoptionalConstraint       0;
/// Pointer to array struct ns1__optionalConstraintType* of length 0..unbounded
    struct ns1__optionalConstraintType* *optionalConstraint             0;
};

/// "http://oscars.es.net/OSCARS/06":modifyResReply is a complexType.
struct ns1__modifyResReply
{
/// Element messageProperties of type "http://oscars.es.net/OSCARS/authParams":messagePropertiesType.
    struct ns6__messagePropertiesType*   messageProperties              0;	///< Optional element.
/// Element reservation of type "http://oscars.es.net/OSCARS/06":resDetails.
    struct ns1__resDetails*              reservation                    1;	///< Required element.
};

/// "http://oscars.es.net/OSCARS/06":getTopologyContent is a complexType.
struct ns1__getTopologyContent
{
/// Element messageProperties of type "http://oscars.es.net/OSCARS/authParams":messagePropertiesType.
    struct ns6__messagePropertiesType*   messageProperties              0;	///< Optional element.
/// Element topologyType of type xs:string.
    char*                                topologyType                   1;	///< Required element.
};

/// "http://oscars.es.net/OSCARS/06":getTopologyResponseContent is a complexType.
struct ns1__getTopologyResponseContent
{
/// Element messageProperties of type "http://oscars.es.net/OSCARS/authParams":messagePropertiesType.
    struct ns6__messagePropertiesType*   messageProperties              0;	///< Optional element.
/// Element reference "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":topology.
    struct ns5__CtrlPlaneTopologyContent*  ns5__topology                  1;	///< Required element.
};

/// "http://oscars.es.net/OSCARS/06":createPathContent is a complexType.
struct ns1__createPathContent
{
/// Element messageProperties of type "http://oscars.es.net/OSCARS/authParams":messagePropertiesType.
    struct ns6__messagePropertiesType*   messageProperties              0;	///< Optional element.
/// Element token of type xs:string.
    char*                                token                          0;	///< Optional element.
/// Element globalReservationId of type xs:string.
    char*                                globalReservationId            1;	///< Required element.
};

/// "http://oscars.es.net/OSCARS/06":createPathResponseContent is a complexType.
struct ns1__createPathResponseContent
{
/// Element messageProperties of type "http://oscars.es.net/OSCARS/authParams":messagePropertiesType.
    struct ns6__messagePropertiesType*   messageProperties              0;	///< Optional element.
/// Element globalReservationId of type xs:string.
    char*                                globalReservationId            1;	///< Required element.
/// Element status of type xs:string.
    char*                                status                         1;	///< Required element.
};

/// "http://oscars.es.net/OSCARS/06":refreshPathContent is a complexType.
struct ns1__refreshPathContent
{
/// Element messageProperties of type "http://oscars.es.net/OSCARS/authParams":messagePropertiesType.
    struct ns6__messagePropertiesType*   messageProperties              0;	///< Optional element.
/// Element token of type xs:string.
    char*                                token                          0;	///< Optional element.
/// Element globalReservationId of type xs:string.
    char*                                globalReservationId            1;	///< Required element.
};

/// "http://oscars.es.net/OSCARS/06":refreshPathResponseContent is a complexType.
struct ns1__refreshPathResponseContent
{
/// Element messageProperties of type "http://oscars.es.net/OSCARS/authParams":messagePropertiesType.
    struct ns6__messagePropertiesType*   messageProperties              0;	///< Optional element.
/// Element globalReservationId of type xs:string.
    char*                                globalReservationId            1;	///< Required element.
/// Element status of type xs:string.
    char*                                status                         1;	///< Required element.
};

/// "http://oscars.es.net/OSCARS/06":teardownPathContent is a complexType.
struct ns1__teardownPathContent
{
/// Element messageProperties of type "http://oscars.es.net/OSCARS/authParams":messagePropertiesType.
    struct ns6__messagePropertiesType*   messageProperties              0;	///< Optional element.
/// Element token of type xs:string.
    char*                                token                          0;	///< Optional element.
/// Element globalReservationId of type xs:string.
    char*                                globalReservationId            1;	///< Required element.
};

/// "http://oscars.es.net/OSCARS/06":teardownPathResponseContent is a complexType.
struct ns1__teardownPathResponseContent
{
/// Element messageProperties of type "http://oscars.es.net/OSCARS/authParams":messagePropertiesType.
    struct ns6__messagePropertiesType*   messageProperties              0;	///< Optional element.
/// Element globalReservationId of type xs:string.
    char*                                globalReservationId            1;	///< Required element.
/// Element status of type xs:string.
    char*                                status                         1;	///< Required element.
};

/// "http://oscars.es.net/OSCARS/06":resDetails is a complexType.
struct ns1__resDetails
{
/// Element globalReservationId of type xs:string.
    char*                                globalReservationId            1;	///< Required element.
/// Element login of type xs:string.
    char*                                login                          1;	///< Required element.
/// Element description of type xs:string.
    char*                                description                    1;	///< Required element.
/// Element createTime of type xs:long.
    LONG64                               createTime                     1;	///< Required element.
/// Element status of type xs:string.
    char*                                status                         1;	///< Required element.
/// Element userRequestConstraint of type "http://oscars.es.net/OSCARS/06":userRequestConstraintType.
    struct ns1__userRequestConstraintType*  userRequestConstraint          1;	///< Required element.
/// Element reservedConstraint of type "http://oscars.es.net/OSCARS/06":reservedConstraintType.
    struct ns1__reservedConstraintType*  reservedConstraint             0;	///< Optional element.
/// Size of array of struct ns1__optionalConstraintType* is 0..unbounded
   $int                                  __sizeoptionalConstraint       0;
/// Pointer to array struct ns1__optionalConstraintType* of length 0..unbounded
    struct ns1__optionalConstraintType* *optionalConstraint             0;
};

/// "http://oscars.es.net/OSCARS/06":listRequest is a complexType.
struct ns1__listRequest
{
/// Element messageProperties of type "http://oscars.es.net/OSCARS/authParams":messagePropertiesType.
    struct ns6__messagePropertiesType*   messageProperties              0;	///< Optional element.
/// Size of array of char* is 0..5
   $int                                  __sizeresStatus                0:5;
/// Pointer to array char* of length 0..5
    char*                               *resStatus                      0:5;
/// SEQUENCE OF ELEMENTS <xs:sequence minOccurs="0" maxOccurs="1">
   $int                                  __size_listRequest_sequence    0;
    struct __ns1__listRequest_sequence
    {
/// Element startTime of type xs:long.
    LONG64                               startTime                      1;	///< Required element.
/// Element endTime of type xs:long.
    LONG64                               endTime                        1;	///< Required element.
    }                                   *__listRequest_sequence        ;
//  END OF SEQUENCE
/// Element description of type xs:string.
    char*                                description                    0;	///< Optional element.
/// Size of array of char* is 0..unbounded
   $int                                  __sizelinkId                   0;
/// Pointer to array char* of length 0..unbounded
    char*                               *linkId                         0;
/// Size of array of struct ns1__vlanTag* is 0..unbounded
   $int                                  __sizevlanTag                  0;
/// Pointer to array struct ns1__vlanTag* of length 0..unbounded
    struct ns1__vlanTag*                *vlanTag                        0;
/// Element resRequested of type xs:int.
    int*                                 resRequested                   0;	///< Optional element.
/// Element resOffset of type xs:int.
    int*                                 resOffset                      0;	///< Optional element.
};

/// "http://oscars.es.net/OSCARS/06":listReply is a complexType.
struct ns1__listReply
{
/// Element messageProperties of type "http://oscars.es.net/OSCARS/authParams":messagePropertiesType.
    struct ns6__messagePropertiesType*   messageProperties              0;	///< Optional element.
/// Size of array of struct ns1__resDetails* is 0..unbounded
   $int                                  __sizeresDetails               0;
/// Pointer to array struct ns1__resDetails* of length 0..unbounded
    struct ns1__resDetails*             *resDetails                     0;
/// Element totalResults of type xs:int.
    int*                                 totalResults                   0;	///< Optional element.
};

/// "http://oscars.es.net/OSCARS/06":pathInfo is a complexType.
struct ns1__pathInfo
{
/// Element pathSetupMode of type xs:string.
    char*                                pathSetupMode                  1;	///< Required element.
/// Element pathType of type xs:string.
    char*                                pathType                       0;	///< Optional element.
/// Element path of type "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":CtrlPlanePathContent.
    struct ns5__CtrlPlanePathContent*    path                           0;	///< Optional element.
/// Element layer2Info of type "http://oscars.es.net/OSCARS/06":layer2Info.
    struct ns1__layer2Info*              layer2Info                     0;	///< Optional element.
/// Element layer3Info of type "http://oscars.es.net/OSCARS/06":layer3Info.
    struct ns1__layer3Info*              layer3Info                     0;	///< Optional element.
/// Element mplsInfo of type "http://oscars.es.net/OSCARS/06":mplsInfo.
    struct ns1__mplsInfo*                mplsInfo                       0;	///< Optional element.
};

/// "http://oscars.es.net/OSCARS/06":layer2Info is a complexType.
struct ns1__layer2Info
{
/// Element srcVtag of type "http://oscars.es.net/OSCARS/06":vlanTag.
    struct ns1__vlanTag*                 srcVtag                        0;	///< Optional element.
/// Element destVtag of type "http://oscars.es.net/OSCARS/06":vlanTag.
    struct ns1__vlanTag*                 destVtag                       0;	///< Optional element.
/// Element srcEndpoint of type xs:string.
    char*                                srcEndpoint                    1;	///< Required element.
/// Element destEndpoint of type xs:string.
    char*                                destEndpoint                   1;	///< Required element.
};

/// "http://oscars.es.net/OSCARS/06":layer3Info is a complexType.
struct ns1__layer3Info
{
/// Element srcHost of type xs:string.
    char*                                srcHost                        1;	///< Required element.
/// Element destHost of type xs:string.
    char*                                destHost                       1;	///< Required element.
/// Element protocol of type xs:string.
    char*                                protocol                       0;	///< Optional element.
/// Element srcIpPort of type xs:int.
    int*                                 srcIpPort                      0;	///< Optional element.
/// Element destIpPort of type xs:int.
    int*                                 destIpPort                     0;	///< Optional element.
/// Element dscp of type xs:string.
    char*                                dscp                           0;	///< Optional element.
};

/// "http://oscars.es.net/OSCARS/06":mplsInfo is a complexType.
struct ns1__mplsInfo
{
/// Element burstLimit of type xs:int.
    int                                  burstLimit                     1;	///< Required element.
/// Element lspClass of type xs:string.
    char*                                lspClass                       0;	///< Optional element.
};

/// "http://oscars.es.net/OSCARS/06":interDomainEventContent is a complexType.
struct ns1__interDomainEventContent
{
/// Element messageProperties of type "http://oscars.es.net/OSCARS/authParams":messagePropertiesType.
    struct ns6__messagePropertiesType*   messageProperties              1;	///< Required element.
/// Element type of type xs:string.
    char*                                type                           1;	///< Required element.
/// Element errorSource of type xs:string.
    char*                                errorSource                    0;	///< Optional element.
/// Element errorCode of type xs:string.
    char*                                errorCode                      0;	///< Optional element.
/// Element errorMessage of type xs:string.
    char*                                errorMessage                   0;	///< Optional element.
/// Element resDetails of type "http://oscars.es.net/OSCARS/06":resDetails.
    struct ns1__resDetails*              resDetails                     0;	///< Optional element.
};

/// "http://oscars.es.net/OSCARS/06":eventContent is a complexType.
struct ns1__eventContent
{
/// Element messageProperties of type "http://oscars.es.net/OSCARS/authParams":messagePropertiesType.
    struct ns6__messagePropertiesType*   messageProperties              1;	///< Required element.
/// Element type of type xs:string.
    char*                                type                           1;	///< Required element.
/// Element timestamp of type xs:long.
    LONG64                               timestamp                      1;	///< Required element.
/// Element errorSource of type xs:string.
    char*                                errorSource                    0;	///< Optional element.
/// Element errorCode of type xs:string.
    char*                                errorCode                      0;	///< Optional element.
/// Element errorMessage of type xs:string.
    char*                                errorMessage                   0;	///< Optional element.
/// Element resDetails of type "http://oscars.es.net/OSCARS/06":resDetails.
    struct ns1__resDetails*              resDetails                     0;	///< Optional element.
/// Element localDetails of type "http://oscars.es.net/OSCARS/06":localDetails.
    struct ns1__localDetails*            localDetails                   0;	///< Optional element.
/// Attribute id of type xs:string.
   @char*                                id                             1;	///< Required attribute.
};

/// "http://oscars.es.net/OSCARS/06":localDetails is a complexType.
struct ns1__localDetails
{
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    _XML                                *__any                         0;	///< Catch any element content in XML string.
};

/// "http://oscars.es.net/OSCARS/06":globalReservationId is a complexType.
struct ns1__globalReservationId
{
/// Element gri of type xs:string.
    char*                                gri                            1;	///< Required element.
};

/// "http://oscars.es.net/OSCARS/06":optionalConstraintType is a complexType.
struct ns1__optionalConstraintType
{
/// Element value of type "http://oscars.es.net/OSCARS/06":optionalConstraintValue.
    struct ns1__optionalConstraintValue*  value                          1;	///< Required element.
/// Attribute category of type xs:string.
   @char*                                category                       1;	///< Required attribute.
};

/// "http://oscars.es.net/OSCARS/06":optionalConstraintValue is a complexType.
struct ns1__optionalConstraintValue
{
/// TODO: <any namespace="##other" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 1..unbounded
   $int                                  __size                        0;
    _XML                                *__any                         0;	///< Catch any element content in XML string.
};

/// "http://oscars.es.net/OSCARS/06":userRequestConstraintType is a complexType.
struct ns1__userRequestConstraintType
{
/// Element startTime of type xs:long.
    LONG64                               startTime                      1;	///< Required element.
/// Element endTime of type xs:long.
    LONG64                               endTime                        1;	///< Required element.
/// Element bandwidth of type xs:int.
    int                                  bandwidth                      1;	///< Required element.
/// Element pathInfo of type "http://oscars.es.net/OSCARS/06":pathInfo.
    struct ns1__pathInfo*                pathInfo                       1;	///< Required element.
};

/// "http://oscars.es.net/OSCARS/06":reservedConstraintType is a complexType.
struct ns1__reservedConstraintType
{
/// Element startTime of type xs:long.
    LONG64                               startTime                      1;	///< Required element.
/// Element endTime of type xs:long.
    LONG64                               endTime                        1;	///< Required element.
/// Element bandwidth of type xs:int.
    int                                  bandwidth                      1;	///< Required element.
/// Element pathInfo of type "http://oscars.es.net/OSCARS/06":pathInfo.
    struct ns1__pathInfo*                pathInfo                       1;	///< Required element.
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://oscars.es.net/OSCARS/common                                       *
 *                                                                            *
\******************************************************************************/


/// "http://oscars.es.net/OSCARS/common":emptyArg is a complexType.
struct ns2__emptyArg
{
/// Element msg of type xs:string.
    char*                                msg                            0;	///< Optional element.
};


/// Top-level root element "http://oscars.es.net/OSCARS/common":OSCARSFault

/// "http://oscars.es.net/OSCARS/common":OSCARSFault is a complexType.
struct _ns2__OSCARSFault
{
/// Element msg of type xs:string.
    char*                                msg                            1;	///< Required element.
/// Element details of type xs:string.
    char*                                details                        1;	///< Required element.
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/


/// "http://docs.oasis-open.org/wsn/b-2":FilterType is a complexType.
struct ns3__FilterType
{
/// Size of the dynamic array of struct ns3__TopicExpressionType* is 0..unbounded
   $int                                  __sizeTopicExpression          0;
/// Pointer to array struct ns3__TopicExpressionType* of length 0..unbounded
    struct ns3__TopicExpressionType*    *TopicExpression                0;
/// Size of the dynamic array of struct ns3__QueryExpressionType* is 0..unbounded
   $int                                  __sizeProducerProperties       0;
/// Pointer to array struct ns3__QueryExpressionType* of length 0..unbounded
    struct ns3__QueryExpressionType*    *ProducerProperties             0;
/// Size of the dynamic array of struct ns3__QueryExpressionType* is 0..unbounded
   $int                                  __sizeMessageContent           0;
/// Pointer to array struct ns3__QueryExpressionType* of length 0..unbounded
    struct ns3__QueryExpressionType*    *MessageContent                 0;
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    _XML                                *__any                         0;	///< Catch any element content in XML string.
};

/// "http://docs.oasis-open.org/wsn/b-2":SubscriptionPolicyType is a complexType.
struct ns3__SubscriptionPolicyType
{
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    _XML                                *__any                         0;	///< Catch any element content in XML string.
};

/// "http://docs.oasis-open.org/wsn/b-2":NotificationMessageHolderType is a complexType.
struct ns3__NotificationMessageHolderType
{
/// Element reference "http://docs.oasis-open.org/wsn/b-2":SubscriptionReference.
    wsa5__EndpointReferenceType*         SubscriptionReference          0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2":Topic.
    struct ns3__TopicExpressionType*     Topic                          0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2":ProducerReference.
    wsa5__EndpointReferenceType*         ProducerReference              0;	///< Optional element.
/// Element Message of type "http://docs.oasis-open.org/wsn/b-2":MessageType.
    struct ns3__MessageType*             Message                        1;	///< Required element.
};

/// "http://docs.oasis-open.org/wsn/b-2":MessageType is a complexType.
struct ns3__MessageType
{
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    _XML                                *__any                         0;	///< Catch any element content in XML string.
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscriptionManagerRP

/// "http://docs.oasis-open.org/wsn/b-2":SubscriptionManagerRP is a complexType.
struct _ns3__SubscriptionManagerRP
{
/// Element reference "http://docs.oasis-open.org/wsn/b-2":ConsumerReference.
    wsa5__EndpointReferenceType          ConsumerReference              1;	///< Required element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2":Filter.
    struct ns3__FilterType*              Filter                         0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2":SubscriptionPolicy.
    struct ns3__SubscriptionPolicyType*  SubscriptionPolicy             0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2":CreationTime.
    time_t*                              CreationTime                   0;	///< Optional element.
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":Notify

/// "http://docs.oasis-open.org/wsn/b-2":Notify is a complexType.
struct _ns3__Notify
{
/// Size of the dynamic array of struct ns3__NotificationMessageHolderType* is 1..unbounded
   $int                                  __sizeNotificationMessage      1;
/// Pointer to array struct ns3__NotificationMessageHolderType* of length 1..unbounded
    struct ns3__NotificationMessageHolderType* *NotificationMessage            1;
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    _XML                                *__any                         0;	///< Catch any element content in XML string.
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":UseRaw

/// "http://docs.oasis-open.org/wsn/b-2":UseRaw is a complexType.
struct _ns3__UseRaw
{
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":Subscribe

/// "http://docs.oasis-open.org/wsn/b-2":Subscribe is a complexType.
struct _ns3__Subscribe
{
/// Element ConsumerReference of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType          ConsumerReference              1;	///< Required element.
/// Element Filter of type "http://docs.oasis-open.org/wsn/b-2":FilterType.
    struct ns3__FilterType*              Filter                         0;	///< Optional element.
/// Element InitialTerminationTime of type "http://docs.oasis-open.org/wsn/b-2":AbsoluteOrRelativeTimeType.
    ns3__AbsoluteOrRelativeTimeType      InitialTerminationTime         0;	///< Nullable pointer.
    struct _ns3__Subscribe_SubscriptionPolicy
    {
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    _XML                                *__any                         0;	///< Catch any element content in XML string.
    }                                   *SubscriptionPolicy             0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    _XML                                *__any                         0;	///< Catch any element content in XML string.
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscribeResponse

/// "http://docs.oasis-open.org/wsn/b-2":SubscribeResponse is a complexType.
struct _ns3__SubscribeResponse
{
/// Element SubscriptionReference of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType          SubscriptionReference          1;	///< Required element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2":CurrentTime.
    time_t*                              CurrentTime                    0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2":TerminationTime.
    time_t*                              TerminationTime                0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    _XML                                *__any                         0;	///< Catch any element content in XML string.
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessage

/// "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessage is a complexType.
struct _ns3__GetCurrentMessage
{
/// Element Topic of type "http://docs.oasis-open.org/wsn/b-2":TopicExpressionType.
    struct ns3__TopicExpressionType*     Topic                          1;	///< Required element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    _XML                                *__any                         0;	///< Catch any element content in XML string.
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessageResponse

/// "http://docs.oasis-open.org/wsn/b-2":GetCurrentMessageResponse is a complexType.
struct _ns3__GetCurrentMessageResponse
{
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    _XML                                *__any                         0;	///< Catch any element content in XML string.
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetMessages

/// "http://docs.oasis-open.org/wsn/b-2":GetMessages is a complexType.
struct _ns3__GetMessages
{
/// Element MaximumNumber of type xs:nonNegativeInteger.
    unsigned int*                        MaximumNumber                  0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    _XML                                *__any                         0;	///< Catch any element content in XML string.
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":GetMessagesResponse

/// "http://docs.oasis-open.org/wsn/b-2":GetMessagesResponse is a complexType.
struct _ns3__GetMessagesResponse
{
/// Size of the dynamic array of struct ns3__NotificationMessageHolderType* is 0..unbounded
   $int                                  __sizeNotificationMessage      0;
/// Pointer to array struct ns3__NotificationMessageHolderType* of length 0..unbounded
    struct ns3__NotificationMessageHolderType* *NotificationMessage            0;
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    _XML                                *__any                         0;	///< Catch any element content in XML string.
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":DestroyPullPoint

/// "http://docs.oasis-open.org/wsn/b-2":DestroyPullPoint is a complexType.
struct _ns3__DestroyPullPoint
{
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    _XML                                *__any                         0;	///< Catch any element content in XML string.
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":DestroyPullPointResponse

/// "http://docs.oasis-open.org/wsn/b-2":DestroyPullPointResponse is a complexType.
struct _ns3__DestroyPullPointResponse
{
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    _XML                                *__any                         0;	///< Catch any element content in XML string.
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":CreatePullPoint

/// "http://docs.oasis-open.org/wsn/b-2":CreatePullPoint is a complexType.
struct _ns3__CreatePullPoint
{
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    _XML                                *__any                         0;	///< Catch any element content in XML string.
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":CreatePullPointResponse

/// "http://docs.oasis-open.org/wsn/b-2":CreatePullPointResponse is a complexType.
struct _ns3__CreatePullPointResponse
{
/// Element PullPoint of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType          PullPoint                      1;	///< Required element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    _XML                                *__any                         0;	///< Catch any element content in XML string.
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":Renew

/// "http://docs.oasis-open.org/wsn/b-2":Renew is a complexType.
struct _ns3__Renew
{
/// Element TerminationTime of type xs:string.
    char*                                TerminationTime                1;	///< Nullable pointer.
/// Element reference "http://docs.oasis-open.org/wsn/b-2":SubscriptionReference.
    wsa5__EndpointReferenceType          SubscriptionReference          1;	///< Required element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    _XML                                *__any                         0;	///< Catch any element content in XML string.
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":RenewResponse

/// "http://docs.oasis-open.org/wsn/b-2":RenewResponse is a complexType.
struct _ns3__RenewResponse
{
/// Element reference "http://docs.oasis-open.org/wsn/b-2":TerminationTime.
    time_t                               TerminationTime                1;	///< Required element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2":CurrentTime.
    time_t*                              CurrentTime                    0;	///< Optional element.
/// Element reference "http://docs.oasis-open.org/wsn/b-2":SubscriptionReference.
    wsa5__EndpointReferenceType*         SubscriptionReference          0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    _XML                                *__any                         0;	///< Catch any element content in XML string.
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":Unsubscribe

/// "http://docs.oasis-open.org/wsn/b-2":Unsubscribe is a complexType.
struct _ns3__Unsubscribe
{
/// Element reference "http://docs.oasis-open.org/wsn/b-2":SubscriptionReference.
    wsa5__EndpointReferenceType          SubscriptionReference          1;	///< Required element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    _XML                                *__any                         0;	///< Catch any element content in XML string.
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnsubscribeResponse

/// "http://docs.oasis-open.org/wsn/b-2":UnsubscribeResponse is a complexType.
struct _ns3__UnsubscribeResponse
{
/// Element reference "http://docs.oasis-open.org/wsn/b-2":SubscriptionReference.
    wsa5__EndpointReferenceType*         SubscriptionReference          0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    _XML                                *__any                         0;	///< Catch any element content in XML string.
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":PauseSubscription

/// "http://docs.oasis-open.org/wsn/b-2":PauseSubscription is a complexType.
struct _ns3__PauseSubscription
{
/// Element reference "http://docs.oasis-open.org/wsn/b-2":SubscriptionReference.
    wsa5__EndpointReferenceType          SubscriptionReference          1;	///< Required element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    _XML                                *__any                         0;	///< Catch any element content in XML string.
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":PauseSubscriptionResponse

/// "http://docs.oasis-open.org/wsn/b-2":PauseSubscriptionResponse is a complexType.
struct _ns3__PauseSubscriptionResponse
{
/// Element reference "http://docs.oasis-open.org/wsn/b-2":SubscriptionReference.
    wsa5__EndpointReferenceType*         SubscriptionReference          0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    _XML                                *__any                         0;	///< Catch any element content in XML string.
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":ResumeSubscription

/// "http://docs.oasis-open.org/wsn/b-2":ResumeSubscription is a complexType.
struct _ns3__ResumeSubscription
{
/// Element reference "http://docs.oasis-open.org/wsn/b-2":SubscriptionReference.
    wsa5__EndpointReferenceType          SubscriptionReference          1;	///< Required element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    _XML                                *__any                         0;	///< Catch any element content in XML string.
};


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":ResumeSubscriptionResponse

/// "http://docs.oasis-open.org/wsn/b-2":ResumeSubscriptionResponse is a complexType.
struct _ns3__ResumeSubscriptionResponse
{
/// Element reference "http://docs.oasis-open.org/wsn/b-2":SubscriptionReference.
    wsa5__EndpointReferenceType*         SubscriptionReference          0;	///< Optional element.
/// TODO: <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    _XML                                *__any                         0;	///< Catch any element content in XML string.
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://docs.oasis-open.org/wsrf/r-2                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://ogf.org/schema/network/topology/ctrlPlane/20080828/               *
 *                                                                            *
\******************************************************************************/


/// "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":CtrlPlaneTopologyContent is a complexType.
struct ns5__CtrlPlaneTopologyContent
{
/// Element idcId of type xs:string.
    char*                                idcId                          1;	///< Required element.
/// Size of the dynamic array of struct ns5__CtrlPlanePathContent* is 0..unbounded
   $int                                  __sizepath                     0;
/// Pointer to array struct ns5__CtrlPlanePathContent* of length 0..unbounded
    struct ns5__CtrlPlanePathContent*   *path                           0;
/// Size of the dynamic array of struct ns5__CtrlPlaneDomainContent* is 0..unbounded
   $int                                  __sizedomain                   0;
/// Pointer to array struct ns5__CtrlPlaneDomainContent* of length 0..unbounded
    struct ns5__CtrlPlaneDomainContent* *domain                         0;
/// Size of array of struct ns5__CtrlPlaneDomainSignatureContent* is 0..unbounded
   $int                                  __sizedomainSignature          0;
/// Pointer to array struct ns5__CtrlPlaneDomainSignatureContent* of length 0..unbounded
    struct ns5__CtrlPlaneDomainSignatureContent* *domainSignature                0;
/// Attribute id of type xs:string.
   @char*                                id                             1;	///< Required attribute.
};

/// "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":CtrlPlaneDomainContent is a complexType.
struct ns5__CtrlPlaneDomainContent
{
/// Element lifetime of type "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":Lifetime.
    struct ns5__Lifetime*                lifetime                       0;	///< Optional element.
/// Size of the dynamic array of struct ns5__CtrlPlaneNodeContent* is 0..unbounded
   $int                                  __sizenode                     0;
/// Pointer to array struct ns5__CtrlPlaneNodeContent* of length 0..unbounded
    struct ns5__CtrlPlaneNodeContent*   *node                           0;
/// Size of the dynamic array of struct ns5__CtrlPlanePortContent* is 0..unbounded
   $int                                  __sizeport                     0;
/// Pointer to array struct ns5__CtrlPlanePortContent* of length 0..unbounded
    struct ns5__CtrlPlanePortContent*   *port                           0;
/// Size of the dynamic array of struct ns5__CtrlPlaneLinkContent* is 0..unbounded
   $int                                  __sizelink                     0;
/// Pointer to array struct ns5__CtrlPlaneLinkContent* of length 0..unbounded
    struct ns5__CtrlPlaneLinkContent*   *link                           0;
/// Attribute id of type xs:string.
   @char*                                id                             1;	///< Required attribute.
};

/// "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":CtrlPlaneNodeContent is a complexType.
struct ns5__CtrlPlaneNodeContent
{
/// Element lifetime of type "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":Lifetime.
    struct ns5__Lifetime*                lifetime                       0;	///< Optional element.
/// Element address of type "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":CtrlPlaneAddressContent.
    struct ns5__CtrlPlaneAddressContent*  address                        0;	///< Optional element.
/// Size of the dynamic array of struct ns5__CtrlPlanePortContent* is 0..unbounded
   $int                                  __sizeport                     0;
/// Pointer to array struct ns5__CtrlPlanePortContent* of length 0..unbounded
    struct ns5__CtrlPlanePortContent*   *port                           0;
/// Attribute id of type xs:string.
   @char*                                id                             1;	///< Required attribute.
};

/// "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":CtrlPlanePortContent is a complexType.
struct ns5__CtrlPlanePortContent
{
/// Element lifetime of type "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":Lifetime.
    struct ns5__Lifetime*                lifetime                       0;	///< Optional element.
/// Element capacity of type xs:string.
    char*                                capacity                       0;	///< Optional element.
/// Element maximumReservableCapacity of type xs:string.
    char*                                maximumReservableCapacity      0;	///< Optional element.
/// Element minimumReservableCapacity of type xs:string.
    char*                                minimumReservableCapacity      0;	///< Optional element.
/// Element granularity of type xs:string.
    char*                                granularity                    0;	///< Optional element.
/// Element unreservedCapacity of type xs:string.
    char*                                unreservedCapacity             0;	///< Optional element.
/// Size of the dynamic array of struct ns5__CtrlPlaneLinkContent* is 0..unbounded
   $int                                  __sizelink                     0;
/// Pointer to array struct ns5__CtrlPlaneLinkContent* of length 0..unbounded
    struct ns5__CtrlPlaneLinkContent*   *link                           0;
/// Attribute id of type xs:string.
   @char*                                id                             1;	///< Required attribute.
};

/// "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":CtrlPlaneLinkContent is a complexType.
struct ns5__CtrlPlaneLinkContent
{
/// Element remoteLinkId of type xs:string.
    char*                                remoteLinkId                   0;	///< Optional element.
/// Element trafficEngineeringMetric of type xs:string.
    char*                                trafficEngineeringMetric       1;	///< Required element.
/// Element capacity of type xs:string.
    char*                                capacity                       0;	///< Optional element.
/// Element maximumReservableCapacity of type xs:string.
    char*                                maximumReservableCapacity      0;	///< Optional element.
/// Element minimumReservableCapacity of type xs:string.
    char*                                minimumReservableCapacity      0;	///< Optional element.
/// Element granularity of type xs:string.
    char*                                granularity                    0;	///< Optional element.
/// Element unreservedCapacity of type xs:string.
    char*                                unreservedCapacity             0;	///< Optional element.
/// Size of array of char* is 0..unbounded
   $int                                  __sizelinkProtectionTypes      0;
/// Pointer to array char* of length 0..unbounded
    char*                               *linkProtectionTypes            0;
/// Size of array of struct ns5__CtrlPlaneAdministrativeGroup* is 0..unbounded
   $int                                  __sizeadministrativeGroups     0;
/// Pointer to array struct ns5__CtrlPlaneAdministrativeGroup* of length 0..unbounded
    struct ns5__CtrlPlaneAdministrativeGroup* *administrativeGroups           0;
/// Element SwitchingCapabilityDescriptors of type "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":CtrlPlaneSwcapContent.
    struct ns5__CtrlPlaneSwcapContent*   SwitchingCapabilityDescriptors 1;	///< Required element.
/// Attribute id of type xs:string.
   @char*                                id                             1;	///< Required attribute.
};

/// "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":CtrlPlanePathContent is a complexType.
struct ns5__CtrlPlanePathContent
{
/// Element lifetime of type "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":Lifetime.
    struct ns5__Lifetime*                lifetime                       0;	///< Optional element.
/// Size of array of struct ns5__CtrlPlaneHopContent* is 0..unbounded
   $int                                  __sizehop                      0;
/// Pointer to array struct ns5__CtrlPlaneHopContent* of length 0..unbounded
    struct ns5__CtrlPlaneHopContent*    *hop                            0;
/// Attribute id of type xs:string.
   @char*                                id                             1;	///< Required attribute.
/// Attribute direction of type xs:string.
   @char*                                direction                      0;	///< Optional attribute.
};

/// "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":CtrlPlaneHopContent is a complexType.
struct ns5__CtrlPlaneHopContent
{
/// Element domainIdRef of type xs:string.
    char*                                domainIdRef                    0;	///< Optional element.
/// Element nodeIdRef of type xs:string.
    char*                                nodeIdRef                      0;	///< Optional element.
/// Element portIdRef of type xs:string.
    char*                                portIdRef                      0;	///< Optional element.
/// Element linkIdRef of type xs:string.
    char*                                linkIdRef                      0;	///< Optional element.
/// Element reference "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":domain.
    struct ns5__CtrlPlaneDomainContent*  domain                         0;	///< Optional element.
/// Element reference "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":node.
    struct ns5__CtrlPlaneNodeContent*    node                           0;	///< Optional element.
/// Element reference "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":port.
    struct ns5__CtrlPlanePortContent*    port                           0;	///< Optional element.
/// Element reference "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":link.
    struct ns5__CtrlPlaneLinkContent*    link                           0;	///< Optional element.
/// Size of array of struct ns5__CtrlPlaneNextHopContent* is 0..unbounded
   $int                                  __sizenextHop                  0;
/// Pointer to array struct ns5__CtrlPlaneNextHopContent* of length 0..unbounded
    struct ns5__CtrlPlaneNextHopContent* *nextHop                        0;
/// Attribute id of type xs:string.
   @char*                                id                             1;	///< Required attribute.
};

/// "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":Lifetime is a complexType.
struct ns5__Lifetime
{
/// Element start of type "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":TimeContent.
    struct ns5__TimeContent*             start                          0;	///< Optional element.
/// Element end of type "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":TimeContent.
    struct ns5__TimeContent*             end                            0;	///< Optional element.
/// Element duration of type "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":Duration.
    struct ns5__Duration*                duration                       0;	///< Optional element.
/// Attribute id of type xs:string.
   @char*                                id                             1;	///< Required attribute.
/// Attribute direction of type xs:string.
   @char*                                direction                      0;	///< Optional attribute.
};

/// "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":CtrlPlaneDomainSignatureContent is a complexType.
struct ns5__CtrlPlaneDomainSignatureContent
{
/// Attribute domainId of type xs:string.
   @char*                                domainId                       1;	///< Required attribute.
};

/// "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":CtrlPlaneSwcapContent is a complexType.
struct ns5__CtrlPlaneSwcapContent
{
/// Element switchingcapType of type xs:string.
    char*                                switchingcapType               1;	///< Required element.
/// Element encodingType of type xs:string.
    char*                                encodingType                   1;	///< Required element.
/// Element switchingCapabilitySpecificInfo of type "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":CtrlPlaneSwitchingCapabilitySpecificInfo.
    struct ns5__CtrlPlaneSwitchingCapabilitySpecificInfo*  switchingCapabilitySpecificInfo 1;	///< Required element.
};

/// "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":CtrlPlaneAdministrativeGroup is a complexType.
struct ns5__CtrlPlaneAdministrativeGroup
{
/// Element group of type xs:int.
    int                                  group                          1;	///< Required element.
/// Element groupID of type xs:string.
    char*                                groupID                        0;	///< Optional element.
};

/// "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":CtrlPlaneSwitchingCapabilitySpecificInfo is a complexType.
struct ns5__CtrlPlaneSwitchingCapabilitySpecificInfo
{
/// Element capability of type xs:string.
    char*                                capability                     0;	///< Optional element.
/// Element interfaceMTU of type xs:int.
    int*                                 interfaceMTU                   0;	///< Optional element.
/// Element vlanRangeAvailability of type xs:string.
    char*                                vlanRangeAvailability          0;	///< Optional element.
/// Element suggestedVLANRange of type xs:string.
    char*                                suggestedVLANRange             0;	///< Optional element.
/// Element vlanTranslation of type xs:boolean.
    enum xsd__boolean_*                  vlanTranslation                0;	///< Optional element.
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://oscars.es.net/OSCARS/authParams                                   *
 *                                                                            *
\******************************************************************************/


/// "http://oscars.es.net/OSCARS/authParams":messagePropertiesType is a complexType.
struct ns6__messagePropertiesType
{
/// Element globalTransactionId of type xs:string.
    char*                                globalTransactionId            1;	///< Required element.
/// Element originator of type "http://oscars.es.net/OSCARS/authParams":subjectAttributes.
    struct ns6__subjectAttributes*       originator                     1;	///< Required element.
};

/// "http://oscars.es.net/OSCARS/authParams":subjectAttributes is a complexType.
struct ns6__subjectAttributes
{
/// Size of array of struct ns8__AttributeType* is 1..unbounded
   $int                                  __sizesubjectAttribute         1;
/// Pointer to array struct ns8__AttributeType* of length 1..unbounded
    struct ns8__AttributeType*          *subjectAttribute               1;
};

/// "http://oscars.es.net/OSCARS/authParams":authConditions is a complexType.
struct ns6__authConditions
{
/// Size of array of struct ns6__authConditionType* is 0..unbounded
   $int                                  __sizeauthCondition            0;
/// Pointer to array struct ns6__authConditionType* of length 0..unbounded
    struct ns6__authConditionType*      *authCondition                  0;
};

/// "http://oscars.es.net/OSCARS/authParams":authConditionType is a complexType.
struct ns6__authConditionType
{
/// Size of array of char* is 1..unbounded
   $int                                  __sizeconditionValue           1;
/// Pointer to array char* of length 1..unbounded
    char*                               *conditionValue                 1;
/// Attribute name of type xs:string.
   @char*                                name                           1;	///< Required attribute.
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/// "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType is a complexType.
struct ns7__BaseFaultType
{
/// Element Timestamp of type xs:dateTime.
    time_t                               Timestamp                      1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         Originator                     0;	///< Optional element.
/// Element ErrorCode of type "http://docs.oasis-open.org/wsrf/bf-2":ErrorCodeType.
    struct ns7__ErrorCodeType*           ErrorCode                      0;	///< Optional element.
/// Size of array of char* is 0..unbounded
   $int                                  __sizeDescription              0;
/// Pointer to array char* of length 0..unbounded
    char*                               *Description                    0;
/// Element FaultCause of type "http://docs.oasis-open.org/wsrf/bf-2":FaultCauseType.
    struct ns7__FaultCauseType*          FaultCause                     0;	///< Optional element.
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   urn:oasis:names:tc:SAML:2.0:assertion                                    *
 *                                                                            *
\******************************************************************************/


/// "urn:oasis:names:tc:SAML:2.0:assertion":BaseIDAbstractType is an abstract complexType.
struct ns8__BaseIDAbstractType
{
/// Attribute NameQualifier of type xs:string.
   @char*                                NameQualifier                  0;	///< Optional attribute.
/// Attribute SPNameQualifier of type xs:string.
   @char*                                SPNameQualifier                0;	///< Optional attribute.
};

/// "urn:oasis:names:tc:SAML:2.0:assertion":EncryptedElementType is a complexType.
struct ns8__EncryptedElementType
{
/// Imported element reference "http://www.w3.org/2001/04/xmlenc#":EncryptedData.
    _xenc__EncryptedData                 xenc__EncryptedData            1;	///< Required element.
/// Imported element reference "http://www.w3.org/2001/04/xmlenc#":EncryptedKey.
    _xenc__EncryptedKey*                 xenc__EncryptedKey             0;
};

/// "urn:oasis:names:tc:SAML:2.0:assertion":AssertionType is a complexType.
struct ns8__AssertionType
{
/// Element reference "urn:oasis:names:tc:SAML:2.0:assertion":Issuer.
    struct ns8__NameIDType*              Issuer                         1;	///< Required element.
/// Imported element reference "http://www.w3.org/2000/09/xmldsig#":Signature.
    _ds__Signature*                      ds__Signature                  0;	///< Optional element.
/// Element reference "urn:oasis:names:tc:SAML:2.0:assertion":Subject.
    struct ns8__SubjectType*             Subject                        0;	///< Optional element.
/// Element reference "urn:oasis:names:tc:SAML:2.0:assertion":Conditions.
    struct ns8__ConditionsType*          Conditions                     0;	///< Optional element.
/// Element reference "urn:oasis:names:tc:SAML:2.0:assertion":Advice.
    struct ns8__AdviceType*              Advice                         0;	///< Optional element.
/// CHOICE OF ELEMENTS <xs:choice minOccurs="0" maxOccurs="unbounded">
   $int                                  __size_AssertionType           0;
    struct __ns8__union_AssertionType
    {
   $int                                  __union_AssertionType          0;	///< Union _ns8__union_AssertionType selector: set to SOAP_UNION__ns8__union_AssertionType_<fieldname> or 0
    union _ns8__union_AssertionType
    {
/// Element reference "urn:oasis:names:tc:SAML:2.0:assertion":Statement.
    struct ns8__StatementAbstractType*   Statement                      1;	///< Required element.
/// Element reference "urn:oasis:names:tc:SAML:2.0:assertion":AuthnStatement.
    struct ns8__AuthnStatementType*      AuthnStatement                 1;	///< Required element.
/// Element reference "urn:oasis:names:tc:SAML:2.0:assertion":AuthzDecisionStatement.
    struct ns8__AuthzDecisionStatementType*  AuthzDecisionStatement         1;	///< Required element.
/// Element reference "urn:oasis:names:tc:SAML:2.0:assertion":AttributeStatement.
    struct ns8__AttributeStatementType*  AttributeStatement             1;	///< Required element.
    }                                    union_AssertionType           ;
    }                                   *__union_AssertionType         ;
//  END OF CHOICE
/// Attribute Version of type xs:string.
   @char*                                Version                        1;	///< Required attribute.
/// Attribute ID of type xs:ID.
   @char*                                ID                             1;	///< Required attribute.
/// Attribute IssueInstant of type xs:dateTime.
   @time_t                               IssueInstant                   1;	///< Required attribute.
};

/// "urn:oasis:names:tc:SAML:2.0:assertion":SubjectType is a complexType.
struct ns8__SubjectType
{
/// CHOICE OF ELEMENTS <xs:choice>
/// Note: <xs:choice> with embedded <xs:sequence> or <xs:group> prevents the use of a union
/// SEQUENCE OF ELEMENTS <xs:sequence>
/// CHOICE OF ELEMENTS <xs:choice>
   $int                                  __union_SubjectType_          ;	///< Union _ns8__union_SubjectType_ selector: set to SOAP_UNION__ns8__union_SubjectType__<fieldname>
    union _ns8__union_SubjectType_
    {
/// Element reference "urn:oasis:names:tc:SAML:2.0:assertion":BaseID.
    struct ns8__BaseIDAbstractType*      BaseID                        ;
/// Element reference "urn:oasis:names:tc:SAML:2.0:assertion":NameID.
    struct ns8__NameIDType*              NameID                        ;
/// Element reference "urn:oasis:names:tc:SAML:2.0:assertion":EncryptedID.
    struct ns8__EncryptedElementType*    EncryptedID                   ;
    }                                    union_SubjectType_            ;
//  END OF CHOICE
/// Size of the dynamic array of struct ns8__SubjectConfirmationType* is 0..unbounded
   $int                                  __sizeSubjectConfirmation      0;
/// Pointer to array struct ns8__SubjectConfirmationType* of length 0..unbounded
    struct ns8__SubjectConfirmationType* *SubjectConfirmation           ;
//  END OF SEQUENCE
/// Size of the dynamic array of struct ns8__SubjectConfirmationType* is 1..unbounded
   $int                                  __sizeSubjectConfirmation      0;
/// Pointer to array struct ns8__SubjectConfirmationType* of length 1..unbounded
    struct ns8__SubjectConfirmationType* *SubjectConfirmation           ;
;
//  END OF CHOICE
};

/// "urn:oasis:names:tc:SAML:2.0:assertion":SubjectConfirmationType is a complexType.
struct ns8__SubjectConfirmationType
{
/// CHOICE OF ELEMENTS <xs:choice minOccurs="0">
   $int                                  __union_SubjectConfirmationType 0;	///< Union _ns8__union_SubjectConfirmationType selector: set to SOAP_UNION__ns8__union_SubjectConfirmationType_<fieldname> or 0
    union _ns8__union_SubjectConfirmationType
    {
/// Element reference "urn:oasis:names:tc:SAML:2.0:assertion":BaseID.
    struct ns8__BaseIDAbstractType*      BaseID                         1;	///< Required element.
/// Element reference "urn:oasis:names:tc:SAML:2.0:assertion":NameID.
    struct ns8__NameIDType*              NameID                         1;	///< Required element.
/// Element reference "urn:oasis:names:tc:SAML:2.0:assertion":EncryptedID.
    struct ns8__EncryptedElementType*    EncryptedID                    1;	///< Required element.
    }                                    union_SubjectConfirmationType ;
//  END OF CHOICE
/// Element reference "urn:oasis:names:tc:SAML:2.0:assertion":SubjectConfirmationData.
    struct ns8__SubjectConfirmationDataType*  SubjectConfirmationData        0;	///< Optional element.
/// Attribute Method of type xs:anyURI.
   @char*                                Method                         1;	///< Required attribute.
};

/// "urn:oasis:names:tc:SAML:2.0:assertion":ConditionsType is a complexType.
struct ns8__ConditionsType
{
/// CHOICE OF ELEMENTS <xs:choice minOccurs="0" maxOccurs="unbounded">
   $int                                  __size_ConditionsType          0;
    struct __ns8__union_ConditionsType
    {
   $int                                  __union_ConditionsType         0;	///< Union _ns8__union_ConditionsType selector: set to SOAP_UNION__ns8__union_ConditionsType_<fieldname> or 0
/// Union for choice in type ns8__ConditionsType
    union _ns8__union_ConditionsType
    {
/// Element reference "urn:oasis:names:tc:SAML:2.0:assertion":Condition.
    struct ns8__ConditionAbstractType*   Condition                      1;	///< Required element.
/// Element reference "urn:oasis:names:tc:SAML:2.0:assertion":AudienceRestriction.
    struct ns8__AudienceRestrictionType*  AudienceRestriction            1;	///< Required element.
/// Element reference "urn:oasis:names:tc:SAML:2.0:assertion":OneTimeUse.
    struct ns8__OneTimeUseType*          OneTimeUse                     1;	///< Required element.
/// Element reference "urn:oasis:names:tc:SAML:2.0:assertion":ProxyRestriction.
    struct ns8__ProxyRestrictionType*    ProxyRestriction               1;	///< Required element.
    }                                    union_ConditionsType          ;
    }                                   *__union_ConditionsType        ;
//  END OF CHOICE
/// Attribute NotBefore of type xs:dateTime.
   @time_t*                              NotBefore                      0;	///< Optional attribute.
/// Attribute NotOnOrAfter of type xs:dateTime.
   @time_t*                              NotOnOrAfter                   0;	///< Optional attribute.
};

/// "urn:oasis:names:tc:SAML:2.0:assertion":ConditionAbstractType is an abstract complexType.
struct ns8__ConditionAbstractType
{
};

/// "urn:oasis:names:tc:SAML:2.0:assertion":AdviceType is a complexType.
struct ns8__AdviceType
{
/// CHOICE OF ELEMENTS <xs:choice minOccurs="0" maxOccurs="unbounded">
   $int                                  __size_AdviceType              0;
    struct __ns8__union_AdviceType
    {
   $int                                  __union_AdviceType             0;	///< Union _ns8__union_AdviceType selector: set to SOAP_UNION__ns8__union_AdviceType_<fieldname> or 0
/// Union for choice in type ns8__AdviceType
    union _ns8__union_AdviceType
    {
/// Element reference "urn:oasis:names:tc:SAML:2.0:assertion":AssertionIDRef.
    char*                                AssertionIDRef                 1;	///< Required element.
/// Element reference "urn:oasis:names:tc:SAML:2.0:assertion":AssertionURIRef.
    char*                                AssertionURIRef                1;	///< Required element.
/// Element reference "urn:oasis:names:tc:SAML:2.0:assertion":Assertion.
    struct ns8__AssertionType*           Assertion                      1;	///< Required element.
/// Element reference "urn:oasis:names:tc:SAML:2.0:assertion":EncryptedAssertion.
    struct ns8__EncryptedElementType*    EncryptedAssertion             1;	///< Required element.
/// TODO: <any namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __any                         0;	///< Catch any element content in XML string.
    }                                    union_AdviceType              ;
    }                                   *__union_AdviceType            ;
//  END OF CHOICE
};

/// "urn:oasis:names:tc:SAML:2.0:assertion":StatementAbstractType is an abstract complexType.
struct ns8__StatementAbstractType
{
};

/// "urn:oasis:names:tc:SAML:2.0:assertion":SubjectLocalityType is a complexType.
struct ns8__SubjectLocalityType
{
/// Attribute Address of type xs:string.
   @char*                                Address                        0;	///< Optional attribute.
/// Attribute DNSName of type xs:string.
   @char*                                DNSName                        0;	///< Optional attribute.
};

/// "urn:oasis:names:tc:SAML:2.0:assertion":AuthnContextType is a complexType.
struct ns8__AuthnContextType
{
/// CHOICE OF ELEMENTS <xs:choice>
/// Note: <xs:choice> with embedded <xs:sequence> or <xs:group> prevents the use of a union
/// SEQUENCE OF ELEMENTS <xs:sequence>
/// Element reference "urn:oasis:names:tc:SAML:2.0:assertion":AuthnContextClassRef.
    char*                                AuthnContextClassRef          ;
/// CHOICE OF ELEMENTS <xs:choice minOccurs="0">
   $int                                  __union_AuthnContextType_      0;	///< Union _ns8__union_AuthnContextType_ selector: set to SOAP_UNION__ns8__union_AuthnContextType__<fieldname> or 0
    union _ns8__union_AuthnContextType_
    {
/// Element reference "urn:oasis:names:tc:SAML:2.0:assertion":AuthnContextDecl.
    _XML                                 AuthnContextDecl              ;
/// Element reference "urn:oasis:names:tc:SAML:2.0:assertion":AuthnContextDeclRef.
    char*                                AuthnContextDeclRef           ;
    }                                    union_AuthnContextType_       ;
//  END OF CHOICE
//  END OF SEQUENCE
/// CHOICE OF ELEMENTS <xs:choice>
   $int                                  __union_AuthnContextType__    ;	///< Union _ns8__union_AuthnContextType__ selector: set to SOAP_UNION__ns8__union_AuthnContextType___<fieldname>
    union _ns8__union_AuthnContextType__
    {
/// Element reference "urn:oasis:names:tc:SAML:2.0:assertion":AuthnContextDecl.
    _XML                                 AuthnContextDecl              ;
/// Element reference "urn:oasis:names:tc:SAML:2.0:assertion":AuthnContextDeclRef.
    char*                                AuthnContextDeclRef           ;
    }                                    union_AuthnContextType__      ;
//  END OF CHOICE
;
//  END OF CHOICE
/// Size of the dynamic array of char*  is 0..unbounded
   $int                                  __sizeAuthenticatingAuthority  0;
/// Pointer to array char*  of length 0..unbounded
    char*                               *AuthenticatingAuthority        0;
};

/// "urn:oasis:names:tc:SAML:2.0:assertion":EvidenceType is a complexType.
struct ns8__EvidenceType
{
/// CHOICE OF ELEMENTS <xs:choice maxOccurs="unbounded">
   $int                                  __size_EvidenceType            0;
    struct __ns8__union_EvidenceType
    {
   $int                                  __union_EvidenceType          ;	///< Union _ns8__union_EvidenceType selector: set to SOAP_UNION__ns8__union_EvidenceType_<fieldname>
/// Union for choice in type ns8__EvidenceType
    union _ns8__union_EvidenceType
    {
/// Element reference "urn:oasis:names:tc:SAML:2.0:assertion":AssertionIDRef.
    char*                                AssertionIDRef                 1;	///< Required element.
/// Element reference "urn:oasis:names:tc:SAML:2.0:assertion":AssertionURIRef.
    char*                                AssertionURIRef                1;	///< Required element.
/// Element reference "urn:oasis:names:tc:SAML:2.0:assertion":Assertion.
    struct ns8__AssertionType*           Assertion                      1;	///< Required element.
/// Element reference "urn:oasis:names:tc:SAML:2.0:assertion":EncryptedAssertion.
    struct ns8__EncryptedElementType*    EncryptedAssertion             1;	///< Required element.
    }                                    union_EvidenceType            ;
    }                                   *__union_EvidenceType          ;
//  END OF CHOICE
};

/// "urn:oasis:names:tc:SAML:2.0:assertion":AttributeType is a complexType.
struct ns8__AttributeType
{
/// Size of the dynamic array of _XML is 0..unbounded
   $int                                  __sizeAttributeValue           0;
/// Pointer to array _XML of length 0..unbounded
    _XML                                *AttributeValue                 0;
/// Attribute Name of type xs:string.
   @char*                                Name                           1;	///< Required attribute.
/// Attribute NameFormat of type xs:anyURI.
   @char*                                NameFormat                     0;	///< Optional attribute.
/// Attribute FriendlyName of type xs:string.
   @char*                                FriendlyName                   0;	///< Optional attribute.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/// "http://oscars.es.net/OSCARS/06":vlanTag is a complexType with simpleContent.
struct ns1__vlanTag
{
/// __item wraps 'xs:string' simpleContent.
    char*                                __item                        ;
/// Attribute tagged of type xs:boolean.
   @enum xsd__boolean_                   tagged                         0;	///< Default value="true".
};

/// "http://oscars.es.net/OSCARS/06":reservationResourceType is a complexType with complexContent extension of "http://oscars.es.net/OSCARS/06":resCreateContent.
struct ns1__reservationResourceType
{
/// INHERITED FROM ns1__resCreateContent:
/// Element messageProperties of type "http://oscars.es.net/OSCARS/authParams":messagePropertiesType.
    struct ns6__messagePropertiesType*   messageProperties              0;	///< Optional element.
/// Element globalReservationId of type xs:string.
    char*                                globalReservationId            0;	///< Optional element.
/// Element description of type xs:string.
    char*                                description                    1;	///< Required element.
/// Element userRequestConstraint of type "http://oscars.es.net/OSCARS/06":userRequestConstraintType.
    struct ns1__userRequestConstraintType*  userRequestConstraint          1;	///< Required element.
/// Element reservedConstraint of type "http://oscars.es.net/OSCARS/06":reservedConstraintType.
    struct ns1__reservedConstraintType*  reservedConstraint             0;	///< Optional element.
/// Size of array of struct ns1__optionalConstraintType* is 0..unbounded
   $int                                  __sizeoptionalConstraint       0;
/// Pointer to array struct ns1__optionalConstraintType* of length 0..unbounded
    struct ns1__optionalConstraintType* *optionalConstraint             0;
//  END OF INHERITED FROM ns1__resCreateContent
/// SEQUENCE OF ELEMENTS <xs:sequence minOccurs="0">
   $int                                  __size_reservationResourceType_sequence 0;
    struct __ns1__reservationResourceType_sequence
    {
/// Element localDetails of type "http://oscars.es.net/OSCARS/06":localDetails.
    struct ns1__localDetails*            localDetails                   0;	///< Optional element.
    }                                   *__reservationResourceType_sequence;
//  END OF SEQUENCE
};

/// "http://docs.oasis-open.org/wsn/b-2":QueryExpressionType is a complexType with simpleContent.
struct ns3__QueryExpressionType
{
/// __item wraps 'xs:string' simpleContent.
    char*                                __item                        ;
/// Attribute Dialect of type xs:anyURI.
   @char*                                Dialect                        1;	///< Required attribute.
};

/// "http://docs.oasis-open.org/wsn/b-2":TopicExpressionType is a complexType with simpleContent.
struct ns3__TopicExpressionType
{
/// __item wraps 'xs:string' simpleContent.
    char*                                __item                        ;
/// Attribute Dialect of type xs:anyURI.
   @char*                                Dialect                        1;	///< Required attribute.
/// TODO: this mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __mixed                       0;	///< Catch mixed content in XML string
};

/// "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
struct ns3__SubscribeCreationFailedFaultType
{
/// INHERITED FROM ns7__BaseFaultType:
/// Element Timestamp of type xs:dateTime.
    time_t                               ns7__Timestamp                 1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         ns7__Originator                0;	///< Optional element.
/// Element ErrorCode of type "http://docs.oasis-open.org/wsrf/bf-2":ErrorCodeType.
    struct ns7__ErrorCodeType*           ns7__ErrorCode                 0;	///< Optional element.
/// Size of array of char* is 0..unbounded
   $int                                  __sizeDescription              0;
/// Pointer to array char* of length 0..unbounded
    char*                               *ns7__Description               0;
/// Element FaultCause of type "http://docs.oasis-open.org/wsrf/bf-2":FaultCauseType.
    struct ns7__FaultCauseType*          ns7__FaultCause                0;	///< Optional element.
//  END OF INHERITED FROM ns7__BaseFaultType
};

/// "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
struct ns3__InvalidFilterFaultType
{
/// INHERITED FROM ns7__BaseFaultType:
/// Element Timestamp of type xs:dateTime.
    time_t                               ns7__Timestamp                 1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         ns7__Originator                0;	///< Optional element.
/// Element ErrorCode of type "http://docs.oasis-open.org/wsrf/bf-2":ErrorCodeType.
    struct ns7__ErrorCodeType*           ns7__ErrorCode                 0;	///< Optional element.
/// Size of array of char* is 0..unbounded
   $int                                  __sizeDescription              0;
/// Pointer to array char* of length 0..unbounded
    char*                               *ns7__Description               0;
/// Element FaultCause of type "http://docs.oasis-open.org/wsrf/bf-2":FaultCauseType.
    struct ns7__FaultCauseType*          ns7__FaultCause                0;	///< Optional element.
//  END OF INHERITED FROM ns7__BaseFaultType
/// Size of array of _QName is 1..unbounded
   $int                                  __sizeUnknownFilter            1;
/// Pointer to array _QName of length 1..unbounded
    _QName                              *UnknownFilter                  1;
};

/// "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
struct ns3__TopicExpressionDialectUnknownFaultType
{
/// INHERITED FROM ns7__BaseFaultType:
/// Element Timestamp of type xs:dateTime.
    time_t                               ns7__Timestamp                 1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         ns7__Originator                0;	///< Optional element.
/// Element ErrorCode of type "http://docs.oasis-open.org/wsrf/bf-2":ErrorCodeType.
    struct ns7__ErrorCodeType*           ns7__ErrorCode                 0;	///< Optional element.
/// Size of array of char* is 0..unbounded
   $int                                  __sizeDescription              0;
/// Pointer to array char* of length 0..unbounded
    char*                               *ns7__Description               0;
/// Element FaultCause of type "http://docs.oasis-open.org/wsrf/bf-2":FaultCauseType.
    struct ns7__FaultCauseType*          ns7__FaultCause                0;	///< Optional element.
//  END OF INHERITED FROM ns7__BaseFaultType
};

/// "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
struct ns3__InvalidTopicExpressionFaultType
{
/// INHERITED FROM ns7__BaseFaultType:
/// Element Timestamp of type xs:dateTime.
    time_t                               ns7__Timestamp                 1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         ns7__Originator                0;	///< Optional element.
/// Element ErrorCode of type "http://docs.oasis-open.org/wsrf/bf-2":ErrorCodeType.
    struct ns7__ErrorCodeType*           ns7__ErrorCode                 0;	///< Optional element.
/// Size of array of char* is 0..unbounded
   $int                                  __sizeDescription              0;
/// Pointer to array char* of length 0..unbounded
    char*                               *ns7__Description               0;
/// Element FaultCause of type "http://docs.oasis-open.org/wsrf/bf-2":FaultCauseType.
    struct ns7__FaultCauseType*          ns7__FaultCause                0;	///< Optional element.
//  END OF INHERITED FROM ns7__BaseFaultType
};

/// "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
struct ns3__TopicNotSupportedFaultType
{
/// INHERITED FROM ns7__BaseFaultType:
/// Element Timestamp of type xs:dateTime.
    time_t                               ns7__Timestamp                 1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         ns7__Originator                0;	///< Optional element.
/// Element ErrorCode of type "http://docs.oasis-open.org/wsrf/bf-2":ErrorCodeType.
    struct ns7__ErrorCodeType*           ns7__ErrorCode                 0;	///< Optional element.
/// Size of array of char* is 0..unbounded
   $int                                  __sizeDescription              0;
/// Pointer to array char* of length 0..unbounded
    char*                               *ns7__Description               0;
/// Element FaultCause of type "http://docs.oasis-open.org/wsrf/bf-2":FaultCauseType.
    struct ns7__FaultCauseType*          ns7__FaultCause                0;	///< Optional element.
//  END OF INHERITED FROM ns7__BaseFaultType
};

/// "http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
struct ns3__MultipleTopicsSpecifiedFaultType
{
/// INHERITED FROM ns7__BaseFaultType:
/// Element Timestamp of type xs:dateTime.
    time_t                               ns7__Timestamp                 1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         ns7__Originator                0;	///< Optional element.
/// Element ErrorCode of type "http://docs.oasis-open.org/wsrf/bf-2":ErrorCodeType.
    struct ns7__ErrorCodeType*           ns7__ErrorCode                 0;	///< Optional element.
/// Size of array of char* is 0..unbounded
   $int                                  __sizeDescription              0;
/// Pointer to array char* of length 0..unbounded
    char*                               *ns7__Description               0;
/// Element FaultCause of type "http://docs.oasis-open.org/wsrf/bf-2":FaultCauseType.
    struct ns7__FaultCauseType*          ns7__FaultCause                0;	///< Optional element.
//  END OF INHERITED FROM ns7__BaseFaultType
};

/// "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
struct ns3__InvalidProducerPropertiesExpressionFaultType
{
/// INHERITED FROM ns7__BaseFaultType:
/// Element Timestamp of type xs:dateTime.
    time_t                               ns7__Timestamp                 1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         ns7__Originator                0;	///< Optional element.
/// Element ErrorCode of type "http://docs.oasis-open.org/wsrf/bf-2":ErrorCodeType.
    struct ns7__ErrorCodeType*           ns7__ErrorCode                 0;	///< Optional element.
/// Size of array of char* is 0..unbounded
   $int                                  __sizeDescription              0;
/// Pointer to array char* of length 0..unbounded
    char*                               *ns7__Description               0;
/// Element FaultCause of type "http://docs.oasis-open.org/wsrf/bf-2":FaultCauseType.
    struct ns7__FaultCauseType*          ns7__FaultCause                0;	///< Optional element.
//  END OF INHERITED FROM ns7__BaseFaultType
};

/// "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
struct ns3__InvalidMessageContentExpressionFaultType
{
/// INHERITED FROM ns7__BaseFaultType:
/// Element Timestamp of type xs:dateTime.
    time_t                               ns7__Timestamp                 1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         ns7__Originator                0;	///< Optional element.
/// Element ErrorCode of type "http://docs.oasis-open.org/wsrf/bf-2":ErrorCodeType.
    struct ns7__ErrorCodeType*           ns7__ErrorCode                 0;	///< Optional element.
/// Size of array of char* is 0..unbounded
   $int                                  __sizeDescription              0;
/// Pointer to array char* of length 0..unbounded
    char*                               *ns7__Description               0;
/// Element FaultCause of type "http://docs.oasis-open.org/wsrf/bf-2":FaultCauseType.
    struct ns7__FaultCauseType*          ns7__FaultCause                0;	///< Optional element.
//  END OF INHERITED FROM ns7__BaseFaultType
};

/// "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
struct ns3__UnrecognizedPolicyRequestFaultType
{
/// INHERITED FROM ns7__BaseFaultType:
/// Element Timestamp of type xs:dateTime.
    time_t                               ns7__Timestamp                 1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         ns7__Originator                0;	///< Optional element.
/// Element ErrorCode of type "http://docs.oasis-open.org/wsrf/bf-2":ErrorCodeType.
    struct ns7__ErrorCodeType*           ns7__ErrorCode                 0;	///< Optional element.
/// Size of array of char* is 0..unbounded
   $int                                  __sizeDescription              0;
/// Pointer to array char* of length 0..unbounded
    char*                               *ns7__Description               0;
/// Element FaultCause of type "http://docs.oasis-open.org/wsrf/bf-2":FaultCauseType.
    struct ns7__FaultCauseType*          ns7__FaultCause                0;	///< Optional element.
//  END OF INHERITED FROM ns7__BaseFaultType
/// Size of array of _QName is 0..unbounded
   $int                                  __sizeUnrecognizedPolicy       0;
/// Pointer to array _QName of length 0..unbounded
    _QName                              *UnrecognizedPolicy             0;
};

/// "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
struct ns3__UnsupportedPolicyRequestFaultType
{
/// INHERITED FROM ns7__BaseFaultType:
/// Element Timestamp of type xs:dateTime.
    time_t                               ns7__Timestamp                 1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         ns7__Originator                0;	///< Optional element.
/// Element ErrorCode of type "http://docs.oasis-open.org/wsrf/bf-2":ErrorCodeType.
    struct ns7__ErrorCodeType*           ns7__ErrorCode                 0;	///< Optional element.
/// Size of array of char* is 0..unbounded
   $int                                  __sizeDescription              0;
/// Pointer to array char* of length 0..unbounded
    char*                               *ns7__Description               0;
/// Element FaultCause of type "http://docs.oasis-open.org/wsrf/bf-2":FaultCauseType.
    struct ns7__FaultCauseType*          ns7__FaultCause                0;	///< Optional element.
//  END OF INHERITED FROM ns7__BaseFaultType
/// Size of array of _QName is 0..unbounded
   $int                                  __sizeUnsupportedPolicy        0;
/// Pointer to array _QName of length 0..unbounded
    _QName                              *UnsupportedPolicy              0;
};

/// "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
struct ns3__NotifyMessageNotSupportedFaultType
{
/// INHERITED FROM ns7__BaseFaultType:
/// Element Timestamp of type xs:dateTime.
    time_t                               ns7__Timestamp                 1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         ns7__Originator                0;	///< Optional element.
/// Element ErrorCode of type "http://docs.oasis-open.org/wsrf/bf-2":ErrorCodeType.
    struct ns7__ErrorCodeType*           ns7__ErrorCode                 0;	///< Optional element.
/// Size of array of char* is 0..unbounded
   $int                                  __sizeDescription              0;
/// Pointer to array char* of length 0..unbounded
    char*                               *ns7__Description               0;
/// Element FaultCause of type "http://docs.oasis-open.org/wsrf/bf-2":FaultCauseType.
    struct ns7__FaultCauseType*          ns7__FaultCause                0;	///< Optional element.
//  END OF INHERITED FROM ns7__BaseFaultType
};

/// "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
struct ns3__UnacceptableInitialTerminationTimeFaultType
{
/// INHERITED FROM ns7__BaseFaultType:
/// Element Timestamp of type xs:dateTime.
    time_t                               ns7__Timestamp                 1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         ns7__Originator                0;	///< Optional element.
/// Element ErrorCode of type "http://docs.oasis-open.org/wsrf/bf-2":ErrorCodeType.
    struct ns7__ErrorCodeType*           ns7__ErrorCode                 0;	///< Optional element.
/// Size of array of char* is 0..unbounded
   $int                                  __sizeDescription              0;
/// Pointer to array char* of length 0..unbounded
    char*                               *ns7__Description               0;
/// Element FaultCause of type "http://docs.oasis-open.org/wsrf/bf-2":FaultCauseType.
    struct ns7__FaultCauseType*          ns7__FaultCause                0;	///< Optional element.
//  END OF INHERITED FROM ns7__BaseFaultType
/// Element MinimumTime of type xs:dateTime.
    time_t                               MinimumTime                    1;	///< Required element.
/// Element MaximumTime of type xs:dateTime.
    time_t*                              MaximumTime                    0;	///< Optional element.
};

/// "http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
struct ns3__NoCurrentMessageOnTopicFaultType
{
/// INHERITED FROM ns7__BaseFaultType:
/// Element Timestamp of type xs:dateTime.
    time_t                               ns7__Timestamp                 1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         ns7__Originator                0;	///< Optional element.
/// Element ErrorCode of type "http://docs.oasis-open.org/wsrf/bf-2":ErrorCodeType.
    struct ns7__ErrorCodeType*           ns7__ErrorCode                 0;	///< Optional element.
/// Size of array of char* is 0..unbounded
   $int                                  __sizeDescription              0;
/// Pointer to array char* of length 0..unbounded
    char*                               *ns7__Description               0;
/// Element FaultCause of type "http://docs.oasis-open.org/wsrf/bf-2":FaultCauseType.
    struct ns7__FaultCauseType*          ns7__FaultCause                0;	///< Optional element.
//  END OF INHERITED FROM ns7__BaseFaultType
};

/// "http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
struct ns3__UnableToGetMessagesFaultType
{
/// INHERITED FROM ns7__BaseFaultType:
/// Element Timestamp of type xs:dateTime.
    time_t                               ns7__Timestamp                 1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         ns7__Originator                0;	///< Optional element.
/// Element ErrorCode of type "http://docs.oasis-open.org/wsrf/bf-2":ErrorCodeType.
    struct ns7__ErrorCodeType*           ns7__ErrorCode                 0;	///< Optional element.
/// Size of array of char* is 0..unbounded
   $int                                  __sizeDescription              0;
/// Pointer to array char* of length 0..unbounded
    char*                               *ns7__Description               0;
/// Element FaultCause of type "http://docs.oasis-open.org/wsrf/bf-2":FaultCauseType.
    struct ns7__FaultCauseType*          ns7__FaultCause                0;	///< Optional element.
//  END OF INHERITED FROM ns7__BaseFaultType
};

/// "http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
struct ns3__UnableToDestroyPullPointFaultType
{
/// INHERITED FROM ns7__BaseFaultType:
/// Element Timestamp of type xs:dateTime.
    time_t                               ns7__Timestamp                 1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         ns7__Originator                0;	///< Optional element.
/// Element ErrorCode of type "http://docs.oasis-open.org/wsrf/bf-2":ErrorCodeType.
    struct ns7__ErrorCodeType*           ns7__ErrorCode                 0;	///< Optional element.
/// Size of array of char* is 0..unbounded
   $int                                  __sizeDescription              0;
/// Pointer to array char* of length 0..unbounded
    char*                               *ns7__Description               0;
/// Element FaultCause of type "http://docs.oasis-open.org/wsrf/bf-2":FaultCauseType.
    struct ns7__FaultCauseType*          ns7__FaultCause                0;	///< Optional element.
//  END OF INHERITED FROM ns7__BaseFaultType
};

/// "http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
struct ns3__UnableToCreatePullPointFaultType
{
/// INHERITED FROM ns7__BaseFaultType:
/// Element Timestamp of type xs:dateTime.
    time_t                               ns7__Timestamp                 1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         ns7__Originator                0;	///< Optional element.
/// Element ErrorCode of type "http://docs.oasis-open.org/wsrf/bf-2":ErrorCodeType.
    struct ns7__ErrorCodeType*           ns7__ErrorCode                 0;	///< Optional element.
/// Size of array of char* is 0..unbounded
   $int                                  __sizeDescription              0;
/// Pointer to array char* of length 0..unbounded
    char*                               *ns7__Description               0;
/// Element FaultCause of type "http://docs.oasis-open.org/wsrf/bf-2":FaultCauseType.
    struct ns7__FaultCauseType*          ns7__FaultCause                0;	///< Optional element.
//  END OF INHERITED FROM ns7__BaseFaultType
};

/// "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
struct ns3__UnacceptableTerminationTimeFaultType
{
/// INHERITED FROM ns7__BaseFaultType:
/// Element Timestamp of type xs:dateTime.
    time_t                               ns7__Timestamp                 1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         ns7__Originator                0;	///< Optional element.
/// Element ErrorCode of type "http://docs.oasis-open.org/wsrf/bf-2":ErrorCodeType.
    struct ns7__ErrorCodeType*           ns7__ErrorCode                 0;	///< Optional element.
/// Size of array of char* is 0..unbounded
   $int                                  __sizeDescription              0;
/// Pointer to array char* of length 0..unbounded
    char*                               *ns7__Description               0;
/// Element FaultCause of type "http://docs.oasis-open.org/wsrf/bf-2":FaultCauseType.
    struct ns7__FaultCauseType*          ns7__FaultCause                0;	///< Optional element.
//  END OF INHERITED FROM ns7__BaseFaultType
/// Element MinimumTime of type xs:dateTime.
    time_t                               MinimumTime                    1;	///< Required element.
/// Element MaximumTime of type xs:dateTime.
    time_t*                              MaximumTime                    0;	///< Optional element.
};

/// "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
struct ns3__UnableToDestroySubscriptionFaultType
{
/// INHERITED FROM ns7__BaseFaultType:
/// Element Timestamp of type xs:dateTime.
    time_t                               ns7__Timestamp                 1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         ns7__Originator                0;	///< Optional element.
/// Element ErrorCode of type "http://docs.oasis-open.org/wsrf/bf-2":ErrorCodeType.
    struct ns7__ErrorCodeType*           ns7__ErrorCode                 0;	///< Optional element.
/// Size of array of char* is 0..unbounded
   $int                                  __sizeDescription              0;
/// Pointer to array char* of length 0..unbounded
    char*                               *ns7__Description               0;
/// Element FaultCause of type "http://docs.oasis-open.org/wsrf/bf-2":FaultCauseType.
    struct ns7__FaultCauseType*          ns7__FaultCause                0;	///< Optional element.
//  END OF INHERITED FROM ns7__BaseFaultType
};

/// "http://docs.oasis-open.org/wsn/b-2":PauseFailedFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
struct ns3__PauseFailedFaultType
{
/// INHERITED FROM ns7__BaseFaultType:
/// Element Timestamp of type xs:dateTime.
    time_t                               ns7__Timestamp                 1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         ns7__Originator                0;	///< Optional element.
/// Element ErrorCode of type "http://docs.oasis-open.org/wsrf/bf-2":ErrorCodeType.
    struct ns7__ErrorCodeType*           ns7__ErrorCode                 0;	///< Optional element.
/// Size of array of char* is 0..unbounded
   $int                                  __sizeDescription              0;
/// Pointer to array char* of length 0..unbounded
    char*                               *ns7__Description               0;
/// Element FaultCause of type "http://docs.oasis-open.org/wsrf/bf-2":FaultCauseType.
    struct ns7__FaultCauseType*          ns7__FaultCause                0;	///< Optional element.
//  END OF INHERITED FROM ns7__BaseFaultType
};

/// "http://docs.oasis-open.org/wsn/b-2":ResumeFailedFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
struct ns3__ResumeFailedFaultType
{
/// INHERITED FROM ns7__BaseFaultType:
/// Element Timestamp of type xs:dateTime.
    time_t                               ns7__Timestamp                 1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         ns7__Originator                0;	///< Optional element.
/// Element ErrorCode of type "http://docs.oasis-open.org/wsrf/bf-2":ErrorCodeType.
    struct ns7__ErrorCodeType*           ns7__ErrorCode                 0;	///< Optional element.
/// Size of array of char* is 0..unbounded
   $int                                  __sizeDescription              0;
/// Pointer to array char* of length 0..unbounded
    char*                               *ns7__Description               0;
/// Element FaultCause of type "http://docs.oasis-open.org/wsrf/bf-2":FaultCauseType.
    struct ns7__FaultCauseType*          ns7__FaultCause                0;	///< Optional element.
//  END OF INHERITED FROM ns7__BaseFaultType
};

/// "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
struct ns4__ResourceUnknownFaultType
{
/// INHERITED FROM ns7__BaseFaultType:
/// Element Timestamp of type xs:dateTime.
    time_t                               ns7__Timestamp                 1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         ns7__Originator                0;	///< Optional element.
/// Element ErrorCode of type "http://docs.oasis-open.org/wsrf/bf-2":ErrorCodeType.
    struct ns7__ErrorCodeType*           ns7__ErrorCode                 0;	///< Optional element.
/// Size of array of char* is 0..unbounded
   $int                                  __sizeDescription              0;
/// Pointer to array char* of length 0..unbounded
    char*                               *ns7__Description               0;
/// Element FaultCause of type "http://docs.oasis-open.org/wsrf/bf-2":FaultCauseType.
    struct ns7__FaultCauseType*          ns7__FaultCause                0;	///< Optional element.
//  END OF INHERITED FROM ns7__BaseFaultType
};

/// "http://docs.oasis-open.org/wsrf/r-2":ResourceUnavailableFaultType is a complexType with complexContent extension of "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
struct ns4__ResourceUnavailableFaultType
{
/// INHERITED FROM ns7__BaseFaultType:
/// Element Timestamp of type xs:dateTime.
    time_t                               ns7__Timestamp                 1;	///< Required element.
/// Element Originator of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
    wsa5__EndpointReferenceType*         ns7__Originator                0;	///< Optional element.
/// Element ErrorCode of type "http://docs.oasis-open.org/wsrf/bf-2":ErrorCodeType.
    struct ns7__ErrorCodeType*           ns7__ErrorCode                 0;	///< Optional element.
/// Size of array of char* is 0..unbounded
   $int                                  __sizeDescription              0;
/// Pointer to array char* of length 0..unbounded
    char*                               *ns7__Description               0;
/// Element FaultCause of type "http://docs.oasis-open.org/wsrf/bf-2":FaultCauseType.
    struct ns7__FaultCauseType*          ns7__FaultCause                0;	///< Optional element.
//  END OF INHERITED FROM ns7__BaseFaultType
};

/// "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":CtrlPlaneNextHopContent is a complexType with simpleContent.
struct ns5__CtrlPlaneNextHopContent
{
/// __item wraps 'xs:string' simpleContent.
    char*                                __item                        ;
/// Attribute weight of type xs:int.
   @int*                                 weight                         0;	///< Optional attribute.
/// Attribute optional of type xs:boolean.
   @enum xsd__boolean_*                  optional                       0;	///< Optional attribute.
};

/// "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":TimeContent is a complexType with simpleContent.
struct ns5__TimeContent
{
/// __item wraps 'xs:string' simpleContent.
    char*                                __item                        ;
/// Attribute type of type xs:string.
   @char*                                type                           1;	///< Required attribute.
};

/// "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":Duration is a complexType with simpleContent.
struct ns5__Duration
{
/// __item wraps 'xs:string' simpleContent.
    char*                                __item                        ;
/// Attribute type of type xs:string.
   @char*                                type                           1;	///< Required attribute.
};

/// "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":CtrlPlaneAddressContent is a complexType with simpleContent.
struct ns5__CtrlPlaneAddressContent
{
/// __item wraps 'xs:string' simpleContent.
    char*                                __item                        ;
/// Attribute value of type xs:string.
   @char*                                value                          0;	///< Optional attribute.
/// Attribute type of type xs:string.
   @char*                                type                           0;	///< Optional attribute.
};

/// "http://docs.oasis-open.org/wsrf/bf-2":ErrorCodeType is a complexType with simpleContent.
struct ns7__ErrorCodeType
{
/// __item wraps 'xs:string' simpleContent.
    char*                                __item                        ;
/// Attribute dialect of type xs:anyURI.
   @char*                                dialect                        1;	///< Required attribute.
};

/// "http://docs.oasis-open.org/wsrf/bf-2":FaultCauseType is a complexType with simpleContent.
struct ns7__FaultCauseType
{
/// __item wraps 'xs:string' simpleContent.
    char*                                __item                        ;
/// Attribute dialect of type xs:anyURI.
   @char*                                dialect                        0;	///< Optional attribute.
};

/// "urn:oasis:names:tc:SAML:2.0:assertion":NameIDType is a complexType with simpleContent.
struct ns8__NameIDType
{
/// __item wraps 'xs:string' simpleContent.
    char*                                __item                        ;
/// Attribute Format of type xs:anyURI.
   @char*                                Format                         0;	///< Optional attribute.
/// Attribute SPProvidedID of type xs:string.
   @char*                                SPProvidedID                   0;	///< Optional attribute.
/// Attribute NameQualifier of type xs:string.
   @char*                                NameQualifier                  0;	///< Optional attribute.
/// Attribute SPNameQualifier of type xs:string.
   @char*                                SPNameQualifier                0;	///< Optional attribute.
};

/// "urn:oasis:names:tc:SAML:2.0:assertion":SubjectConfirmationDataType is a complexType with complexContent restriction of xs:anyType.
struct ns8__SubjectConfirmationDataType
{
/// TODO: <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
/// Size of the array of XML or DOM nodes is 0..unbounded
   $int                                  __size                        0;
    _XML                                *__any                         0;	///< Catch any element content in XML string.
/// Attribute NotBefore of type xs:dateTime.
   @time_t*                              NotBefore                      0;	///< Optional attribute.
/// Attribute NotOnOrAfter of type xs:dateTime.
   @time_t*                              NotOnOrAfter                   0;	///< Optional attribute.
/// Attribute Recipient of type xs:anyURI.
   @char*                                Recipient                      0;	///< Optional attribute.
/// Attribute InResponseTo of type xs:NCName.
   @char*                                InResponseTo                   0;	///< Optional attribute.
/// Attribute Address of type xs:string.
   @char*                                Address                        0;	///< Optional attribute.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
/// TODO: this mixed complexType is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element).
    _XML                                 __mixed                       0;	///< Catch mixed content in XML string
};

/// "urn:oasis:names:tc:SAML:2.0:assertion":AudienceRestrictionType is a complexType with complexContent extension of "urn:oasis:names:tc:SAML:2.0:assertion":ConditionAbstractType.
struct ns8__AudienceRestrictionType
{
/// INHERITED FROM ns8__ConditionAbstractType:
//  END OF INHERITED FROM ns8__ConditionAbstractType
/// Size of the dynamic array of char*  is 1..unbounded
   $int                                  __sizeAudience                 1;
/// Pointer to array char*  of length 1..unbounded
    char*                               *Audience                       1;
};

/// "urn:oasis:names:tc:SAML:2.0:assertion":OneTimeUseType is a complexType with complexContent extension of "urn:oasis:names:tc:SAML:2.0:assertion":ConditionAbstractType.
struct ns8__OneTimeUseType
{
/// INHERITED FROM ns8__ConditionAbstractType:
//  END OF INHERITED FROM ns8__ConditionAbstractType
};

/// "urn:oasis:names:tc:SAML:2.0:assertion":ProxyRestrictionType is a complexType with complexContent extension of "urn:oasis:names:tc:SAML:2.0:assertion":ConditionAbstractType.
struct ns8__ProxyRestrictionType
{
/// INHERITED FROM ns8__ConditionAbstractType:
//  END OF INHERITED FROM ns8__ConditionAbstractType
/// Size of the dynamic array of char*  is 0..unbounded
   $int                                  __sizeAudience                 0;
/// Pointer to array char*  of length 0..unbounded
    char*                               *Audience                       0;
/// Attribute Count of type xs:nonNegativeInteger.
   @unsigned int*                        Count                          0;	///< Optional attribute.
};

/// "urn:oasis:names:tc:SAML:2.0:assertion":AuthnStatementType is a complexType with complexContent extension of "urn:oasis:names:tc:SAML:2.0:assertion":StatementAbstractType.
struct ns8__AuthnStatementType
{
/// INHERITED FROM ns8__StatementAbstractType:
//  END OF INHERITED FROM ns8__StatementAbstractType
/// Element reference "urn:oasis:names:tc:SAML:2.0:assertion":SubjectLocality.
    struct ns8__SubjectLocalityType*     SubjectLocality                0;	///< Optional element.
/// Element reference "urn:oasis:names:tc:SAML:2.0:assertion":AuthnContext.
    struct ns8__AuthnContextType*        AuthnContext                   1;	///< Required element.
/// Attribute AuthnInstant of type xs:dateTime.
   @time_t                               AuthnInstant                   1;	///< Required attribute.
/// Attribute SessionIndex of type xs:string.
   @char*                                SessionIndex                   0;	///< Optional attribute.
/// Attribute SessionNotOnOrAfter of type xs:dateTime.
   @time_t*                              SessionNotOnOrAfter            0;	///< Optional attribute.
};

/// "urn:oasis:names:tc:SAML:2.0:assertion":AuthzDecisionStatementType is a complexType with complexContent extension of "urn:oasis:names:tc:SAML:2.0:assertion":StatementAbstractType.
struct ns8__AuthzDecisionStatementType
{
/// INHERITED FROM ns8__StatementAbstractType:
//  END OF INHERITED FROM ns8__StatementAbstractType
/// Size of the dynamic array of struct ns8__ActionType* is 1..unbounded
   $int                                  __sizeAction                   1;
/// Pointer to array struct ns8__ActionType* of length 1..unbounded
    struct ns8__ActionType*             *Action                         1;
/// Element reference "urn:oasis:names:tc:SAML:2.0:assertion":Evidence.
    struct ns8__EvidenceType*            Evidence                       0;	///< Optional element.
/// Attribute Resource of type xs:anyURI.
   @char*                                Resource                       1;	///< Required attribute.
/// Attribute Decision of type "urn:oasis:names:tc:SAML:2.0:assertion":DecisionType.
   @enum ns8__DecisionType               Decision                       1;	///< Required attribute.
};

/// "urn:oasis:names:tc:SAML:2.0:assertion":ActionType is a complexType with simpleContent.
struct ns8__ActionType
{
/// __item wraps 'xs:string' simpleContent.
    char*                                __item                        ;
/// Attribute Namespace of type xs:anyURI.
   @char*                                Namespace                      1;	///< Required attribute.
};

/// "urn:oasis:names:tc:SAML:2.0:assertion":AttributeStatementType is a complexType with complexContent extension of "urn:oasis:names:tc:SAML:2.0:assertion":StatementAbstractType.
struct ns8__AttributeStatementType
{
/// INHERITED FROM ns8__StatementAbstractType:
//  END OF INHERITED FROM ns8__StatementAbstractType
/// CHOICE OF ELEMENTS <xs:choice maxOccurs="unbounded">
   $int                                  __size_AttributeStatementType  0;
    struct __ns8__union_AttributeStatementType
    {
   $int                                  __union_AttributeStatementType;	///< Union _ns8__union_AttributeStatementType selector: set to SOAP_UNION__ns8__union_AttributeStatementType_<fieldname>
/// Union for choice in type ns8__AttributeStatementType
    union _ns8__union_AttributeStatementType
    {
/// Element reference "urn:oasis:names:tc:SAML:2.0:assertion":Attribute.
    struct ns8__AttributeType*           Attribute                      1;	///< Required element.
/// Element reference "urn:oasis:names:tc:SAML:2.0:assertion":EncryptedAttribute.
    struct ns8__EncryptedElementType*    EncryptedAttribute             1;	///< Required element.
    }                                    union_AttributeStatementType  ;
    }                                   *__union_AttributeStatementType;
//  END OF CHOICE
};

/// "urn:oasis:names:tc:SAML:2.0:assertion":KeyInfoConfirmationDataType is a complexType with complexContent restriction of "urn:oasis:names:tc:SAML:2.0:assertion":SubjectConfirmationDataType.
struct ns8__KeyInfoConfirmationDataType
{
/// Imported element reference "http://www.w3.org/2000/09/xmldsig#":KeyInfo.
    _ds__KeyInfo                         ds__KeyInfo                    1;
/// Attribute NotBefore of type xs:dateTime.
   @time_t*                              NotBefore                      0;	///< Optional attribute.
/// Attribute NotOnOrAfter of type xs:dateTime.
   @time_t*                              NotOnOrAfter                   0;	///< Optional attribute.
/// Attribute Recipient of type xs:anyURI.
   @char*                                Recipient                      0;	///< Optional attribute.
/// Attribute InResponseTo of type xs:NCName.
   @char*                                InResponseTo                   0;	///< Optional attribute.
/// Attribute Address of type xs:string.
   @char*                                Address                        0;	///< Optional attribute.
/// <anyAttribute namespace="##other">
/// TODO: Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
   @_XML                                 __anyAttribute                ;	///< A placeholder that has no effect: please see comment.
};

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://oscars.es.net/OSCARS/06                                           *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://oscars.es.net/OSCARS/06":createReservation of type "http://oscars.es.net/OSCARS/06":resCreateContent.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://oscars.es.net/OSCARS/06":createReservationResponse of type "http://oscars.es.net/OSCARS/06":createReply.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://oscars.es.net/OSCARS/06":listReservations of type "http://oscars.es.net/OSCARS/06":listRequest.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://oscars.es.net/OSCARS/06":listReservationsResponse of type "http://oscars.es.net/OSCARS/06":listReply.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://oscars.es.net/OSCARS/06":cancelReservation of type "http://oscars.es.net/OSCARS/06":cancelResContent.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://oscars.es.net/OSCARS/06":cancelReservationResponse of type "http://oscars.es.net/OSCARS/06":cancelResReply.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://oscars.es.net/OSCARS/06":modifyReservation of type "http://oscars.es.net/OSCARS/06":modifyResContent.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://oscars.es.net/OSCARS/06":modifyReservationResponse of type "http://oscars.es.net/OSCARS/06":modifyResReply.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://oscars.es.net/OSCARS/06":queryReservation of type "http://oscars.es.net/OSCARS/06":queryResContent.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://oscars.es.net/OSCARS/06":queryReservationResponse of type "http://oscars.es.net/OSCARS/06":queryResReply.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://oscars.es.net/OSCARS/06":getNetworkTopology of type "http://oscars.es.net/OSCARS/06":getTopologyContent.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://oscars.es.net/OSCARS/06":getNetworkTopologyResponse of type "http://oscars.es.net/OSCARS/06":getTopologyResponseContent.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://oscars.es.net/OSCARS/06":createPath of type "http://oscars.es.net/OSCARS/06":createPathContent.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://oscars.es.net/OSCARS/06":createPathResponse of type "http://oscars.es.net/OSCARS/06":createPathResponseContent.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://oscars.es.net/OSCARS/06":refreshPath of type "http://oscars.es.net/OSCARS/06":refreshPathContent.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://oscars.es.net/OSCARS/06":refreshPathResponse of type "http://oscars.es.net/OSCARS/06":refreshPathResponseContent.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://oscars.es.net/OSCARS/06":teardownPath of type "http://oscars.es.net/OSCARS/06":teardownPathContent.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://oscars.es.net/OSCARS/06":teardownPathResponse of type "http://oscars.es.net/OSCARS/06":teardownPathResponseContent.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://oscars.es.net/OSCARS/06":event of type "http://oscars.es.net/OSCARS/06":eventContent.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://oscars.es.net/OSCARS/06":interDomainEvent of type "http://oscars.es.net/OSCARS/06":interDomainEventContent.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://oscars.es.net/OSCARS/06":subscriptionId of type xs:string.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://oscars.es.net/OSCARS/06":publisherRegistrationId of type xs:string.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://oscars.es.net/OSCARS/06":reservationResource of type "http://oscars.es.net/OSCARS/06":reservationResourceType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://oscars.es.net/OSCARS/06                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://oscars.es.net/OSCARS/common                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://oscars.es.net/OSCARS/common                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicExpression of type "http://docs.oasis-open.org/wsn/b-2":TopicExpressionType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":FixedTopicSet of type xs:boolean.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialect of type xs:anyURI.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":ConsumerReference of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":Filter of type "http://docs.oasis-open.org/wsn/b-2":FilterType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscriptionPolicy of type "http://docs.oasis-open.org/wsn/b-2":SubscriptionPolicyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":CreationTime of type xs:dateTime.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscriptionReference of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":Topic of type "http://docs.oasis-open.org/wsn/b-2":TopicExpressionType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":ProducerReference of type "http://www.w3.org/2005/08/addressing":EndpointReferenceType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":NotificationMessage of type "http://docs.oasis-open.org/wsn/b-2":NotificationMessageHolderType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":CurrentTime of type xs:dateTime.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":TerminationTime of type xs:dateTime.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":ProducerProperties of type "http://docs.oasis-open.org/wsn/b-2":QueryExpressionType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":MessageContent of type "http://docs.oasis-open.org/wsn/b-2":QueryExpressionType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFault of type "http://docs.oasis-open.org/wsn/b-2":SubscribeCreationFailedFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFault of type "http://docs.oasis-open.org/wsn/b-2":InvalidFilterFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFault of type "http://docs.oasis-open.org/wsn/b-2":TopicExpressionDialectUnknownFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFault of type "http://docs.oasis-open.org/wsn/b-2":InvalidTopicExpressionFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFault of type "http://docs.oasis-open.org/wsn/b-2":TopicNotSupportedFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFault of type "http://docs.oasis-open.org/wsn/b-2":MultipleTopicsSpecifiedFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFault of type "http://docs.oasis-open.org/wsn/b-2":InvalidProducerPropertiesExpressionFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFault of type "http://docs.oasis-open.org/wsn/b-2":InvalidMessageContentExpressionFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFault of type "http://docs.oasis-open.org/wsn/b-2":UnrecognizedPolicyRequestFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFault of type "http://docs.oasis-open.org/wsn/b-2":UnsupportedPolicyRequestFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFault of type "http://docs.oasis-open.org/wsn/b-2":NotifyMessageNotSupportedFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFault of type "http://docs.oasis-open.org/wsn/b-2":UnacceptableInitialTerminationTimeFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFault of type "http://docs.oasis-open.org/wsn/b-2":NoCurrentMessageOnTopicFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFault of type "http://docs.oasis-open.org/wsn/b-2":UnableToGetMessagesFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFault of type "http://docs.oasis-open.org/wsn/b-2":UnableToDestroyPullPointFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFault of type "http://docs.oasis-open.org/wsn/b-2":UnableToCreatePullPointFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFault of type "http://docs.oasis-open.org/wsn/b-2":UnacceptableTerminationTimeFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFault of type "http://docs.oasis-open.org/wsn/b-2":UnableToDestroySubscriptionFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":PauseFailedFault of type "http://docs.oasis-open.org/wsn/b-2":PauseFailedFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsn/b-2":ResumeFailedFault of type "http://docs.oasis-open.org/wsn/b-2":ResumeFailedFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://docs.oasis-open.org/wsn/b-2                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://docs.oasis-open.org/wsrf/r-2                                      *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFault of type "http://docs.oasis-open.org/wsrf/r-2":ResourceUnknownFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://docs.oasis-open.org/wsrf/r-2":ResourceUnavailableFault of type "http://docs.oasis-open.org/wsrf/r-2":ResourceUnavailableFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://docs.oasis-open.org/wsrf/r-2                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://ogf.org/schema/network/topology/ctrlPlane/20080828/               *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":topology of type "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":CtrlPlaneTopologyContent.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":domain of type "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":CtrlPlaneDomainContent.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":node of type "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":CtrlPlaneNodeContent.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":port of type "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":CtrlPlanePortContent.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":link of type "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":CtrlPlaneLinkContent.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":path of type "http://ogf.org/schema/network/topology/ctrlPlane/20080828/":CtrlPlanePathContent.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://ogf.org/schema/network/topology/ctrlPlane/20080828/               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://oscars.es.net/OSCARS/authParams                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://oscars.es.net/OSCARS/authParams                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://docs.oasis-open.org/wsrf/bf-2":BaseFault of type "http://docs.oasis-open.org/wsrf/bf-2":BaseFaultType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://docs.oasis-open.org/wsrf/bf-2                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   urn:oasis:names:tc:SAML:2.0:assertion                                    *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "urn:oasis:names:tc:SAML:2.0:assertion":BaseID of type "urn:oasis:names:tc:SAML:2.0:assertion":BaseIDAbstractType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "urn:oasis:names:tc:SAML:2.0:assertion":NameID of type "urn:oasis:names:tc:SAML:2.0:assertion":NameIDType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "urn:oasis:names:tc:SAML:2.0:assertion":EncryptedID of type "urn:oasis:names:tc:SAML:2.0:assertion":EncryptedElementType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "urn:oasis:names:tc:SAML:2.0:assertion":Issuer of type "urn:oasis:names:tc:SAML:2.0:assertion":NameIDType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "urn:oasis:names:tc:SAML:2.0:assertion":AssertionIDRef of type xs:NCName.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "urn:oasis:names:tc:SAML:2.0:assertion":AssertionURIRef of type xs:anyURI.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "urn:oasis:names:tc:SAML:2.0:assertion":Assertion of type "urn:oasis:names:tc:SAML:2.0:assertion":AssertionType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "urn:oasis:names:tc:SAML:2.0:assertion":Subject of type "urn:oasis:names:tc:SAML:2.0:assertion":SubjectType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "urn:oasis:names:tc:SAML:2.0:assertion":SubjectConfirmation of type "urn:oasis:names:tc:SAML:2.0:assertion":SubjectConfirmationType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "urn:oasis:names:tc:SAML:2.0:assertion":SubjectConfirmationData of type "urn:oasis:names:tc:SAML:2.0:assertion":SubjectConfirmationDataType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "urn:oasis:names:tc:SAML:2.0:assertion":Conditions of type "urn:oasis:names:tc:SAML:2.0:assertion":ConditionsType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "urn:oasis:names:tc:SAML:2.0:assertion":Condition of type "urn:oasis:names:tc:SAML:2.0:assertion":ConditionAbstractType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "urn:oasis:names:tc:SAML:2.0:assertion":AudienceRestriction of type "urn:oasis:names:tc:SAML:2.0:assertion":AudienceRestrictionType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "urn:oasis:names:tc:SAML:2.0:assertion":Audience of type xs:anyURI.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "urn:oasis:names:tc:SAML:2.0:assertion":OneTimeUse of type "urn:oasis:names:tc:SAML:2.0:assertion":OneTimeUseType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "urn:oasis:names:tc:SAML:2.0:assertion":ProxyRestriction of type "urn:oasis:names:tc:SAML:2.0:assertion":ProxyRestrictionType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "urn:oasis:names:tc:SAML:2.0:assertion":Advice of type "urn:oasis:names:tc:SAML:2.0:assertion":AdviceType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "urn:oasis:names:tc:SAML:2.0:assertion":EncryptedAssertion of type "urn:oasis:names:tc:SAML:2.0:assertion":EncryptedElementType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "urn:oasis:names:tc:SAML:2.0:assertion":Statement of type "urn:oasis:names:tc:SAML:2.0:assertion":StatementAbstractType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "urn:oasis:names:tc:SAML:2.0:assertion":AuthnStatement of type "urn:oasis:names:tc:SAML:2.0:assertion":AuthnStatementType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "urn:oasis:names:tc:SAML:2.0:assertion":SubjectLocality of type "urn:oasis:names:tc:SAML:2.0:assertion":SubjectLocalityType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "urn:oasis:names:tc:SAML:2.0:assertion":AuthnContext of type "urn:oasis:names:tc:SAML:2.0:assertion":AuthnContextType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "urn:oasis:names:tc:SAML:2.0:assertion":AuthnContextClassRef of type xs:anyURI.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "urn:oasis:names:tc:SAML:2.0:assertion":AuthnContextDeclRef of type xs:anyURI.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "urn:oasis:names:tc:SAML:2.0:assertion":AuthnContextDecl of type xs:anyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "urn:oasis:names:tc:SAML:2.0:assertion":AuthenticatingAuthority of type xs:anyURI.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "urn:oasis:names:tc:SAML:2.0:assertion":AuthzDecisionStatement of type "urn:oasis:names:tc:SAML:2.0:assertion":AuthzDecisionStatementType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "urn:oasis:names:tc:SAML:2.0:assertion":Action of type "urn:oasis:names:tc:SAML:2.0:assertion":ActionType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "urn:oasis:names:tc:SAML:2.0:assertion":Evidence of type "urn:oasis:names:tc:SAML:2.0:assertion":EvidenceType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "urn:oasis:names:tc:SAML:2.0:assertion":AttributeStatement of type "urn:oasis:names:tc:SAML:2.0:assertion":AttributeStatementType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "urn:oasis:names:tc:SAML:2.0:assertion":Attribute of type "urn:oasis:names:tc:SAML:2.0:assertion":AttributeType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "urn:oasis:names:tc:SAML:2.0:assertion":AttributeValue of type xs:anyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "urn:oasis:names:tc:SAML:2.0:assertion":EncryptedAttribute of type "urn:oasis:names:tc:SAML:2.0:assertion":EncryptedElementType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   urn:oasis:names:tc:SAML:2.0:assertion                                    *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/


//gsoap ns1  service name:	OSCARSSOAP 
//gsoap ns1  service type:	OSCARS 
//gsoap ns1  service port:	 
//gsoap ns1  service namespace:	http://oscars.es.net/OSCARS/06 
//gsoap ns1  service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage OSCARS Definitions

@section OSCARS_documentation Documentation
        This is WSDL for the OSCARS public reservation interface. These
        messages must be signed using the following WS-secuirty
        standards. The message is time stamped and includes the X.509
        certificate of the signing entity. The timestamp, certificate
        and message body are all signed. DRAFT V1.0 Nov 2006
    

@section OSCARS_bindings Service Bindings

  - @ref OSCARSSOAP

@section OSCARS_more More Information

  - @ref page_notes "Usage Notes"

  - @ref page_XMLDataBinding "XML Data Binding"

  - @ref SOAP_ENV__Header "SOAP Header Content" (when applicable)

  - @ref SOAP_ENV__Detail "SOAP Fault Detail Content" (when applicable)


*/

/**

@page OSCARSSOAP Binding "OSCARSSOAP"

@section OSCARSSOAP_operations Operations of Binding  "OSCARSSOAP"

  - @ref __ns1__createReservation

  - @ref __ns1__queryReservation

  - @ref __ns1__listReservations

  - @ref __ns1__cancelReservation

  - @ref __ns1__modifyReservation

  - @ref __ns1__getNetworkTopology

  - @ref __ns1__createPath

  - @ref __ns1__refreshPath

  - @ref __ns1__teardownPath

  - @ref __ns1__interDomainEvent

@section OSCARSSOAP_ports Endpoints of Binding  "OSCARSSOAP"

  - 

Note: use wsdl2h option -N to change the service binding prefix name

*/

/******************************************************************************\
 *                                                                            *
 * SOAP Fault Detail                                                          *
 *                                                                            *
\******************************************************************************/

/**

The SOAP Fault is part of the gSOAP context and its content is accessed
through the soap.fault->detail variable (SOAP 1.1) or the
soap.fault->SOAP_ENV__Detail variable (SOAP 1.2).
Use option -j to omit.

*/
struct SOAP_ENV__Detail
{
// xsd:anyAttribute omitted: to parse attribute content of the Detail element into DOM anyAttribute, use wsdl2h option -d.
    _XML                                 __any                         ;	///< Catch any element content in XML string.
    struct _ns2__OSCARSFault*            ns2__OSCARSFault              ;
///< SOAP Fault element ""http://oscars.es.net/OSCARS/common":OSCARSFault" part "fault"
    int                                  __type                        ;	///< set to SOAP_TYPE_X for a serializable type X
    void                                *fault                         ;	///< points to serializable object X or NULL
};

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   OSCARSSOAP                                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__createReservation                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__createReservation" of service binding "OSCARSSOAP"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://oscars.es.net/OSCARS/createReservation"

  - SOAP Fault: "http://oscars.es.net/OSCARS/common":OSCARSFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__createReservation(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct ns1__resCreateContent*       ns1__createReservation,
    // response parameters:
    struct ns1__createReply*            ns1__createReservationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__createReservation(
    struct soap *soap,
    // request parameters:
    struct ns1__resCreateContent*       ns1__createReservation,
    // response parameters:
    struct ns1__createReply*            ns1__createReservationResponse
  );
@endcode

*/

//gsoap ns1  service method-style:	createReservation document
//gsoap ns1  service method-encoding:	createReservation literal
//gsoap ns1  service method-action:	createReservation http://oscars.es.net/OSCARS/createReservation
//gsoap ns1  service method-fault:	createReservation ns2__OSCARSFault
int __ns1__createReservation(
    struct ns1__resCreateContent*       ns1__createReservation,	///< Request parameter
    struct ns1__createReply*            ns1__createReservationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__queryReservation                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__queryReservation" of service binding "OSCARSSOAP"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://oscars.es.net/OSCARS/queryReservation"

  - SOAP Fault: "http://oscars.es.net/OSCARS/common":OSCARSFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__queryReservation(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct ns1__queryResContent*        ns1__queryReservation,
    // response parameters:
    struct ns1__queryResReply*          ns1__queryReservationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__queryReservation(
    struct soap *soap,
    // request parameters:
    struct ns1__queryResContent*        ns1__queryReservation,
    // response parameters:
    struct ns1__queryResReply*          ns1__queryReservationResponse
  );
@endcode

*/

//gsoap ns1  service method-style:	queryReservation document
//gsoap ns1  service method-encoding:	queryReservation literal
//gsoap ns1  service method-action:	queryReservation http://oscars.es.net/OSCARS/queryReservation
//gsoap ns1  service method-fault:	queryReservation ns2__OSCARSFault
int __ns1__queryReservation(
    struct ns1__queryResContent*        ns1__queryReservation,	///< Request parameter
    struct ns1__queryResReply*          ns1__queryReservationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__listReservations                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__listReservations" of service binding "OSCARSSOAP"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://oscars.es.net/OSCARS/listReservations"

  - SOAP Fault: "http://oscars.es.net/OSCARS/common":OSCARSFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__listReservations(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct ns1__listRequest*            ns1__listReservations,
    // response parameters:
    struct ns1__listReply*              ns1__listReservationsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__listReservations(
    struct soap *soap,
    // request parameters:
    struct ns1__listRequest*            ns1__listReservations,
    // response parameters:
    struct ns1__listReply*              ns1__listReservationsResponse
  );
@endcode

*/

//gsoap ns1  service method-style:	listReservations document
//gsoap ns1  service method-encoding:	listReservations literal
//gsoap ns1  service method-action:	listReservations http://oscars.es.net/OSCARS/listReservations
//gsoap ns1  service method-fault:	listReservations ns2__OSCARSFault
int __ns1__listReservations(
    struct ns1__listRequest*            ns1__listReservations,	///< Request parameter
    struct ns1__listReply*              ns1__listReservationsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__cancelReservation                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__cancelReservation" of service binding "OSCARSSOAP"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://oscars.es.net/OSCARS/cancelReservation"

  - SOAP Fault: "http://oscars.es.net/OSCARS/common":OSCARSFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__cancelReservation(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct ns1__cancelResContent*       ns1__cancelReservation,
    // response parameters:
    struct ns1__cancelResReply*         ns1__cancelReservationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__cancelReservation(
    struct soap *soap,
    // request parameters:
    struct ns1__cancelResContent*       ns1__cancelReservation,
    // response parameters:
    struct ns1__cancelResReply*         ns1__cancelReservationResponse
  );
@endcode

*/

//gsoap ns1  service method-style:	cancelReservation document
//gsoap ns1  service method-encoding:	cancelReservation literal
//gsoap ns1  service method-action:	cancelReservation http://oscars.es.net/OSCARS/cancelReservation
//gsoap ns1  service method-fault:	cancelReservation ns2__OSCARSFault
int __ns1__cancelReservation(
    struct ns1__cancelResContent*       ns1__cancelReservation,	///< Request parameter
    struct ns1__cancelResReply*         ns1__cancelReservationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__modifyReservation                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__modifyReservation" of service binding "OSCARSSOAP"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://oscars.es.net/OSCARS/modifyReservation"

  - SOAP Fault: "http://oscars.es.net/OSCARS/common":OSCARSFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__modifyReservation(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct ns1__modifyResContent*       ns1__modifyReservation,
    // response parameters:
    struct ns1__modifyResReply*         ns1__modifyReservationResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__modifyReservation(
    struct soap *soap,
    // request parameters:
    struct ns1__modifyResContent*       ns1__modifyReservation,
    // response parameters:
    struct ns1__modifyResReply*         ns1__modifyReservationResponse
  );
@endcode

*/

//gsoap ns1  service method-style:	modifyReservation document
//gsoap ns1  service method-encoding:	modifyReservation literal
//gsoap ns1  service method-action:	modifyReservation http://oscars.es.net/OSCARS/modifyReservation
//gsoap ns1  service method-fault:	modifyReservation ns2__OSCARSFault
int __ns1__modifyReservation(
    struct ns1__modifyResContent*       ns1__modifyReservation,	///< Request parameter
    struct ns1__modifyResReply*         ns1__modifyReservationResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__getNetworkTopology                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__getNetworkTopology" of service binding "OSCARSSOAP"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://oscars.es.net/OSCARS/getNetworkTopology"

  - SOAP Fault: "http://oscars.es.net/OSCARS/common":OSCARSFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__getNetworkTopology(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct ns1__getTopologyContent*     ns1__getNetworkTopology,
    // response parameters:
    struct ns1__getTopologyResponseContent* ns1__getNetworkTopologyResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__getNetworkTopology(
    struct soap *soap,
    // request parameters:
    struct ns1__getTopologyContent*     ns1__getNetworkTopology,
    // response parameters:
    struct ns1__getTopologyResponseContent* ns1__getNetworkTopologyResponse
  );
@endcode

*/

//gsoap ns1  service method-style:	getNetworkTopology document
//gsoap ns1  service method-encoding:	getNetworkTopology literal
//gsoap ns1  service method-action:	getNetworkTopology http://oscars.es.net/OSCARS/getNetworkTopology
//gsoap ns1  service method-fault:	getNetworkTopology ns2__OSCARSFault
int __ns1__getNetworkTopology(
    struct ns1__getTopologyContent*     ns1__getNetworkTopology,	///< Request parameter
    struct ns1__getTopologyResponseContent* ns1__getNetworkTopologyResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__createPath                                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__createPath" of service binding "OSCARSSOAP"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://oscars.es.net/OSCARS/createPath"

  - SOAP Fault: "http://oscars.es.net/OSCARS/common":OSCARSFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__createPath(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct ns1__createPathContent*      ns1__createPath,
    // response parameters:
    struct ns1__createPathResponseContent* ns1__createPathResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__createPath(
    struct soap *soap,
    // request parameters:
    struct ns1__createPathContent*      ns1__createPath,
    // response parameters:
    struct ns1__createPathResponseContent* ns1__createPathResponse
  );
@endcode

*/

//gsoap ns1  service method-style:	createPath document
//gsoap ns1  service method-encoding:	createPath literal
//gsoap ns1  service method-action:	createPath http://oscars.es.net/OSCARS/createPath
//gsoap ns1  service method-fault:	createPath ns2__OSCARSFault
int __ns1__createPath(
    struct ns1__createPathContent*      ns1__createPath,	///< Request parameter
    struct ns1__createPathResponseContent* ns1__createPathResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__refreshPath                                                       *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__refreshPath" of service binding "OSCARSSOAP"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://oscars.es.net/OSCARS/refreshPath"

  - SOAP Fault: "http://oscars.es.net/OSCARS/common":OSCARSFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__refreshPath(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct ns1__refreshPathContent*     ns1__refreshPath,
    // response parameters:
    struct ns1__refreshPathResponseContent* ns1__refreshPathResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__refreshPath(
    struct soap *soap,
    // request parameters:
    struct ns1__refreshPathContent*     ns1__refreshPath,
    // response parameters:
    struct ns1__refreshPathResponseContent* ns1__refreshPathResponse
  );
@endcode

*/

//gsoap ns1  service method-style:	refreshPath document
//gsoap ns1  service method-encoding:	refreshPath literal
//gsoap ns1  service method-action:	refreshPath http://oscars.es.net/OSCARS/refreshPath
//gsoap ns1  service method-fault:	refreshPath ns2__OSCARSFault
int __ns1__refreshPath(
    struct ns1__refreshPathContent*     ns1__refreshPath,	///< Request parameter
    struct ns1__refreshPathResponseContent* ns1__refreshPathResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__teardownPath                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__teardownPath" of service binding "OSCARSSOAP"

/**

Operation details:


  - SOAP document/literal style messaging

  - SOAP action="http://oscars.es.net/OSCARS/teardownPath"

  - SOAP Fault: "http://oscars.es.net/OSCARS/common":OSCARSFault (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__teardownPath(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct ns1__teardownPathContent*    ns1__teardownPath,
    // response parameters:
    struct ns1__teardownPathResponseContent* ns1__teardownPathResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__teardownPath(
    struct soap *soap,
    // request parameters:
    struct ns1__teardownPathContent*    ns1__teardownPath,
    // response parameters:
    struct ns1__teardownPathResponseContent* ns1__teardownPathResponse
  );
@endcode

*/

//gsoap ns1  service method-style:	teardownPath document
//gsoap ns1  service method-encoding:	teardownPath literal
//gsoap ns1  service method-action:	teardownPath http://oscars.es.net/OSCARS/teardownPath
//gsoap ns1  service method-fault:	teardownPath ns2__OSCARSFault
int __ns1__teardownPath(
    struct ns1__teardownPathContent*    ns1__teardownPath,	///< Request parameter
    struct ns1__teardownPathResponseContent* ns1__teardownPathResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__interDomainEvent                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__interDomainEvent" of service binding "OSCARSSOAP"

/**

Operation details:


  - One-way message

  - SOAP document/literal style messaging

  - SOAP action="http://oscars.es.net/OSCARS/interDomainEvent"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__interDomainEvent(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct ns1__interDomainEventContent* ns1__interDomainEvent,
    // response parameters:
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__interDomainEvent(
    struct soap *soap,
    // request parameters:
    struct ns1__interDomainEventContent* ns1__interDomainEvent,
    // response parameters:
  );
@endcode

*/

//gsoap ns1  service method-style:	interDomainEvent document
//gsoap ns1  service method-encoding:	interDomainEvent literal
//gsoap ns1  service method-action:	interDomainEvent http://oscars.es.net/OSCARS/interDomainEvent
int __ns1__interDomainEvent(
    struct ns1__interDomainEventContent* ns1__interDomainEvent,	///< Request parameter
    void	///< One-way message: no response parameter
);

/******************************************************************************\
 *                                                                            *
 * XML Data Binding                                                           *
 *                                                                            *
\******************************************************************************/


/**

@page page_XMLDataBinding XML Data Binding

SOAP/XML services use data bindings contractually bound by WSDL and auto-
generated by wsdl2h and soapcpp2 (see Service Bindings). Plain data bindings
are adopted from XML schemas as part of the WSDL types section or when running
wsdl2h on a set of schemas to produce non-SOAP-based XML data bindings.

The following readers and writers are C/C++ data type (de)serializers auto-
generated by wsdl2h and soapcpp2. Run soapcpp2 on this file to generate the
(de)serialization code, which is stored in soapC.c[pp]. Include "soapH.h" in
your code to import these data type and function declarations. Only use the
soapcpp2-generated files in your project build. Do not include the wsdl2h-
generated .h file in your code.

XML content can be retrieved from:
  - a file descriptor, using soap->recvfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->is = ...
  - a buffer, using the soap->frecv() callback

XML content can be stored to:
  - a file descriptor, using soap->sendfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->os = ...
  - a buffer, using the soap->fsend() callback


@section ns1 Top-level root elements of schema "http://oscars.es.net/OSCARS/06"

  - <ns1:createReservation> (use wsdl2h option -g to auto-generate)

  - <ns1:createReservationResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:listReservations> (use wsdl2h option -g to auto-generate)

  - <ns1:listReservationsResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:cancelReservation> (use wsdl2h option -g to auto-generate)

  - <ns1:cancelReservationResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:modifyReservation> (use wsdl2h option -g to auto-generate)

  - <ns1:modifyReservationResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:queryReservation> (use wsdl2h option -g to auto-generate)

  - <ns1:queryReservationResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:getNetworkTopology> (use wsdl2h option -g to auto-generate)

  - <ns1:getNetworkTopologyResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:createPath> (use wsdl2h option -g to auto-generate)

  - <ns1:createPathResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:refreshPath> (use wsdl2h option -g to auto-generate)

  - <ns1:refreshPathResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:teardownPath> (use wsdl2h option -g to auto-generate)

  - <ns1:teardownPathResponse> (use wsdl2h option -g to auto-generate)

  - <ns1:event> (use wsdl2h option -g to auto-generate)

  - <ns1:interDomainEvent> (use wsdl2h option -g to auto-generate)

  - <ns1:subscriptionId> (use wsdl2h option -g to auto-generate)

  - <ns1:publisherRegistrationId> (use wsdl2h option -g to auto-generate)

  - <ns1:reservationResource> (use wsdl2h option -g to auto-generate)

@section ns2 Top-level root elements of schema "http://oscars.es.net/OSCARS/common"

  - <ns2:OSCARSFault> @ref _ns2__OSCARSFault
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__OSCARSFault(struct soap*, struct _ns2__OSCARSFault*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__OSCARSFault(struct soap*, struct _ns2__OSCARSFault*);
    @endcode

@section ns3 Top-level root elements of schema "http://docs.oasis-open.org/wsn/b-2"

  - <ns3:TopicExpression> (use wsdl2h option -g to auto-generate)

  - <ns3:FixedTopicSet> (use wsdl2h option -g to auto-generate)

  - <ns3:TopicExpressionDialect> (use wsdl2h option -g to auto-generate)

  - <ns3:ConsumerReference> (use wsdl2h option -g to auto-generate)

  - <ns3:Filter> (use wsdl2h option -g to auto-generate)

  - <ns3:SubscriptionPolicy> (use wsdl2h option -g to auto-generate)

  - <ns3:CreationTime> (use wsdl2h option -g to auto-generate)

  - <ns3:SubscriptionManagerRP> @ref _ns3__SubscriptionManagerRP
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns3__SubscriptionManagerRP(struct soap*, struct _ns3__SubscriptionManagerRP*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns3__SubscriptionManagerRP(struct soap*, struct _ns3__SubscriptionManagerRP*);
    @endcode

  - <ns3:SubscriptionReference> (use wsdl2h option -g to auto-generate)

  - <ns3:Topic> (use wsdl2h option -g to auto-generate)

  - <ns3:ProducerReference> (use wsdl2h option -g to auto-generate)

  - <ns3:NotificationMessage> (use wsdl2h option -g to auto-generate)

  - <ns3:Notify> @ref _ns3__Notify
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns3__Notify(struct soap*, struct _ns3__Notify*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns3__Notify(struct soap*, struct _ns3__Notify*);
    @endcode

  - <ns3:CurrentTime> (use wsdl2h option -g to auto-generate)

  - <ns3:TerminationTime> (use wsdl2h option -g to auto-generate)

  - <ns3:ProducerProperties> (use wsdl2h option -g to auto-generate)

  - <ns3:MessageContent> (use wsdl2h option -g to auto-generate)

  - <ns3:UseRaw> @ref _ns3__UseRaw
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns3__UseRaw(struct soap*, struct _ns3__UseRaw*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns3__UseRaw(struct soap*, struct _ns3__UseRaw*);
    @endcode

  - <ns3:Subscribe> @ref _ns3__Subscribe
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns3__Subscribe(struct soap*, struct _ns3__Subscribe*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns3__Subscribe(struct soap*, struct _ns3__Subscribe*);
    @endcode

  - <ns3:SubscribeResponse> @ref _ns3__SubscribeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns3__SubscribeResponse(struct soap*, struct _ns3__SubscribeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns3__SubscribeResponse(struct soap*, struct _ns3__SubscribeResponse*);
    @endcode

  - <ns3:GetCurrentMessage> @ref _ns3__GetCurrentMessage
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns3__GetCurrentMessage(struct soap*, struct _ns3__GetCurrentMessage*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns3__GetCurrentMessage(struct soap*, struct _ns3__GetCurrentMessage*);
    @endcode

  - <ns3:GetCurrentMessageResponse> @ref _ns3__GetCurrentMessageResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns3__GetCurrentMessageResponse(struct soap*, struct _ns3__GetCurrentMessageResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns3__GetCurrentMessageResponse(struct soap*, struct _ns3__GetCurrentMessageResponse*);
    @endcode

  - <ns3:SubscribeCreationFailedFault> (use wsdl2h option -g to auto-generate)

  - <ns3:InvalidFilterFault> (use wsdl2h option -g to auto-generate)

  - <ns3:TopicExpressionDialectUnknownFault> (use wsdl2h option -g to auto-generate)

  - <ns3:InvalidTopicExpressionFault> (use wsdl2h option -g to auto-generate)

  - <ns3:TopicNotSupportedFault> (use wsdl2h option -g to auto-generate)

  - <ns3:MultipleTopicsSpecifiedFault> (use wsdl2h option -g to auto-generate)

  - <ns3:InvalidProducerPropertiesExpressionFault> (use wsdl2h option -g to auto-generate)

  - <ns3:InvalidMessageContentExpressionFault> (use wsdl2h option -g to auto-generate)

  - <ns3:UnrecognizedPolicyRequestFault> (use wsdl2h option -g to auto-generate)

  - <ns3:UnsupportedPolicyRequestFault> (use wsdl2h option -g to auto-generate)

  - <ns3:NotifyMessageNotSupportedFault> (use wsdl2h option -g to auto-generate)

  - <ns3:UnacceptableInitialTerminationTimeFault> (use wsdl2h option -g to auto-generate)

  - <ns3:NoCurrentMessageOnTopicFault> (use wsdl2h option -g to auto-generate)

  - <ns3:GetMessages> @ref _ns3__GetMessages
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns3__GetMessages(struct soap*, struct _ns3__GetMessages*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns3__GetMessages(struct soap*, struct _ns3__GetMessages*);
    @endcode

  - <ns3:GetMessagesResponse> @ref _ns3__GetMessagesResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns3__GetMessagesResponse(struct soap*, struct _ns3__GetMessagesResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns3__GetMessagesResponse(struct soap*, struct _ns3__GetMessagesResponse*);
    @endcode

  - <ns3:DestroyPullPoint> @ref _ns3__DestroyPullPoint
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns3__DestroyPullPoint(struct soap*, struct _ns3__DestroyPullPoint*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns3__DestroyPullPoint(struct soap*, struct _ns3__DestroyPullPoint*);
    @endcode

  - <ns3:DestroyPullPointResponse> @ref _ns3__DestroyPullPointResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns3__DestroyPullPointResponse(struct soap*, struct _ns3__DestroyPullPointResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns3__DestroyPullPointResponse(struct soap*, struct _ns3__DestroyPullPointResponse*);
    @endcode

  - <ns3:UnableToGetMessagesFault> (use wsdl2h option -g to auto-generate)

  - <ns3:UnableToDestroyPullPointFault> (use wsdl2h option -g to auto-generate)

  - <ns3:CreatePullPoint> @ref _ns3__CreatePullPoint
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns3__CreatePullPoint(struct soap*, struct _ns3__CreatePullPoint*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns3__CreatePullPoint(struct soap*, struct _ns3__CreatePullPoint*);
    @endcode

  - <ns3:CreatePullPointResponse> @ref _ns3__CreatePullPointResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns3__CreatePullPointResponse(struct soap*, struct _ns3__CreatePullPointResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns3__CreatePullPointResponse(struct soap*, struct _ns3__CreatePullPointResponse*);
    @endcode

  - <ns3:UnableToCreatePullPointFault> (use wsdl2h option -g to auto-generate)

  - <ns3:Renew> @ref _ns3__Renew
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns3__Renew(struct soap*, struct _ns3__Renew*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns3__Renew(struct soap*, struct _ns3__Renew*);
    @endcode

  - <ns3:RenewResponse> @ref _ns3__RenewResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns3__RenewResponse(struct soap*, struct _ns3__RenewResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns3__RenewResponse(struct soap*, struct _ns3__RenewResponse*);
    @endcode

  - <ns3:UnacceptableTerminationTimeFault> (use wsdl2h option -g to auto-generate)

  - <ns3:Unsubscribe> @ref _ns3__Unsubscribe
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns3__Unsubscribe(struct soap*, struct _ns3__Unsubscribe*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns3__Unsubscribe(struct soap*, struct _ns3__Unsubscribe*);
    @endcode

  - <ns3:UnsubscribeResponse> @ref _ns3__UnsubscribeResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns3__UnsubscribeResponse(struct soap*, struct _ns3__UnsubscribeResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns3__UnsubscribeResponse(struct soap*, struct _ns3__UnsubscribeResponse*);
    @endcode

  - <ns3:UnableToDestroySubscriptionFault> (use wsdl2h option -g to auto-generate)

  - <ns3:PauseSubscription> @ref _ns3__PauseSubscription
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns3__PauseSubscription(struct soap*, struct _ns3__PauseSubscription*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns3__PauseSubscription(struct soap*, struct _ns3__PauseSubscription*);
    @endcode

  - <ns3:PauseSubscriptionResponse> @ref _ns3__PauseSubscriptionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns3__PauseSubscriptionResponse(struct soap*, struct _ns3__PauseSubscriptionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns3__PauseSubscriptionResponse(struct soap*, struct _ns3__PauseSubscriptionResponse*);
    @endcode

  - <ns3:ResumeSubscription> @ref _ns3__ResumeSubscription
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns3__ResumeSubscription(struct soap*, struct _ns3__ResumeSubscription*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns3__ResumeSubscription(struct soap*, struct _ns3__ResumeSubscription*);
    @endcode

  - <ns3:ResumeSubscriptionResponse> @ref _ns3__ResumeSubscriptionResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns3__ResumeSubscriptionResponse(struct soap*, struct _ns3__ResumeSubscriptionResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns3__ResumeSubscriptionResponse(struct soap*, struct _ns3__ResumeSubscriptionResponse*);
    @endcode

  - <ns3:PauseFailedFault> (use wsdl2h option -g to auto-generate)

  - <ns3:ResumeFailedFault> (use wsdl2h option -g to auto-generate)

@section ns4 Top-level root elements of schema "http://docs.oasis-open.org/wsrf/r-2"

  - <ns4:ResourceUnknownFault> (use wsdl2h option -g to auto-generate)

  - <ns4:ResourceUnavailableFault> (use wsdl2h option -g to auto-generate)

@section ns5 Top-level root elements of schema "http://ogf.org/schema/network/topology/ctrlPlane/20080828/"

  - <ns5:topology> (use wsdl2h option -g to auto-generate)

  - <ns5:domain> (use wsdl2h option -g to auto-generate)

  - <ns5:node> (use wsdl2h option -g to auto-generate)

  - <ns5:port> (use wsdl2h option -g to auto-generate)

  - <ns5:link> (use wsdl2h option -g to auto-generate)

  - <ns5:path> (use wsdl2h option -g to auto-generate)

@section ns6 Top-level root elements of schema "http://oscars.es.net/OSCARS/authParams"

@section ns7 Top-level root elements of schema "http://docs.oasis-open.org/wsrf/bf-2"

  - <ns7:BaseFault> (use wsdl2h option -g to auto-generate)

@section ns8 Top-level root elements of schema "urn:oasis:names:tc:SAML:2.0:assertion"

  - <ns8:BaseID> (use wsdl2h option -g to auto-generate)

  - <ns8:NameID> (use wsdl2h option -g to auto-generate)

  - <ns8:EncryptedID> (use wsdl2h option -g to auto-generate)

  - <ns8:Issuer> (use wsdl2h option -g to auto-generate)

  - <ns8:AssertionIDRef> (use wsdl2h option -g to auto-generate)

  - <ns8:AssertionURIRef> (use wsdl2h option -g to auto-generate)

  - <ns8:Assertion> (use wsdl2h option -g to auto-generate)

  - <ns8:Subject> (use wsdl2h option -g to auto-generate)

  - <ns8:SubjectConfirmation> (use wsdl2h option -g to auto-generate)

  - <ns8:SubjectConfirmationData> (use wsdl2h option -g to auto-generate)

  - <ns8:Conditions> (use wsdl2h option -g to auto-generate)

  - <ns8:Condition> (use wsdl2h option -g to auto-generate)

  - <ns8:AudienceRestriction> (use wsdl2h option -g to auto-generate)

  - <ns8:Audience> (use wsdl2h option -g to auto-generate)

  - <ns8:OneTimeUse> (use wsdl2h option -g to auto-generate)

  - <ns8:ProxyRestriction> (use wsdl2h option -g to auto-generate)

  - <ns8:Advice> (use wsdl2h option -g to auto-generate)

  - <ns8:EncryptedAssertion> (use wsdl2h option -g to auto-generate)

  - <ns8:Statement> (use wsdl2h option -g to auto-generate)

  - <ns8:AuthnStatement> (use wsdl2h option -g to auto-generate)

  - <ns8:SubjectLocality> (use wsdl2h option -g to auto-generate)

  - <ns8:AuthnContext> (use wsdl2h option -g to auto-generate)

  - <ns8:AuthnContextClassRef> (use wsdl2h option -g to auto-generate)

  - <ns8:AuthnContextDeclRef> (use wsdl2h option -g to auto-generate)

  - <ns8:AuthnContextDecl> (use wsdl2h option -g to auto-generate)

  - <ns8:AuthenticatingAuthority> (use wsdl2h option -g to auto-generate)

  - <ns8:AuthzDecisionStatement> (use wsdl2h option -g to auto-generate)

  - <ns8:Action> (use wsdl2h option -g to auto-generate)

  - <ns8:Evidence> (use wsdl2h option -g to auto-generate)

  - <ns8:AttributeStatement> (use wsdl2h option -g to auto-generate)

  - <ns8:Attribute> (use wsdl2h option -g to auto-generate)

  - <ns8:AttributeValue> (use wsdl2h option -g to auto-generate)

  - <ns8:EncryptedAttribute> (use wsdl2h option -g to auto-generate)

*/

/* End of oscars6API.h */
