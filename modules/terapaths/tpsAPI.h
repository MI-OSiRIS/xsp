/* tpsAPI.h
   Generated by wsdl2h 1.2.9l from tpsAPI.wsdl and typemap.dat
   2010-05-20 00:47:24 GMT
   Copyright (C) 2001-2007 Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL or Genivia's license for commercial use.
*/

/* NOTE:

 - Compile this file with soapcpp2 to complete the code generation process.
 - Use soapcpp2 option -I to specify paths for #import
   To build with STL, 'stlvector.h' is imported from 'import' dir in package.
 - Use wsdl2h options -c and -s to generate pure C code or C++ code without STL.
 - Use 'typemap.dat' to control schema namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Use Doxygen (www.doxygen.org) to browse this file.
 - Use wsdl2h option -l to view the software license terms.

   DO NOT include this file directly into your project.
   Include only the soapcpp2-generated headers and source code files.
*/

//gsoapopt cw

/******************************************************************************\
 *                                                                            *
 * urn:tpsAPI/wsdl                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

ns1 = "urn:tpsAPI/wsdl"
ns2 = "urn:tpsAPI/types"

*/

//gsoap ns2   schema namespace:	urn:tpsAPI/types
//gsoap ns2   schema form:	unqualified

/******************************************************************************\
 *                                                                            *
 * Schema Types                                                               *
 *                                                                            *
\******************************************************************************/


/// Built-in type "xs:boolean".
enum xsd__boolean { xsd__boolean__false_, xsd__boolean__true_ };


/// "urn:tpsAPI/types":getAllReservationsForClass is a complexType.
struct ns2__getAllReservationsForClass
{
/// Element ReservationData_1 of type "urn:tpsAPI/types":ReservationData.
    struct ns2__ReservationData*         ReservationData_USCORE1       ;	///< Nullable pointer.
};

/// "urn:tpsAPI/types":ReservationData is a complexType.
struct ns2__ReservationData
{
/// Element DTMinus of type xs:long.
    LONG64                               DTMinus                        1;	///< Required element.
/// Element DTPlus of type xs:long.
    LONG64                               DTPlus                         1;	///< Required element.
/// Element bandwidth of type "urn:tpsAPI/types":Bandwidth.
    struct ns2__Bandwidth*               bandwidth                     ;	///< Nullable pointer.
/// Element destIp of type xs:string.
    char*                                destIp                        ;	///< Nullable pointer.
/// Element destMapping of type xs:string.
    char*                                destMapping                   ;	///< Nullable pointer.
/// Element destName of type xs:string.
    char*                                destName                      ;	///< Nullable pointer.
/// Element destPortMax of type xs:string.
    char*                                destPortMax                   ;	///< Nullable pointer.
/// Element destPortMin of type xs:string.
    char*                                destPortMin                   ;	///< Nullable pointer.
/// Element destPorts of type xs:string.
    char*                                destPorts                     ;	///< Nullable pointer.
/// Element direction of type xs:string.
    char*                                direction                     ;	///< Nullable pointer.
/// Element duration of type xs:long.
    LONG64                               duration                       1;	///< Required element.
/// Element id of type xs:string.
    char*                                id                            ;	///< Nullable pointer.
/// Element mapping of type xs:string.
    char*                                mapping                       ;	///< Nullable pointer.
/// Element modifyReservation of type xs:int.
    int                                  modifyReservation              1;	///< Required element.
/// Element protocol of type xs:string.
    char*                                protocol                      ;	///< Nullable pointer.
/// Element relatedReservationIds of type xs:string.
    char*                                relatedReservationIds         ;	///< Nullable pointer.
/// Element srcIp of type xs:string.
    char*                                srcIp                         ;	///< Nullable pointer.
/// Element srcMapping of type xs:string.
    char*                                srcMapping                    ;	///< Nullable pointer.
/// Element srcName of type xs:string.
    char*                                srcName                       ;	///< Nullable pointer.
/// Element srcPortMax of type xs:string.
    char*                                srcPortMax                    ;	///< Nullable pointer.
/// Element srcPortMin of type xs:string.
    char*                                srcPortMin                    ;	///< Nullable pointer.
/// Element srcPorts of type xs:string.
    char*                                srcPorts                      ;	///< Nullable pointer.
/// Element startTime of type xs:long.
    LONG64                               startTime                      1;	///< Required element.
/// Element startTimeMax of type xs:long.
    LONG64                               startTimeMax                   1;	///< Required element.
/// Element startTimeMin of type xs:long.
    LONG64                               startTimeMin                   1;	///< Required element.
/// Element status of type xs:string.
    char*                                status                        ;	///< Nullable pointer.
/// Element timeout of type xs:long.
    LONG64                               timeout                        1;	///< Required element.
/// Element userName of type xs:string.
    char*                                userName                      ;	///< Nullable pointer.
/// Element who of type "urn:tpsAPI/types":Who.
    struct ns2__Who*                     who                           ;	///< Nullable pointer.
};

/// "urn:tpsAPI/types":Bandwidth is a complexType.
struct ns2__Bandwidth
{
/// Element bandwidth of type xs:long.
    LONG64                               bandwidth                      1;	///< Required element.
/// Element className of type xs:string.
    char*                                className                     ;	///< Nullable pointer.
};

/// "urn:tpsAPI/types":Who is a complexType.
struct ns2__Who
{
/// Element CA of type xs:string.
    char*                                CA                            ;	///< Nullable pointer.
/// Element DN of type xs:string.
    char*                                DN                            ;	///< Nullable pointer.
/// Element name of type xs:string.
    char*                                name                          ;	///< Nullable pointer.
};

/// "urn:tpsAPI/types":getAllReservationsForClassResponse is a complexType.
struct ns2__getAllReservationsForClassResponse
{
/// Size of array of struct ns2__ReservationData* is 0..unbounded
    int                                  __sizeresult                  ;
/// Pointer to array of length 0..unbounded
    struct ns2__ReservationData*        *result                         0;	///< Nullable pointer.
};

/// "urn:tpsAPI/types":tpsAPI_LocalCancel is a complexType.
struct ns2__tpsAPI_USCORELocalCancel
{
/// Element String_1 of type xs:string.
    char*                                String_USCORE1                ;	///< Nullable pointer.
/// Element String_2 of type xs:string.
    char*                                String_USCORE2                ;	///< Nullable pointer.
/// Element String_3 of type xs:string.
    char*                                String_USCORE3                ;	///< Nullable pointer.
};

/// "urn:tpsAPI/types":tpsAPI_LocalCancelResponse is a complexType.
struct ns2__tpsAPI_USCORELocalCancelResponse
{
/// Element result of type xs:boolean.
    enum xsd__boolean                    result                         1;	///< Required element.
};

/// "urn:tpsAPI/types":tpsAPI_LocalCommit is a complexType.
struct ns2__tpsAPI_USCORELocalCommit
{
/// Element String_1 of type xs:string.
    char*                                String_USCORE1                ;	///< Nullable pointer.
/// Element String_2 of type xs:string.
    char*                                String_USCORE2                ;	///< Nullable pointer.
/// Element String_3 of type xs:string.
    char*                                String_USCORE3                ;	///< Nullable pointer.
};

/// "urn:tpsAPI/types":tpsAPI_LocalCommitResponse is a complexType.
struct ns2__tpsAPI_USCORELocalCommitResponse
{
/// Element result of type xs:boolean.
    enum xsd__boolean                    result                         1;	///< Required element.
};

/// "urn:tpsAPI/types":tpsAPI_LocalRemove is a complexType.
struct ns2__tpsAPI_USCORELocalRemove
{
/// Element String_1 of type xs:string.
    char*                                String_USCORE1                ;	///< Nullable pointer.
/// Element String_2 of type xs:string.
    char*                                String_USCORE2                ;	///< Nullable pointer.
/// Element String_3 of type xs:string.
    char*                                String_USCORE3                ;	///< Nullable pointer.
};

/// "urn:tpsAPI/types":tpsAPI_LocalRemoveResponse is a complexType.
struct ns2__tpsAPI_USCORELocalRemoveResponse
{
/// Element result of type xs:boolean.
    enum xsd__boolean                    result                         1;	///< Required element.
};

/// "urn:tpsAPI/types":tpsAPI_LocalReserve is a complexType.
struct ns2__tpsAPI_USCORELocalReserve
{
/// Element ReservationData_1 of type "urn:tpsAPI/types":ReservationData.
    struct ns2__ReservationData*         ReservationData_USCORE1       ;	///< Nullable pointer.
};

/// "urn:tpsAPI/types":tpsAPI_LocalReserveResponse is a complexType.
struct ns2__tpsAPI_USCORELocalReserveResponse
{
/// Element result of type "urn:tpsAPI/types":ReservationData.
    struct ns2__ReservationData*         result                        ;	///< Nullable pointer.
};

/// "urn:tpsAPI/types":tpsAPI_LocalStart is a complexType.
struct ns2__tpsAPI_USCORELocalStart
{
/// Element String_1 of type xs:string.
    char*                                String_USCORE1                ;	///< Nullable pointer.
/// Element String_2 of type xs:string.
    char*                                String_USCORE2                ;	///< Nullable pointer.
/// Element String_3 of type xs:string.
    char*                                String_USCORE3                ;	///< Nullable pointer.
};

/// "urn:tpsAPI/types":tpsAPI_LocalStartResponse is a complexType.
struct ns2__tpsAPI_USCORELocalStartResponse
{
/// Element result of type xs:boolean.
    enum xsd__boolean                    result                         1;	///< Required element.
};

/// "urn:tpsAPI/types":tpsAPI_addRelatedReservationId is a complexType.
struct ns2__tpsAPI_USCOREaddRelatedReservationId
{
/// Element String_1 of type xs:string.
    char*                                String_USCORE1                ;	///< Nullable pointer.
/// Element String_2 of type xs:string.
    char*                                String_USCORE2                ;	///< Nullable pointer.
/// Element boolean_3 of type xs:boolean.
    enum xsd__boolean                    boolean_USCORE3                1;	///< Required element.
};

/// "urn:tpsAPI/types":tpsAPI_addRelatedReservationIdResponse is a complexType.
struct ns2__tpsAPI_USCOREaddRelatedReservationIdResponse
{
/// Element result of type xs:boolean.
    enum xsd__boolean                    result                         1;	///< Required element.
};

/// "urn:tpsAPI/types":tpsAPI_cancel is a complexType.
struct ns2__tpsAPI_USCOREcancel
{
/// Element ReservationData_1 of type "urn:tpsAPI/types":ReservationData.
    struct ns2__ReservationData*         ReservationData_USCORE1       ;	///< Nullable pointer.
};

/// "urn:tpsAPI/types":tpsAPI_cancelResponse is a complexType.
struct ns2__tpsAPI_USCOREcancelResponse
{
/// Element result of type xs:boolean.
    enum xsd__boolean                    result                         1;	///< Required element.
};

/// "urn:tpsAPI/types":tpsAPI_commit is a complexType.
struct ns2__tpsAPI_USCOREcommit
{
/// Element ReservationData_1 of type "urn:tpsAPI/types":ReservationData.
    struct ns2__ReservationData*         ReservationData_USCORE1       ;	///< Nullable pointer.
};

/// "urn:tpsAPI/types":tpsAPI_commitResponse is a complexType.
struct ns2__tpsAPI_USCOREcommitResponse
{
/// Element result of type xs:boolean.
    enum xsd__boolean                    result                         1;	///< Required element.
};

/// "urn:tpsAPI/types":tpsAPI_getBandwidths is a complexType.
struct ns2__tpsAPI_USCOREgetBandwidths
{
/// Element String_1 of type xs:string.
    char*                                String_USCORE1                ;	///< Nullable pointer.
/// Element String_2 of type xs:string.
    char*                                String_USCORE2                ;	///< Nullable pointer.
};

/// "urn:tpsAPI/types":tpsAPI_getBandwidthsResponse is a complexType.
struct ns2__tpsAPI_USCOREgetBandwidthsResponse
{
/// Size of array of struct ns2__Bandwidths* is 0..unbounded
    int                                  __sizeresult                  ;
/// Pointer to array of length 0..unbounded
    struct ns2__Bandwidths*             *result                         0;	///< Nullable pointer.
};

/// "urn:tpsAPI/types":Bandwidths is a complexType.
struct ns2__Bandwidths
{
/// Size of array of struct ns2__Bandwidth* is 0..unbounded
    int                                  __sizebw                      ;
/// Pointer to array of length 0..unbounded
    struct ns2__Bandwidth*              *bw                             0;	///< Nullable pointer.
};

/// "urn:tpsAPI/types":tpsAPI_getLocalBandwidths is a complexType.
struct ns2__tpsAPI_USCOREgetLocalBandwidths
{
};

/// "urn:tpsAPI/types":tpsAPI_getLocalBandwidthsResponse is a complexType.
struct ns2__tpsAPI_USCOREgetLocalBandwidthsResponse
{
/// Size of array of struct ns2__Bandwidth* is 0..unbounded
    int                                  __sizeresult                  ;
/// Pointer to array of length 0..unbounded
    struct ns2__Bandwidth*              *result                         0;	///< Nullable pointer.
};

/// "urn:tpsAPI/types":tpsAPI_getPath is a complexType.
struct ns2__tpsAPI_USCOREgetPath
{
/// Element String_1 of type xs:string.
    char*                                String_USCORE1                ;	///< Nullable pointer.
/// Element String_2 of type xs:string.
    char*                                String_USCORE2                ;	///< Nullable pointer.
};

/// "urn:tpsAPI/types":tpsAPI_getPathResponse is a complexType.
struct ns2__tpsAPI_USCOREgetPathResponse
{
/// Size of array of char* is 0..unbounded
    int                                  __sizeresult                  ;
/// Pointer to array of length 0..unbounded
    char*                               *result                         0;	///< Nullable pointer.
};

/// "urn:tpsAPI/types":tpsAPI_getRelatedReservationIds is a complexType.
struct ns2__tpsAPI_USCOREgetRelatedReservationIds
{
/// Element String_1 of type xs:string.
    char*                                String_USCORE1                ;	///< Nullable pointer.
};

/// "urn:tpsAPI/types":tpsAPI_getRelatedReservationIdsResponse is a complexType.
struct ns2__tpsAPI_USCOREgetRelatedReservationIdsResponse
{
/// Element result of type xs:string.
    char*                                result                        ;	///< Nullable pointer.
};

/// "urn:tpsAPI/types":tpsAPI_getReservationData is a complexType.
struct ns2__tpsAPI_USCOREgetReservationData
{
/// Element String_1 of type xs:string.
    char*                                String_USCORE1                ;	///< Nullable pointer.
};

/// "urn:tpsAPI/types":tpsAPI_getReservationDataResponse is a complexType.
struct ns2__tpsAPI_USCOREgetReservationDataResponse
{
/// Element result of type "urn:tpsAPI/types":ReservationData.
    struct ns2__ReservationData*         result                        ;	///< Nullable pointer.
};

/// "urn:tpsAPI/types":tpsAPI_lookupUser is a complexType.
struct ns2__tpsAPI_USCORElookupUser
{
/// Element String_1 of type xs:string.
    char*                                String_USCORE1                ;	///< Nullable pointer.
/// Element String_2 of type xs:string.
    char*                                String_USCORE2                ;	///< Nullable pointer.
};

/// "urn:tpsAPI/types":tpsAPI_lookupUserResponse is a complexType.
struct ns2__tpsAPI_USCORElookupUserResponse
{
/// Element result of type "urn:tpsAPI/types":UserData.
    struct ns2__UserData*                result                        ;	///< Nullable pointer.
};

/// "urn:tpsAPI/types":UserData is a complexType.
struct ns2__UserData
{
/// Element id of type xs:long.
    LONG64                               id                             1;	///< Required element.
/// Element info of type xs:string.
    char*                                info                          ;	///< Nullable pointer.
/// Element passWord of type xs:string.
    char*                                passWord                      ;	///< Nullable pointer.
/// Element type of type xs:string.
    char*                                type                          ;	///< Nullable pointer.
/// Element userName of type xs:string.
    char*                                userName                      ;	///< Nullable pointer.
};

/// "urn:tpsAPI/types":tpsAPI_reserve is a complexType.
struct ns2__tpsAPI_USCOREreserve
{
/// Element ReservationData_1 of type "urn:tpsAPI/types":ReservationData.
    struct ns2__ReservationData*         ReservationData_USCORE1       ;	///< Nullable pointer.
};

/// "urn:tpsAPI/types":tpsAPI_reserveResponse is a complexType.
struct ns2__tpsAPI_USCOREreserveResponse
{
/// Element result of type "urn:tpsAPI/types":ReservationData.
    struct ns2__ReservationData*         result                        ;	///< Nullable pointer.
};

/// Element "urn:tpsAPI/types":getAllReservationsForClass of type "urn:tpsAPI/types":getAllReservationsForClass.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "urn:tpsAPI/types":getAllReservationsForClassResponse of type "urn:tpsAPI/types":getAllReservationsForClassResponse.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "urn:tpsAPI/types":tpsAPI_LocalCancel of type "urn:tpsAPI/types":tpsAPI_LocalCancel.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "urn:tpsAPI/types":tpsAPI_LocalCancelResponse of type "urn:tpsAPI/types":tpsAPI_LocalCancelResponse.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "urn:tpsAPI/types":tpsAPI_LocalCommit of type "urn:tpsAPI/types":tpsAPI_LocalCommit.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "urn:tpsAPI/types":tpsAPI_LocalCommitResponse of type "urn:tpsAPI/types":tpsAPI_LocalCommitResponse.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "urn:tpsAPI/types":tpsAPI_LocalRemove of type "urn:tpsAPI/types":tpsAPI_LocalRemove.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "urn:tpsAPI/types":tpsAPI_LocalRemoveResponse of type "urn:tpsAPI/types":tpsAPI_LocalRemoveResponse.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "urn:tpsAPI/types":tpsAPI_LocalReserve of type "urn:tpsAPI/types":tpsAPI_LocalReserve.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "urn:tpsAPI/types":tpsAPI_LocalReserveResponse of type "urn:tpsAPI/types":tpsAPI_LocalReserveResponse.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "urn:tpsAPI/types":tpsAPI_LocalStart of type "urn:tpsAPI/types":tpsAPI_LocalStart.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "urn:tpsAPI/types":tpsAPI_LocalStartResponse of type "urn:tpsAPI/types":tpsAPI_LocalStartResponse.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "urn:tpsAPI/types":tpsAPI_addRelatedReservationId of type "urn:tpsAPI/types":tpsAPI_addRelatedReservationId.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "urn:tpsAPI/types":tpsAPI_addRelatedReservationIdResponse of type "urn:tpsAPI/types":tpsAPI_addRelatedReservationIdResponse.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "urn:tpsAPI/types":tpsAPI_cancel of type "urn:tpsAPI/types":tpsAPI_cancel.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "urn:tpsAPI/types":tpsAPI_cancelResponse of type "urn:tpsAPI/types":tpsAPI_cancelResponse.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "urn:tpsAPI/types":tpsAPI_commit of type "urn:tpsAPI/types":tpsAPI_commit.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "urn:tpsAPI/types":tpsAPI_commitResponse of type "urn:tpsAPI/types":tpsAPI_commitResponse.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "urn:tpsAPI/types":tpsAPI_getBandwidths of type "urn:tpsAPI/types":tpsAPI_getBandwidths.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "urn:tpsAPI/types":tpsAPI_getBandwidthsResponse of type "urn:tpsAPI/types":tpsAPI_getBandwidthsResponse.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "urn:tpsAPI/types":tpsAPI_getLocalBandwidths of type "urn:tpsAPI/types":tpsAPI_getLocalBandwidths.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "urn:tpsAPI/types":tpsAPI_getLocalBandwidthsResponse of type "urn:tpsAPI/types":tpsAPI_getLocalBandwidthsResponse.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "urn:tpsAPI/types":tpsAPI_getPath of type "urn:tpsAPI/types":tpsAPI_getPath.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "urn:tpsAPI/types":tpsAPI_getPathResponse of type "urn:tpsAPI/types":tpsAPI_getPathResponse.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "urn:tpsAPI/types":tpsAPI_getRelatedReservationIds of type "urn:tpsAPI/types":tpsAPI_getRelatedReservationIds.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "urn:tpsAPI/types":tpsAPI_getRelatedReservationIdsResponse of type "urn:tpsAPI/types":tpsAPI_getRelatedReservationIdsResponse.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "urn:tpsAPI/types":tpsAPI_getReservationData of type "urn:tpsAPI/types":tpsAPI_getReservationData.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "urn:tpsAPI/types":tpsAPI_getReservationDataResponse of type "urn:tpsAPI/types":tpsAPI_getReservationDataResponse.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "urn:tpsAPI/types":tpsAPI_lookupUser of type "urn:tpsAPI/types":tpsAPI_lookupUser.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "urn:tpsAPI/types":tpsAPI_lookupUserResponse of type "urn:tpsAPI/types":tpsAPI_lookupUserResponse.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "urn:tpsAPI/types":tpsAPI_reserve of type "urn:tpsAPI/types":tpsAPI_reserve.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "urn:tpsAPI/types":tpsAPI_reserveResponse of type "urn:tpsAPI/types":tpsAPI_reserveResponse.
/// Note: use wsdl2h option -g to generate this global element declaration.

/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/


//gsoap ns1  service name:	tpsAPISEIBinding 
//gsoap ns1  service type:	tpsAPISEI 
//gsoap ns1  service port:	http://tera01.ultralight.org:40863/terapathsAPI/tpsAPI 
//gsoap ns1  service namespace:	urn:tpsAPI/wsdl 
//gsoap ns1  service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage tpsAPI Definitions

@section tpsAPI_bindings Bindings
  - @ref tpsAPISEIBinding

*/

/**

@page tpsAPISEIBinding Binding "tpsAPISEIBinding"

@section tpsAPISEIBinding_operations Operations of Binding  "tpsAPISEIBinding"
  - @ref __ns1__getAllReservationsForClass
  - @ref __ns1__tpsAPI_USCORELocalCancel
  - @ref __ns1__tpsAPI_USCORELocalCommit
  - @ref __ns1__tpsAPI_USCORELocalRemove
  - @ref __ns1__tpsAPI_USCORELocalReserve
  - @ref __ns1__tpsAPI_USCORELocalStart
  - @ref __ns1__tpsAPI_USCOREaddRelatedReservationId
  - @ref __ns1__tpsAPI_USCOREcancel
  - @ref __ns1__tpsAPI_USCOREcommit
  - @ref __ns1__tpsAPI_USCOREgetBandwidths
  - @ref __ns1__tpsAPI_USCOREgetLocalBandwidths
  - @ref __ns1__tpsAPI_USCOREgetPath
  - @ref __ns1__tpsAPI_USCOREgetRelatedReservationIds
  - @ref __ns1__tpsAPI_USCOREgetReservationData
  - @ref __ns1__tpsAPI_USCORElookupUser
  - @ref __ns1__tpsAPI_USCOREreserve

@section tpsAPISEIBinding_ports Endpoints of Binding  "tpsAPISEIBinding"
  - http://tera01.ultralight.org:40863/terapathsAPI/tpsAPI

Note: use wsdl2h option -N to change the service binding prefix name

*/

/******************************************************************************\
 *                                                                            *
 * tpsAPISEIBinding                                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * __ns1__getAllReservationsForClass                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__getAllReservationsForClass" of service binding "tpsAPISEIBinding"

/**

Operation details:

  - SOAP document/literal style

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__getAllReservationsForClass(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct ns2__getAllReservationsForClass* ns2__getAllReservationsForClass,
    // response parameters:
    struct ns2__getAllReservationsForClassResponse* ns2__getAllReservationsForClassResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__getAllReservationsForClass(
    struct soap *soap,
    // request parameters:
    struct ns2__getAllReservationsForClass* ns2__getAllReservationsForClass,
    // response parameters:
    struct ns2__getAllReservationsForClassResponse* ns2__getAllReservationsForClassResponse
  );
@endcode

*/

//gsoap ns1  service method-style:	getAllReservationsForClass document
//gsoap ns1  service method-encoding:	getAllReservationsForClass literal
//gsoap ns1  service method-action:	getAllReservationsForClass ""
int __ns1__getAllReservationsForClass(
    struct ns2__getAllReservationsForClass* ns2__getAllReservationsForClass,	///< Request parameter
    struct ns2__getAllReservationsForClassResponse* ns2__getAllReservationsForClassResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns1__tpsAPI_USCORELocalCancel                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__tpsAPI_USCORELocalCancel" of service binding "tpsAPISEIBinding"

/**

Operation details:

  - SOAP document/literal style

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__tpsAPI_USCORELocalCancel(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct ns2__tpsAPI_USCORELocalCancel* ns2__tpsAPI_USCORELocalCancel,
    // response parameters:
    struct ns2__tpsAPI_USCORELocalCancelResponse* ns2__tpsAPI_USCORELocalCancelResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__tpsAPI_USCORELocalCancel(
    struct soap *soap,
    // request parameters:
    struct ns2__tpsAPI_USCORELocalCancel* ns2__tpsAPI_USCORELocalCancel,
    // response parameters:
    struct ns2__tpsAPI_USCORELocalCancelResponse* ns2__tpsAPI_USCORELocalCancelResponse
  );
@endcode

*/

//gsoap ns1  service method-style:	tpsAPI_USCORELocalCancel document
//gsoap ns1  service method-encoding:	tpsAPI_USCORELocalCancel literal
//gsoap ns1  service method-action:	tpsAPI_USCORELocalCancel ""
int __ns1__tpsAPI_USCORELocalCancel(
    struct ns2__tpsAPI_USCORELocalCancel* ns2__tpsAPI_USCORELocalCancel,	///< Request parameter
    struct ns2__tpsAPI_USCORELocalCancelResponse* ns2__tpsAPI_USCORELocalCancelResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns1__tpsAPI_USCORELocalCommit                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__tpsAPI_USCORELocalCommit" of service binding "tpsAPISEIBinding"

/**

Operation details:

  - SOAP document/literal style

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__tpsAPI_USCORELocalCommit(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct ns2__tpsAPI_USCORELocalCommit* ns2__tpsAPI_USCORELocalCommit,
    // response parameters:
    struct ns2__tpsAPI_USCORELocalCommitResponse* ns2__tpsAPI_USCORELocalCommitResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__tpsAPI_USCORELocalCommit(
    struct soap *soap,
    // request parameters:
    struct ns2__tpsAPI_USCORELocalCommit* ns2__tpsAPI_USCORELocalCommit,
    // response parameters:
    struct ns2__tpsAPI_USCORELocalCommitResponse* ns2__tpsAPI_USCORELocalCommitResponse
  );
@endcode

*/

//gsoap ns1  service method-style:	tpsAPI_USCORELocalCommit document
//gsoap ns1  service method-encoding:	tpsAPI_USCORELocalCommit literal
//gsoap ns1  service method-action:	tpsAPI_USCORELocalCommit ""
int __ns1__tpsAPI_USCORELocalCommit(
    struct ns2__tpsAPI_USCORELocalCommit* ns2__tpsAPI_USCORELocalCommit,	///< Request parameter
    struct ns2__tpsAPI_USCORELocalCommitResponse* ns2__tpsAPI_USCORELocalCommitResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns1__tpsAPI_USCORELocalRemove                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__tpsAPI_USCORELocalRemove" of service binding "tpsAPISEIBinding"

/**

Operation details:

  - SOAP document/literal style

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__tpsAPI_USCORELocalRemove(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct ns2__tpsAPI_USCORELocalRemove* ns2__tpsAPI_USCORELocalRemove,
    // response parameters:
    struct ns2__tpsAPI_USCORELocalRemoveResponse* ns2__tpsAPI_USCORELocalRemoveResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__tpsAPI_USCORELocalRemove(
    struct soap *soap,
    // request parameters:
    struct ns2__tpsAPI_USCORELocalRemove* ns2__tpsAPI_USCORELocalRemove,
    // response parameters:
    struct ns2__tpsAPI_USCORELocalRemoveResponse* ns2__tpsAPI_USCORELocalRemoveResponse
  );
@endcode

*/

//gsoap ns1  service method-style:	tpsAPI_USCORELocalRemove document
//gsoap ns1  service method-encoding:	tpsAPI_USCORELocalRemove literal
//gsoap ns1  service method-action:	tpsAPI_USCORELocalRemove ""
int __ns1__tpsAPI_USCORELocalRemove(
    struct ns2__tpsAPI_USCORELocalRemove* ns2__tpsAPI_USCORELocalRemove,	///< Request parameter
    struct ns2__tpsAPI_USCORELocalRemoveResponse* ns2__tpsAPI_USCORELocalRemoveResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns1__tpsAPI_USCORELocalReserve                                           *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__tpsAPI_USCORELocalReserve" of service binding "tpsAPISEIBinding"

/**

Operation details:

  - SOAP document/literal style

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__tpsAPI_USCORELocalReserve(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct ns2__tpsAPI_USCORELocalReserve* ns2__tpsAPI_USCORELocalReserve,
    // response parameters:
    struct ns2__tpsAPI_USCORELocalReserveResponse* ns2__tpsAPI_USCORELocalReserveResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__tpsAPI_USCORELocalReserve(
    struct soap *soap,
    // request parameters:
    struct ns2__tpsAPI_USCORELocalReserve* ns2__tpsAPI_USCORELocalReserve,
    // response parameters:
    struct ns2__tpsAPI_USCORELocalReserveResponse* ns2__tpsAPI_USCORELocalReserveResponse
  );
@endcode

*/

//gsoap ns1  service method-style:	tpsAPI_USCORELocalReserve document
//gsoap ns1  service method-encoding:	tpsAPI_USCORELocalReserve literal
//gsoap ns1  service method-action:	tpsAPI_USCORELocalReserve ""
int __ns1__tpsAPI_USCORELocalReserve(
    struct ns2__tpsAPI_USCORELocalReserve* ns2__tpsAPI_USCORELocalReserve,	///< Request parameter
    struct ns2__tpsAPI_USCORELocalReserveResponse* ns2__tpsAPI_USCORELocalReserveResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns1__tpsAPI_USCORELocalStart                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__tpsAPI_USCORELocalStart" of service binding "tpsAPISEIBinding"

/**

Operation details:

  - SOAP document/literal style

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__tpsAPI_USCORELocalStart(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct ns2__tpsAPI_USCORELocalStart* ns2__tpsAPI_USCORELocalStart,
    // response parameters:
    struct ns2__tpsAPI_USCORELocalStartResponse* ns2__tpsAPI_USCORELocalStartResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__tpsAPI_USCORELocalStart(
    struct soap *soap,
    // request parameters:
    struct ns2__tpsAPI_USCORELocalStart* ns2__tpsAPI_USCORELocalStart,
    // response parameters:
    struct ns2__tpsAPI_USCORELocalStartResponse* ns2__tpsAPI_USCORELocalStartResponse
  );
@endcode

*/

//gsoap ns1  service method-style:	tpsAPI_USCORELocalStart document
//gsoap ns1  service method-encoding:	tpsAPI_USCORELocalStart literal
//gsoap ns1  service method-action:	tpsAPI_USCORELocalStart ""
int __ns1__tpsAPI_USCORELocalStart(
    struct ns2__tpsAPI_USCORELocalStart* ns2__tpsAPI_USCORELocalStart,	///< Request parameter
    struct ns2__tpsAPI_USCORELocalStartResponse* ns2__tpsAPI_USCORELocalStartResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns1__tpsAPI_USCOREaddRelatedReservationId                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__tpsAPI_USCOREaddRelatedReservationId" of service binding "tpsAPISEIBinding"

/**

Operation details:

  - SOAP document/literal style

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__tpsAPI_USCOREaddRelatedReservationId(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct ns2__tpsAPI_USCOREaddRelatedReservationId* ns2__tpsAPI_USCOREaddRelatedReservationId,
    // response parameters:
    struct ns2__tpsAPI_USCOREaddRelatedReservationIdResponse* ns2__tpsAPI_USCOREaddRelatedReservationIdResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__tpsAPI_USCOREaddRelatedReservationId(
    struct soap *soap,
    // request parameters:
    struct ns2__tpsAPI_USCOREaddRelatedReservationId* ns2__tpsAPI_USCOREaddRelatedReservationId,
    // response parameters:
    struct ns2__tpsAPI_USCOREaddRelatedReservationIdResponse* ns2__tpsAPI_USCOREaddRelatedReservationIdResponse
  );
@endcode

*/

//gsoap ns1  service method-style:	tpsAPI_USCOREaddRelatedReservationId document
//gsoap ns1  service method-encoding:	tpsAPI_USCOREaddRelatedReservationId literal
//gsoap ns1  service method-action:	tpsAPI_USCOREaddRelatedReservationId ""
int __ns1__tpsAPI_USCOREaddRelatedReservationId(
    struct ns2__tpsAPI_USCOREaddRelatedReservationId* ns2__tpsAPI_USCOREaddRelatedReservationId,	///< Request parameter
    struct ns2__tpsAPI_USCOREaddRelatedReservationIdResponse* ns2__tpsAPI_USCOREaddRelatedReservationIdResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns1__tpsAPI_USCOREcancel                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__tpsAPI_USCOREcancel" of service binding "tpsAPISEIBinding"

/**

Operation details:

  - SOAP document/literal style

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__tpsAPI_USCOREcancel(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct ns2__tpsAPI_USCOREcancel*    ns2__tpsAPI_USCOREcancel,
    // response parameters:
    struct ns2__tpsAPI_USCOREcancelResponse* ns2__tpsAPI_USCOREcancelResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__tpsAPI_USCOREcancel(
    struct soap *soap,
    // request parameters:
    struct ns2__tpsAPI_USCOREcancel*    ns2__tpsAPI_USCOREcancel,
    // response parameters:
    struct ns2__tpsAPI_USCOREcancelResponse* ns2__tpsAPI_USCOREcancelResponse
  );
@endcode

*/

//gsoap ns1  service method-style:	tpsAPI_USCOREcancel document
//gsoap ns1  service method-encoding:	tpsAPI_USCOREcancel literal
//gsoap ns1  service method-action:	tpsAPI_USCOREcancel ""
int __ns1__tpsAPI_USCOREcancel(
    struct ns2__tpsAPI_USCOREcancel*    ns2__tpsAPI_USCOREcancel,	///< Request parameter
    struct ns2__tpsAPI_USCOREcancelResponse* ns2__tpsAPI_USCOREcancelResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns1__tpsAPI_USCOREcommit                                                 *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__tpsAPI_USCOREcommit" of service binding "tpsAPISEIBinding"

/**

Operation details:

  - SOAP document/literal style

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__tpsAPI_USCOREcommit(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct ns2__tpsAPI_USCOREcommit*    ns2__tpsAPI_USCOREcommit,
    // response parameters:
    struct ns2__tpsAPI_USCOREcommitResponse* ns2__tpsAPI_USCOREcommitResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__tpsAPI_USCOREcommit(
    struct soap *soap,
    // request parameters:
    struct ns2__tpsAPI_USCOREcommit*    ns2__tpsAPI_USCOREcommit,
    // response parameters:
    struct ns2__tpsAPI_USCOREcommitResponse* ns2__tpsAPI_USCOREcommitResponse
  );
@endcode

*/

//gsoap ns1  service method-style:	tpsAPI_USCOREcommit document
//gsoap ns1  service method-encoding:	tpsAPI_USCOREcommit literal
//gsoap ns1  service method-action:	tpsAPI_USCOREcommit ""
int __ns1__tpsAPI_USCOREcommit(
    struct ns2__tpsAPI_USCOREcommit*    ns2__tpsAPI_USCOREcommit,	///< Request parameter
    struct ns2__tpsAPI_USCOREcommitResponse* ns2__tpsAPI_USCOREcommitResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns1__tpsAPI_USCOREgetBandwidths                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__tpsAPI_USCOREgetBandwidths" of service binding "tpsAPISEIBinding"

/**

Operation details:

  - SOAP document/literal style

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__tpsAPI_USCOREgetBandwidths(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct ns2__tpsAPI_USCOREgetBandwidths* ns2__tpsAPI_USCOREgetBandwidths,
    // response parameters:
    struct ns2__tpsAPI_USCOREgetBandwidthsResponse* ns2__tpsAPI_USCOREgetBandwidthsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__tpsAPI_USCOREgetBandwidths(
    struct soap *soap,
    // request parameters:
    struct ns2__tpsAPI_USCOREgetBandwidths* ns2__tpsAPI_USCOREgetBandwidths,
    // response parameters:
    struct ns2__tpsAPI_USCOREgetBandwidthsResponse* ns2__tpsAPI_USCOREgetBandwidthsResponse
  );
@endcode

*/

//gsoap ns1  service method-style:	tpsAPI_USCOREgetBandwidths document
//gsoap ns1  service method-encoding:	tpsAPI_USCOREgetBandwidths literal
//gsoap ns1  service method-action:	tpsAPI_USCOREgetBandwidths ""
int __ns1__tpsAPI_USCOREgetBandwidths(
    struct ns2__tpsAPI_USCOREgetBandwidths* ns2__tpsAPI_USCOREgetBandwidths,	///< Request parameter
    struct ns2__tpsAPI_USCOREgetBandwidthsResponse* ns2__tpsAPI_USCOREgetBandwidthsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns1__tpsAPI_USCOREgetLocalBandwidths                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__tpsAPI_USCOREgetLocalBandwidths" of service binding "tpsAPISEIBinding"

/**

Operation details:

  - SOAP document/literal style

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__tpsAPI_USCOREgetLocalBandwidths(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct ns2__tpsAPI_USCOREgetLocalBandwidths* ns2__tpsAPI_USCOREgetLocalBandwidths,
    // response parameters:
    struct ns2__tpsAPI_USCOREgetLocalBandwidthsResponse* ns2__tpsAPI_USCOREgetLocalBandwidthsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__tpsAPI_USCOREgetLocalBandwidths(
    struct soap *soap,
    // request parameters:
    struct ns2__tpsAPI_USCOREgetLocalBandwidths* ns2__tpsAPI_USCOREgetLocalBandwidths,
    // response parameters:
    struct ns2__tpsAPI_USCOREgetLocalBandwidthsResponse* ns2__tpsAPI_USCOREgetLocalBandwidthsResponse
  );
@endcode

*/

//gsoap ns1  service method-style:	tpsAPI_USCOREgetLocalBandwidths document
//gsoap ns1  service method-encoding:	tpsAPI_USCOREgetLocalBandwidths literal
//gsoap ns1  service method-action:	tpsAPI_USCOREgetLocalBandwidths ""
int __ns1__tpsAPI_USCOREgetLocalBandwidths(
    struct ns2__tpsAPI_USCOREgetLocalBandwidths* ns2__tpsAPI_USCOREgetLocalBandwidths,	///< Request parameter
    struct ns2__tpsAPI_USCOREgetLocalBandwidthsResponse* ns2__tpsAPI_USCOREgetLocalBandwidthsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns1__tpsAPI_USCOREgetPath                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__tpsAPI_USCOREgetPath" of service binding "tpsAPISEIBinding"

/**

Operation details:

  - SOAP document/literal style

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__tpsAPI_USCOREgetPath(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct ns2__tpsAPI_USCOREgetPath*   ns2__tpsAPI_USCOREgetPath,
    // response parameters:
    struct ns2__tpsAPI_USCOREgetPathResponse* ns2__tpsAPI_USCOREgetPathResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__tpsAPI_USCOREgetPath(
    struct soap *soap,
    // request parameters:
    struct ns2__tpsAPI_USCOREgetPath*   ns2__tpsAPI_USCOREgetPath,
    // response parameters:
    struct ns2__tpsAPI_USCOREgetPathResponse* ns2__tpsAPI_USCOREgetPathResponse
  );
@endcode

*/

//gsoap ns1  service method-style:	tpsAPI_USCOREgetPath document
//gsoap ns1  service method-encoding:	tpsAPI_USCOREgetPath literal
//gsoap ns1  service method-action:	tpsAPI_USCOREgetPath ""
int __ns1__tpsAPI_USCOREgetPath(
    struct ns2__tpsAPI_USCOREgetPath*   ns2__tpsAPI_USCOREgetPath,	///< Request parameter
    struct ns2__tpsAPI_USCOREgetPathResponse* ns2__tpsAPI_USCOREgetPathResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns1__tpsAPI_USCOREgetRelatedReservationIds                               *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__tpsAPI_USCOREgetRelatedReservationIds" of service binding "tpsAPISEIBinding"

/**

Operation details:

  - SOAP document/literal style

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__tpsAPI_USCOREgetRelatedReservationIds(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct ns2__tpsAPI_USCOREgetRelatedReservationIds* ns2__tpsAPI_USCOREgetRelatedReservationIds,
    // response parameters:
    struct ns2__tpsAPI_USCOREgetRelatedReservationIdsResponse* ns2__tpsAPI_USCOREgetRelatedReservationIdsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__tpsAPI_USCOREgetRelatedReservationIds(
    struct soap *soap,
    // request parameters:
    struct ns2__tpsAPI_USCOREgetRelatedReservationIds* ns2__tpsAPI_USCOREgetRelatedReservationIds,
    // response parameters:
    struct ns2__tpsAPI_USCOREgetRelatedReservationIdsResponse* ns2__tpsAPI_USCOREgetRelatedReservationIdsResponse
  );
@endcode

*/

//gsoap ns1  service method-style:	tpsAPI_USCOREgetRelatedReservationIds document
//gsoap ns1  service method-encoding:	tpsAPI_USCOREgetRelatedReservationIds literal
//gsoap ns1  service method-action:	tpsAPI_USCOREgetRelatedReservationIds ""
int __ns1__tpsAPI_USCOREgetRelatedReservationIds(
    struct ns2__tpsAPI_USCOREgetRelatedReservationIds* ns2__tpsAPI_USCOREgetRelatedReservationIds,	///< Request parameter
    struct ns2__tpsAPI_USCOREgetRelatedReservationIdsResponse* ns2__tpsAPI_USCOREgetRelatedReservationIdsResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns1__tpsAPI_USCOREgetReservationData                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__tpsAPI_USCOREgetReservationData" of service binding "tpsAPISEIBinding"

/**

Operation details:

  - SOAP document/literal style

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__tpsAPI_USCOREgetReservationData(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct ns2__tpsAPI_USCOREgetReservationData* ns2__tpsAPI_USCOREgetReservationData,
    // response parameters:
    struct ns2__tpsAPI_USCOREgetReservationDataResponse* ns2__tpsAPI_USCOREgetReservationDataResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__tpsAPI_USCOREgetReservationData(
    struct soap *soap,
    // request parameters:
    struct ns2__tpsAPI_USCOREgetReservationData* ns2__tpsAPI_USCOREgetReservationData,
    // response parameters:
    struct ns2__tpsAPI_USCOREgetReservationDataResponse* ns2__tpsAPI_USCOREgetReservationDataResponse
  );
@endcode

*/

//gsoap ns1  service method-style:	tpsAPI_USCOREgetReservationData document
//gsoap ns1  service method-encoding:	tpsAPI_USCOREgetReservationData literal
//gsoap ns1  service method-action:	tpsAPI_USCOREgetReservationData ""
int __ns1__tpsAPI_USCOREgetReservationData(
    struct ns2__tpsAPI_USCOREgetReservationData* ns2__tpsAPI_USCOREgetReservationData,	///< Request parameter
    struct ns2__tpsAPI_USCOREgetReservationDataResponse* ns2__tpsAPI_USCOREgetReservationDataResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns1__tpsAPI_USCORElookupUser                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__tpsAPI_USCORElookupUser" of service binding "tpsAPISEIBinding"

/**

Operation details:

  - SOAP document/literal style

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__tpsAPI_USCORElookupUser(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct ns2__tpsAPI_USCORElookupUser* ns2__tpsAPI_USCORElookupUser,
    // response parameters:
    struct ns2__tpsAPI_USCORElookupUserResponse* ns2__tpsAPI_USCORElookupUserResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__tpsAPI_USCORElookupUser(
    struct soap *soap,
    // request parameters:
    struct ns2__tpsAPI_USCORElookupUser* ns2__tpsAPI_USCORElookupUser,
    // response parameters:
    struct ns2__tpsAPI_USCORElookupUserResponse* ns2__tpsAPI_USCORElookupUserResponse
  );
@endcode

*/

//gsoap ns1  service method-style:	tpsAPI_USCORElookupUser document
//gsoap ns1  service method-encoding:	tpsAPI_USCORElookupUser literal
//gsoap ns1  service method-action:	tpsAPI_USCORElookupUser ""
int __ns1__tpsAPI_USCORElookupUser(
    struct ns2__tpsAPI_USCORElookupUser* ns2__tpsAPI_USCORElookupUser,	///< Request parameter
    struct ns2__tpsAPI_USCORElookupUserResponse* ns2__tpsAPI_USCORElookupUserResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns1__tpsAPI_USCOREreserve                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__tpsAPI_USCOREreserve" of service binding "tpsAPISEIBinding"

/**

Operation details:

  - SOAP document/literal style

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__tpsAPI_USCOREreserve(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct ns2__tpsAPI_USCOREreserve*   ns2__tpsAPI_USCOREreserve,
    // response parameters:
    struct ns2__tpsAPI_USCOREreserveResponse* ns2__tpsAPI_USCOREreserveResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__tpsAPI_USCOREreserve(
    struct soap *soap,
    // request parameters:
    struct ns2__tpsAPI_USCOREreserve*   ns2__tpsAPI_USCOREreserve,
    // response parameters:
    struct ns2__tpsAPI_USCOREreserveResponse* ns2__tpsAPI_USCOREreserveResponse
  );
@endcode

*/

//gsoap ns1  service method-style:	tpsAPI_USCOREreserve document
//gsoap ns1  service method-encoding:	tpsAPI_USCOREreserve literal
//gsoap ns1  service method-action:	tpsAPI_USCOREreserve ""
int __ns1__tpsAPI_USCOREreserve(
    struct ns2__tpsAPI_USCOREreserve*   ns2__tpsAPI_USCOREreserve,	///< Request parameter
    struct ns2__tpsAPI_USCOREreserveResponse* ns2__tpsAPI_USCOREreserveResponse	///< Response parameter
);

/* End of tpsAPI.h */
