/* mntr.h
   Generated by wsdl2h 1.2.9l from http://192.168.1.20:8000/my-soap-service/?service.wsdl and typemap.dat
   2010-06-17 01:49:18 GMT
   Copyright (C) 2001-2007 Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL or Genivia's license for commercial use.
*/

/* NOTE:

 - Compile this file with soapcpp2 to complete the code generation process.
 - Use soapcpp2 option -I to specify paths for #import
   To build with STL, 'stlvector.h' is imported from 'import' dir in package.
 - Use wsdl2h options -c and -s to generate pure C code or C++ code without STL.
 - Use 'typemap.dat' to control schema namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Use Doxygen (www.doxygen.org) to browse this file.
 - Use wsdl2h option -l to view the software license terms.

   DO NOT include this file directly into your project.
   Include only the soapcpp2-generated headers and source code files.
*/

//gsoapopt cw

/******************************************************************************\
 *                                                                            *
 * http://localhost/my-soap-service/                                          *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

ns1 = "http://localhost/my-soap-service/"

*/

//gsoap ns1   schema namespace:	http://localhost/my-soap-service/
//gsoap ns1   schema form:	unqualified

/******************************************************************************\
 *                                                                            *
 * Schema Types                                                               *
 *                                                                            *
\******************************************************************************/



/// "http://localhost/my-soap-service/":remove_pathResponse is a complexType.
struct ns1__remove_USCOREpathResponse
{
/// Element remove_pathResult of type xs:string.
    char*                                remove_USCOREpathResult        1;	///< Required element.
};

/// "http://localhost/my-soap-service/":new_path is a complexType.
struct ns1__new_USCOREpath
{
/// Element newpath of type "http://localhost/my-soap-service/":PathData.
    struct ns1__PathData*                newpath                        1;	///< Required element.
};

/// "http://localhost/my-soap-service/":status_pathResponse is a complexType.
struct ns1__status_USCOREpathResponse
{
/// Element status_pathResult of type xs:string.
    char*                                status_USCOREpathResult        1;	///< Required element.
};

/// "http://localhost/my-soap-service/":status_path is a complexType.
struct ns1__status_USCOREpath
{
/// Element path of type "http://localhost/my-soap-service/":PathData.
    struct ns1__PathData*                path                           1;	///< Required element.
};

/// "http://localhost/my-soap-service/":new_pathResponse is a complexType.
struct ns1__new_USCOREpathResponse
{
/// Element new_pathResult of type xs:string.
    char*                                new_USCOREpathResult           1;	///< Required element.
};

/// "http://localhost/my-soap-service/":PathData is a complexType.
struct ns1__PathData
{
/// Element status of type xs:string.
    char*                                status                         0;	///< Optional element.
/// Element src of type xs:string.
    char*                                src                            0;	///< Optional element.
/// Element direction of type xs:string.
    char*                                direction                      0;	///< Optional element.
/// Element src_port_range of type xs:string.
    char*                                src_USCOREport_USCORErange     0;	///< Optional element.
/// Element start_time of type xs:int.
    int*                                 start_USCOREtime               0;	///< Optional element.
/// Element path_id of type xs:string.
    char*                                path_USCOREid                  0;	///< Optional element.
/// Element dst_port_range of type xs:string.
    char*                                dst_USCOREport_USCORErange     0;	///< Optional element.
/// Element bandwidth of type xs:int.
    int*                                 bandwidth                      0;	///< Optional element.
/// Element duration of type xs:int.
    int*                                 duration                       0;	///< Optional element.
/// Element bw_class of type xs:string.
    char*                                bw_USCOREclass                 0;	///< Optional element.
/// Element dst of type xs:string.
    char*                                dst                            0;	///< Optional element.
/// Element vlan_id of type xs:string.
    char*                                vlan_USCOREid                  0;	///< Optional element.
};

/// "http://localhost/my-soap-service/":remove_path is a complexType.
struct ns1__remove_USCOREpath
{
/// Element pathid of type xs:string.
    char*                                pathid                         1;	///< Required element.
};

/// Element "http://localhost/my-soap-service/":status_pathResponse of type "http://localhost/my-soap-service/":status_pathResponse.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://localhost/my-soap-service/":new_pathResponse of type "http://localhost/my-soap-service/":new_pathResponse.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://localhost/my-soap-service/":remove_pathResponse of type "http://localhost/my-soap-service/":remove_pathResponse.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://localhost/my-soap-service/":remove_path of type "http://localhost/my-soap-service/":remove_path.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://localhost/my-soap-service/":status_path of type "http://localhost/my-soap-service/":status_path.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://localhost/my-soap-service/":new_path of type "http://localhost/my-soap-service/":new_path.
/// Note: use wsdl2h option -g to generate this global element declaration.

/// Element "http://localhost/my-soap-service/":PathData of type "http://localhost/my-soap-service/":PathData.
/// Note: use wsdl2h option -g to generate this global element declaration.

/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/


//gsoap ns1  service name:	MySoapService 
//gsoap ns1  service type:	MySoapService 
//gsoap ns1  service port:	http://192.168.1.20:8000/my-soap-service/?service 
//gsoap ns1  service namespace:	http://localhost/my-soap-service/ 
//gsoap ns1  service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage MySoapService Definitions

@section MySoapService_bindings Bindings
  - @ref MySoapService

*/

/**

@page MySoapService Binding "MySoapService"

@section MySoapService_operations Operations of Binding  "MySoapService"
  - @ref __ns1__new_USCOREpath
  - @ref __ns1__remove_USCOREpath
  - @ref __ns1__status_USCOREpath

@section MySoapService_ports Endpoints of Binding  "MySoapService"
  - http://192.168.1.20:8000/my-soap-service/?service

Note: use wsdl2h option -N to change the service binding prefix name

*/

/******************************************************************************\
 *                                                                            *
 * MySoapService                                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * __ns1__new_USCOREpath                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__new_USCOREpath" of service binding "MySoapService"

/**

Operation details:


  - SOAP document/literal style
  - SOAP action="new_path"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__new_USCOREpath(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct ns1__new_USCOREpath*         ns1__new_USCOREpath,
    // response parameters:
    struct ns1__new_USCOREpathResponse* ns1__new_USCOREpathResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__new_USCOREpath(
    struct soap *soap,
    // request parameters:
    struct ns1__new_USCOREpath*         ns1__new_USCOREpath,
    // response parameters:
    struct ns1__new_USCOREpathResponse* ns1__new_USCOREpathResponse
  );
@endcode

*/

//gsoap ns1  service method-style:	new_USCOREpath document
//gsoap ns1  service method-encoding:	new_USCOREpath literal
//gsoap ns1  service method-action:	new_USCOREpath new_path
int __ns1__new_USCOREpath(
    struct ns1__new_USCOREpath*         ns1__new_USCOREpath,	///< Request parameter
    struct ns1__new_USCOREpathResponse* ns1__new_USCOREpathResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns1__remove_USCOREpath                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__remove_USCOREpath" of service binding "MySoapService"

/**

Operation details:


  - SOAP document/literal style
  - SOAP action="remove_path"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__remove_USCOREpath(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct ns1__remove_USCOREpath*      ns1__remove_USCOREpath,
    // response parameters:
    struct ns1__remove_USCOREpathResponse* ns1__remove_USCOREpathResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__remove_USCOREpath(
    struct soap *soap,
    // request parameters:
    struct ns1__remove_USCOREpath*      ns1__remove_USCOREpath,
    // response parameters:
    struct ns1__remove_USCOREpathResponse* ns1__remove_USCOREpathResponse
  );
@endcode

*/

//gsoap ns1  service method-style:	remove_USCOREpath document
//gsoap ns1  service method-encoding:	remove_USCOREpath literal
//gsoap ns1  service method-action:	remove_USCOREpath remove_path
int __ns1__remove_USCOREpath(
    struct ns1__remove_USCOREpath*      ns1__remove_USCOREpath,	///< Request parameter
    struct ns1__remove_USCOREpathResponse* ns1__remove_USCOREpathResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * __ns1__status_USCOREpath                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__status_USCOREpath" of service binding "MySoapService"

/**

Operation details:


  - SOAP document/literal style
  - SOAP action="status_path"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__status_USCOREpath(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct ns1__status_USCOREpath*      ns1__status_USCOREpath,
    // response parameters:
    struct ns1__status_USCOREpathResponse* ns1__status_USCOREpathResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__status_USCOREpath(
    struct soap *soap,
    // request parameters:
    struct ns1__status_USCOREpath*      ns1__status_USCOREpath,
    // response parameters:
    struct ns1__status_USCOREpathResponse* ns1__status_USCOREpathResponse
  );
@endcode

*/

//gsoap ns1  service method-style:	status_USCOREpath document
//gsoap ns1  service method-encoding:	status_USCOREpath literal
//gsoap ns1  service method-action:	status_USCOREpath status_path
int __ns1__status_USCOREpath(
    struct ns1__status_USCOREpath*      ns1__status_USCOREpath,	///< Request parameter
    struct ns1__status_USCOREpathResponse* ns1__status_USCOREpathResponse	///< Response parameter
);

/* End of mntr.h */
